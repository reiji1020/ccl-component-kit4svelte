{"version":3,"file":"Thumbnail.stories-BfOmS3tb.js","sources":["../../../src/stories/AllColors/AllColorsThumbnailWrapper.svelte","../../../src/stories/Thumbnail.stories.ts"],"sourcesContent":["<script lang=\"ts\">\n  import Thumbnail from '../../lib/Thumbnail.svelte';\n  import { CCLVividColor, CCLPastelColor } from '../../lib/const/config';\n</script>\n\n<div class=\"color-palette\">\n  <h2>Vivid Colors</h2>\n  <div class=\"color-grid\">\n    {#each Object.entries(CCLVividColor) as [name, color]}\n      <div class=\"color-sample\">\n        <Thumbnail imageSize=\"120px\" borderColor={color} src=\"thumbnail.png\" altText={name} />\n        <span>{name}</span>\n      </div>\n    {/each}\n  </div>\n\n  <h2>Pastel Colors</h2>\n  <div class=\"color-grid\">\n    {#each Object.entries(CCLPastelColor) as [name, color]}\n      <div class=\"color-sample\">\n        <Thumbnail imageSize=\"120px\" borderColor={color} src=\"thumbnail.png\" altText={name} />\n        <span>{name}</span>\n      </div>\n    {/each}\n  </div>\n</div>\n\n<style>\n  .color-palette {\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    padding: 1rem;\n  }\n  .color-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    gap: 1rem;\n  }\n  .color-sample {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 0.5rem;\n  }\n</style>\n","import type { Meta, StoryObj } from '@storybook/svelte';\nimport Thumbnail from '$lib/Thumbnail.svelte';\nimport { CCLVividColor, CCLPastelColor } from '$lib/const/config';\nimport { expect, within } from '@storybook/test';\nimport AllColorsThumbnailWrapper from './AllColors/AllColorsThumbnailWrapper.svelte';\n\nconst colorOptions = [\n  CCLVividColor.STRAWBERRY_PINK,\n  CCLVividColor.PINEAPPLE_YELLOW,\n  CCLVividColor.SODA_BLUE,\n  CCLVividColor.MELON_GREEN,\n  CCLVividColor.GRAPE_PURPLE,\n  CCLVividColor.WRAP_GREY\n];\n\nconst meta = {\n  title: 'CommonComponents/Thumbnail',\n  component: Thumbnail,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'fullscreen'\n  },\n  argTypes: {\n    borderColor: {\n      control: { type: 'select' },\n      options: colorOptions\n    },\n    altText: { control: { type: 'text' } },\n    imageSize: { control: { type: 'text' } },\n    src: { control: { type: 'text' } }\n  }\n} satisfies Meta<Thumbnail>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nconst createStory = (\n  borderColor: string,\n  altText: string,\n  imageSize: string,\n  src: string\n): Story => ({\n  args: {\n    borderColor,\n    altText,\n    imageSize,\n    src\n  },\n  play: async ({ args, canvasElement, step }) => {\n    const canvas = within(canvasElement);\n    await step('画像にalt属性が存在し、データが設定されていていること', async () => {\n      await expect(canvas.getByRole('img')).toHaveAttribute('alt', altText);\n    });\n    await step('ふちどり用として指定した色が正しいこと', async () => {\n      await expect(args.borderColor).toBe(borderColor);\n    });\n  }\n});\n\nexport const Default = createStory(\n  CCLVividColor.STRAWBERRY_PINK,\n  'Strawberry Pink',\n  '120px',\n  'thumbnail.png'\n);\n\nexport const AllColors: Story = {\n  render: () => ({ Component: AllColorsThumbnailWrapper }),\n  args: {},\n  parameters: {\n    docs: {\n      source: {\n        code: null\n      }\n    }\n  }\n};\n"],"names":["color","name","colorOptions","CCLVividColor","STRAWBERRY_PINK","PINEAPPLE_YELLOW","SODA_BLUE","MELON_GREEN","GRAPE_PURPLE","WRAP_GREY","meta","title","component","Thumbnail","tags","parameters","layout","argTypes","borderColor","control","type","options","altText","imageSize","src","createStory","args","play","canvasElement","step","canvas","within","expect","getByRole","toHaveAttribute","toBe","Default","AllColors","render","Component","AllColorsThumbnailWrapper","docs","source","code","originalSource"],"mappings":"4kTAAAA,qEAAAC,EAAA,+0BACS,iLCKT,MAAMC,EAAe,CACnBC,EAAcC,gBACdD,EAAcE,iBACdF,EAAcG,UACdH,EAAcI,YACdJ,EAAcK,aACdL,EAAcM,SAAQ,EAGlBC,GAAO,CACXC,MAAO,6BACPC,UAAWC,EACXC,KAAM,CAAC,UAAU,EACjBC,WAAY,CACVC,OAAQ,YAAA,EAEVC,SAAU,CACRC,YAAa,CACXC,QAAS,CAAEC,KAAM,QAAA,EACjBC,QAASnB,CAAAA,EAEXoB,QAAS,CAAEH,QAAS,CAAEC,KAAM,MAAA,CAAO,EACnCG,UAAW,CAAEJ,QAAS,CAAEC,KAAM,MAAA,CAAO,EACrCI,IAAK,CAAEL,QAAS,CAAEC,KAAM,MAAA,CAAO,CAAE,CAErC,EAKMK,EAAcA,CAClBP,EACAI,EACAC,EACAC,KACW,CACXE,KAAM,CACJR,YAAAA,EACAI,QAAAA,EACAC,UAAAA,EACAC,IAAAA,CAAAA,EAEFG,KAAM,MAAO,CAAED,KAAAA,EAAME,cAAAA,EAAeC,KAAAA,CAAAA,IAAW,CAC7C,MAAMC,EAASC,EAAOH,CAAa,EACnC,MAAMC,EAAK,+BAAgC,SAAY,CACrD,MAAMG,EAAOF,EAAOG,UAAU,KAAK,CAAC,EAAEC,gBAAgB,MAAOZ,CAAO,CACtE,CAAC,EACD,MAAMO,EAAK,sBAAuB,SAAY,CAC5C,MAAMG,EAAON,EAAKR,WAAW,EAAEiB,KAAKjB,CAAW,CACjD,CAAC,CACH,CACF,GAEakB,EAAUX,EACrBtB,EAAcC,gBACd,kBACA,QACA,eACF,EAEaiC,EAAmB,CAC9BC,OAAQA,KAAO,CAAEC,UAAWC,CAAAA,GAC5Bd,KAAM,CAAA,EACNX,WAAY,CACV0B,KAAM,CACJC,OAAQ,CACNC,KAAM,IAAA,CACR,CACF,CAEJ,YAACP,EAAArB,WAAA,CAAA,GAAAqB,EAAArB,WAAA0B,KAAA,CAAA,IAAAL,EAAAA,EAAArB,aAAAqB,YAAAA,EAAAK,KAAAC,OAAA,CAAAE,eAAA,0FAAA,IAAAR,GAAAA,EAAAA,EAAArB,aAAAqB,YAAAA,EAAAK,OAAAL,YAAAA,EAAAM,MAAAA,CAAA,CAAA,YAAAL,EAAAtB,WAAA,CAAA,GAAAsB,EAAAtB,WAAA0B,KAAA,CAAA,IAAAJ,EAAAA,EAAAtB,aAAAsB,YAAAA,EAAAI,KAAAC,OAAA,CAAAE,eAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAA,IAAAP,GAAAA,EAAAA,EAAAtB,aAAAsB,YAAAA,EAAAI,OAAAJ,YAAAA,EAAAK,MAAAA,CAAA,CAAA"}