{"version":3,"file":"Badge.stories-DrozF7Xl.js","sources":["../../../src/stories/AllColors/AllColorsBadgeWrapper.svelte","../../../src/stories/Badge.stories.ts"],"sourcesContent":["<script lang=\"ts\">\n  import Badge from '../../lib/Badge.svelte';\n  import { CCLVividColor, CCLPastelColor } from '../../lib/const/config';\n</script>\n\n<div class=\"color-palette\">\n  <h2>Vivid Colors (solid)</h2>\n  <div class=\"color-grid\">\n    {#each Object.entries(CCLVividColor) as [name, color]}\n      <div class=\"color-sample\">\n        <Badge {color} variant=\"solid\" size=\"md\" label={name} />\n      </div>\n    {/each}\n  </div>\n\n  <h2>Pastel Colors (solid, vivid text)</h2>\n  <div class=\"color-grid\">\n    {#each Object.entries(CCLPastelColor) as [name, color]}\n      <div class=\"color-sample\">\n        <Badge {color} variant=\"solid\" size=\"md\" label={name} />\n      </div>\n    {/each}\n  </div>\n\n  <h2>Vivid Colors (outline)</h2>\n  <div class=\"color-grid\">\n    {#each Object.entries(CCLVividColor) as [name, color]}\n      <div class=\"color-sample\">\n        <Badge {color} variant=\"outline\" size=\"md\" label={name} />\n      </div>\n    {/each}\n  </div>\n\n  <h2>Pastel Colors (outline, vivid text)</h2>\n  <div class=\"color-grid\">\n    {#each Object.entries(CCLPastelColor) as [name, color]}\n      <div class=\"color-sample\">\n        <Badge {color} variant=\"outline\" size=\"md\" label={name} />\n      </div>\n    {/each}\n  </div>\n</div>\n\n<style>\n  .color-palette {\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    padding: 1rem;\n  }\n  .color-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\n    gap: 0.75rem;\n  }\n  .color-sample {\n    display: flex;\n    justify-content: center;\n  }\n</style>\n","import type { Meta, StoryObj } from '@storybook/svelte';\nimport { expect, within } from '@storybook/test';\nimport Badge from '$lib/Badge.svelte';\nimport { CCLVividColor, CCLPastelColor } from '$lib/const/config';\nimport AllColorsBadgeWrapper from './AllColors/AllColorsBadgeWrapper.svelte';\n\nconst colorOptions = [...Object.values(CCLVividColor), ...Object.values(CCLPastelColor)];\n\nconst meta = {\n  title: 'CommonComponents/Badge',\n  component: Badge,\n  tags: ['autodocs'],\n  parameters: { layout: 'padded' },\n  argTypes: {\n    color: { control: { type: 'select' }, options: colorOptions, description: 'バッジの背景色' },\n    variant: {\n      control: { type: 'radio' },\n      options: ['solid', 'outline'],\n      description: 'バッジのスタイル'\n    },\n    size: {\n      control: { type: 'radio' },\n      options: ['sm', 'md', 'lg'],\n      description: 'バッジのサイズ'\n    },\n    label: { control: { type: 'text' }, description: '表示テキスト' },\n    ariaLabel: { control: { type: 'text' }, description: 'アクセシビリティ用ラベル' }\n  }\n} satisfies Meta<Badge>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nconst createStory = (\n  color: string,\n  variant: 'solid' | 'outline',\n  size: 'sm' | 'md' | 'lg',\n  label: string\n): Story => ({\n  args: { color, variant, size, label },\n  play: async ({ args, canvasElement, step }) => {\n    const canvas = within(canvasElement);\n    await step('バッジのテキストが表示されていること', async () => {\n      const el = await canvas.findByText(label);\n      await expect(el).toBeInTheDocument();\n    });\n    await step('バリエーションとサイズの属性が設定されていること', async () => {\n      const el = await canvas.findByText(label);\n      const host = el.closest('.ccl-badge') as HTMLElement;\n      await expect(host).toHaveAttribute('data-variant', variant);\n      await expect(host).toHaveAttribute('data-size', size);\n    });\n    await step('色プロパティが設定されていること', async () => {\n      await expect(args.color).toBe(color);\n    });\n  }\n});\n\nexport const Default: Story = createStory(CCLVividColor.SODA_BLUE, 'solid', 'md', 'New');\n\nexport const Outline: Story = createStory(CCLVividColor.STRAWBERRY_PINK, 'outline', 'md', 'Beta');\n\nexport const LargePastel: Story = {\n  args: { color: CCLPastelColor.LEMON_YELLOW, variant: 'solid', size: 'lg', label: 'Featured' },\n  play: async ({ args, canvasElement, step }) => {\n    const canvas = within(canvasElement);\n    await step('バッジのテキストが表示されていること', async () => {\n      const el = await canvas.findByText('Featured');\n      await expect(el).toBeInTheDocument();\n    });\n    await step('パステル指定時、テキスト色が同系統ビビッドに設定されること', async () => {\n      const el = await canvas.findByText('Featured');\n      const host = el.closest('.ccl-badge') as HTMLElement;\n      await expect(host.getAttribute('data-variant')).toBe('solid');\n      await expect(host.getAttribute('data-size')).toBe('lg');\n      // inline style の --badge-fg が対応するビビッド色であること\n      const fg = host.style.getPropertyValue('--badge-fg').trim();\n      await expect(fg).toBe(`var(${CCLVividColor.PINEAPPLE_YELLOW})`);\n      // 引数の color 自体はパステルが渡っていること\n      await expect(args.color).toBe(CCLPastelColor.LEMON_YELLOW);\n    });\n  }\n};\n\nexport const AllColors: Story = {\n  render: () => ({ Component: AllColorsBadgeWrapper }),\n  args: {},\n  parameters: {\n    docs: {\n      source: { code: null }\n    }\n  }\n};\n"],"names":["name","colorOptions","Object","values","CCLVividColor","CCLPastelColor","meta","title","component","Badge","tags","parameters","layout","argTypes","color","control","type","options","description","variant","size","label","ariaLabel","createStory","args","play","canvasElement","step","canvas","within","el","findByText","expect","toBeInTheDocument","host","closest","toHaveAttribute","toBe","Default","SODA_BLUE","Outline","STRAWBERRY_PINK","LargePastel","LEMON_YELLOW","getAttribute","fg","style","getPropertyValue","trim","PINEAPPLE_YELLOW","AllColors","render","Component","AllColorsBadgeWrapper","docs","source","code","originalSource"],"mappings":"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"}