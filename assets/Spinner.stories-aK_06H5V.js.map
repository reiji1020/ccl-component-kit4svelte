{"version":3,"file":"Spinner.stories-aK_06H5V.js","sources":["../../../src/stories/AllColors/AllColorsSpinnerWrapper.svelte","../../../src/stories/Spinner.stories.ts"],"sourcesContent":["<script lang=\"ts\">\n  import Spinner from '../../lib/Spinner.svelte';\n  import { CCLVividColor, CCLPastelColor } from '../../lib/const/config';\n\n  const vividColors = [\n    { name: 'STRAWBERRY_PINK', value: CCLVividColor.STRAWBERRY_PINK },\n    { name: 'PINEAPPLE_YELLOW', value: CCLVividColor.PINEAPPLE_YELLOW },\n    { name: 'SODA_BLUE', value: CCLVividColor.SODA_BLUE },\n    { name: 'MELON_GREEN', value: CCLVividColor.MELON_GREEN },\n    { name: 'GRAPE_PURPLE', value: CCLVividColor.GRAPE_PURPLE },\n    { name: 'WRAP_GREY', value: CCLVividColor.WRAP_GREY }\n  ];\n\n  const pastelColors = [\n    { name: 'PEACH_PINK', value: CCLPastelColor.PEACH_PINK },\n    { name: 'LEMON_YELLOW', value: CCLPastelColor.LEMON_YELLOW },\n    { name: 'SUGAR_BLUE', value: CCLPastelColor.SUGAR_BLUE },\n    { name: 'MATCHA_GREEN', value: CCLPastelColor.MATCHA_GREEN },\n    { name: 'AKEBI_PURPLE', value: CCLPastelColor.AKEBI_PURPLE },\n    { name: 'CLOUD_GREY', value: CCLPastelColor.CLOUD_GREY }\n  ];\n</script>\n\n<div style=\"display: flex; flex-direction: column; gap: 40px; padding: 20px;\">\n  <div>\n    <h3>Vivid Colors</h3>\n    <div style=\"display: flex; flex-wrap: wrap; gap: 20px;\">\n      {#each vividColors as colorOption}\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 10px; border: 1px solid #eee; padding: 15px; border-radius: 8px;\">\n          <Spinner color={colorOption.value} size=\"60px\" borderWidth=\"6px\" />\n          <span style=\"font-size: 14px; color: #555;\">{colorOption.name}</span>\n        </div>\n      {/each}\n    </div>\n  </div>\n\n  <div>\n    <h3>Pastel Colors</h3>\n    <div style=\"display: flex; flex-wrap: wrap; gap: 20px;\">\n      {#each pastelColors as colorOption}\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 10px; border: 1px solid #eee; padding: 15px; border-radius: 8px;\">\n          <Spinner color={colorOption.value} size=\"60px\" borderWidth=\"6px\" />\n          <span style=\"font-size: 14px; color: #555;\">{colorOption.name}</span>\n        </div>\n      {/each}\n    </div>\n  </div>\n</div>\n","import type { Meta, StoryObj } from '@storybook/svelte';\nimport Spinner from '../lib/Spinner.svelte';\n\nimport { CCLVividColor, CCLPastelColor } from '../lib/const/config';\n\nconst colorOptions = [\n  CCLVividColor.STRAWBERRY_PINK,\n  CCLVividColor.PINEAPPLE_YELLOW,\n  CCLVividColor.SODA_BLUE,\n  CCLVividColor.MELON_GREEN,\n  CCLVividColor.GRAPE_PURPLE,\n  CCLVividColor.WRAP_GREY,\n  CCLPastelColor.PEACH_PINK,\n  CCLPastelColor.LEMON_YELLOW,\n  CCLPastelColor.SUGAR_BLUE,\n  CCLPastelColor.MATCHA_GREEN,\n  CCLPastelColor.AKEBI_PURPLE,\n  CCLPastelColor.CLOUD_GREY\n];\n\nconst meta = {\n  title: 'CommonComponents/Spinner',\n  component: Spinner,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  argTypes: {\n    size: {\n      control: { type: 'text' },\n      description: 'スピナーのサイズ (例: \"40px\", \"2em\")'\n    },\n    color: {\n      control: { type: 'select' },\n      options: colorOptions,\n      description: 'スピナーの色'\n    },\n    borderWidth: {\n      control: { type: 'text' },\n      description: 'スピナーのボーダー幅 (例: \"4px\", \"0.2em\")'\n    }\n  }\n} satisfies Meta<Spinner>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nimport { expect } from '@storybook/test';\nimport { within } from '@storybook/test';\n\nexport const Default: Story = {\n  args: {\n    size: '50px',\n    color: CCLVividColor.STRAWBERRY_PINK,\n    borderWidth: '5px'\n  },\n  play: async ({ canvasElement, step, args }) => {\n    const canvas = within(canvasElement);\n    await step('スピナーが表示されていること', async () => {\n      const spinner = canvas.getByRole('status');\n      await expect(spinner).toBeInTheDocument();\n    });\n    await step('スピナーのサイズが指定通りであること', async () => {\n      const spinner = canvas.getByRole('status');\n      await expect(spinner).toHaveStyle(`width: ${args.size}; height: ${args.size};`);\n    });\n    await step('スピナーのボーダー幅が指定通りであること', async () => {\n      const spinner = canvas.getByRole('status');\n      await expect(spinner).toHaveStyle(`border-width: ${args.borderWidth};`);\n    });\n  }\n};\n\nexport const Large: Story = {\n  args: {\n    size: '80px',\n    color: CCLVividColor.MELON_GREEN,\n    borderWidth: '8px'\n  },\n  play: async ({ canvasElement, step, args }) => {\n    const canvas = within(canvasElement);\n    await step('スピナーが表示されていること', async () => {\n      const spinner = canvas.getByRole('status');\n      await expect(spinner).toBeInTheDocument();\n    });\n    await step('スピナーのサイズが指定通りであること', async () => {\n      const spinner = canvas.getByRole('status');\n      await expect(spinner).toHaveStyle(`width: ${args.size}; height: ${args.size};`);\n    });\n    await step('スピナーのボーダー幅が指定通りであること', async () => {\n      const spinner = canvas.getByRole('status');\n      await expect(spinner).toHaveStyle(`border-width: ${args.borderWidth};`);\n    });\n  }\n};\n\nimport AllColorsSpinnerWrapper from './AllColors/AllColorsSpinnerWrapper.svelte';\n\nexport const Small: Story = {\n  args: {\n    size: '20px',\n    color: CCLVividColor.SODA_BLUE,\n    borderWidth: '2px'\n  },\n  play: async ({ canvasElement, step, args }) => {\n    const canvas = within(canvasElement);\n    await step('スピナーが表示されていること', async () => {\n      const spinner = canvas.getByRole('status');\n      await expect(spinner).toBeInTheDocument();\n    });\n    await step('スピナーのサイズが指定通りであること', async () => {\n      const spinner = canvas.getByRole('status');\n      await expect(spinner).toHaveStyle(`width: ${args.size}; height: ${args.size};`);\n    });\n    await step('スピナーのボーダー幅が指定通りであること', async () => {\n      const spinner = canvas.getByRole('status');\n      await expect(spinner).toHaveStyle(`border-width: ${args.borderWidth};`);\n    });\n  }\n};\n\nexport const AllColors: Story = {\n  render: () => ({ Component: AllColorsSpinnerWrapper }),\n  args: {},\n  parameters: {\n    docs: {\n      source: {\n        code: null\n      }\n    }\n  }\n};\n"],"names":["target","div","anchor","cov_8s23nsiko","s","colorOptions","CCLVividColor","STRAWBERRY_PINK","PINEAPPLE_YELLOW","SODA_BLUE","MELON_GREEN","GRAPE_PURPLE","WRAP_GREY","CCLPastelColor","PEACH_PINK","LEMON_YELLOW","SUGAR_BLUE","MATCHA_GREEN","AKEBI_PURPLE","CLOUD_GREY","meta","title","component","Spinner","tags","parameters","layout","argTypes","size","control","type","description","color","options","borderWidth","Default","args","play","canvasElement","step","canvas","within","spinner","getByRole","expect","toBeInTheDocument","toHaveStyle","Large","Small","AllColors","render","Component","AllColorsSpinnerWrapper","docs","source","code","originalSource"],"mappings":"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"}