{"version":3,"file":"Tabs-Dczzeb_s.js","sources":["../../../src/lib/scripts/tabsContext.ts","../../../src/lib/TabPanel.svelte","../../../src/lib/Tabs.svelte"],"sourcesContent":["export const TABS_CONTEXT_KEY = Symbol('tabs-context');\n","<script lang=\"ts\">\n\timport { getContext, onMount } from 'svelte';\n\n\t/**\n\t * タブのボタンに表示されるテキスト\n\t * @type string\n\t */\n\texport let label: string;\n\n\t/**\n\t * このタブがアクティブな時のインジケーターの色\n\t * @default --strawberry-pink\n\t * @type string\n\t */\n\texport let color: string = '--strawberry-pink';\n\n\t/**\n\t * このタブを無効化するかどうか\n\t * @default false\n\t * @type boolean\n\t */\n\texport let disabled: boolean = false;\n\n\timport { TABS_CONTEXT_KEY } from './scripts/tabsContext';\n\tconst { addTab, activeTabLabel } = getContext(TABS_CONTEXT_KEY);\n\n\tonMount(() => {\n\t\taddTab({ label, color, disabled });\n\t});\n\n\t$: isActive = $activeTabLabel === label;\n</script>\n\n{#if isActive}\n\t<div\n\t\trole=\"tabpanel\"\n\t\tid={`tab-panel-${label}`}\n\t\taria-labelledby={`tab-button-${label}`}\n\t\tclass=\"tab-panel-content\"\n\t>\n\t\t<slot />\n\t</div>\n{/if}\n\n<style>\n\t.tab-panel-content {\n\t\t/* Add any panel-specific styling here if needed */\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { setContext } from 'svelte';\n\timport { writable } from 'svelte/store';\n\n\timport { TABS_CONTEXT_KEY } from './scripts/tabsContext';\n\n\tconst tabData = writable([]);\n\tconst activeTabLabel = writable('');\n\n\tsetContext(TABS_CONTEXT_KEY, {\n\t\taddTab: (tab) => {\n\t\t\ttabData.update((currentTabs) => {\n\t\t\t\tconst newTabs = [...currentTabs, tab];\n\t\t\t\t// Set the first tab as active by default\n\t\t\t\tif (newTabs.length === 1) {\n\t\t\t\t\tactiveTabLabel.set(tab.label);\n\t\t\t\t}\n\t\t\t\treturn newTabs;\n\t\t\t});\n\t\t},\n\t\tactiveTabLabel\n\t});\n\n\tlet activeColor = '--strawberry-pink';\n\t$: {\n\t\tconst activeTab = $tabData.find((t) => t.label === $activeTabLabel);\n\t\tactiveColor = activeTab ? activeTab.color : '--strawberry-pink';\n\t}\n</script>\n\n<div class=\"tabs-container\">\n\t<div role=\"tablist\" class=\"tab-list\">\n\t\t{#each $tabData as tab}\n\t\t\t<button\n\t\t\t\trole=\"tab\"\n\t\t\t\tclass=\"tab-button\"\n\t\t\t\tclass:active={tab.label === $activeTabLabel}\n\t\t\t\taria-selected={tab.label === $activeTabLabel}\n\t\t\t\taria-controls={`tab-panel-${tab.label}`}\n\t\t\t\tid={`tab-button-${tab.label}`}\n\t\t\t\ton:click={() => activeTabLabel.set(tab.label)}\n\t\t\t\tstyle=\"--active-color: var({tab.color});\"\n\t\t\t\tdisabled={tab.disabled}\n\t\t\t>\n\t\t\t\t{tab.label}\n\t\t\t</button>\n\t\t{/each}\n\t</div>\n\n\t<div class=\"tab-content\">\n\t\t<slot />\n\t</div>\n</div>\n\n<style>\n\t.tab-list {\n\t\tdisplay: flex;\n\t\tborder-bottom: 2px solid #eee;\n\t}\n\n\t.tab-button {\n\t\tpadding: 12px 24px;\n\t\tcursor: pointer;\n\t\tborder: none;\n\t\tbackground: none;\n\t\tfont-size: 1rem;\n\t\tcolor: var(--wrap-grey);\n\t\tborder-bottom: 3px solid transparent;\n\t\tmargin-bottom: -2px; /* Overlap the container's border */\n\t\ttransition: border-color 0.2s ease-in-out;\n\t}\n\n\t.tab-button.active {\n\t\tborder-bottom-color: var(--active-color);\n\t\tfont-weight: bold;\n\t\tcolor: black;\n\t}\n\n\t.tab-button:hover:not(.active) {\n\t\tcolor: black;\n\t}\n\n\t.tab-content {\n\t\tpadding: 24px 8px;\n\t}\n\n\t.tab-button:disabled {\n\t\topacity: 0.6;\n\t\tcursor: not-allowed;\n\t}\n</style>\n"],"names":["TABS_CONTEXT_KEY","cov_8xcdeu5lk","s","Symbol","addTab","activeTabLabel","cov_4j782yltc","getContext","insert_hydration","target","button","anchor","cov_16c4xhwqzd","ctx"],"mappings":"gqCAAO,MAAMA,GAAAC,EAAA,EAAAC,EAAA,CAAA,IAAmBC,OAAO,cAAc,4ttBCC3CC,OAAAA,EAAAC,eAAAA,CAAA,GAAAC,IAAAJ,QAA2BK,EAAAP,CAAA,GAAAM,OAAAA,EAAA,EAAAJ,44hCCC3BM,EA0CLC,EAAAC,EAAAC,CAAA,EAAAC,EAAA,EAAAV,EAAA,EAAA,mqCA3CKW,EAAA,CAAA,CAAA,k+CAAAA,EAAA,CAAA,CAAA"}