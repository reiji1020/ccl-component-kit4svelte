{"version":3,"file":"DatePicker.stories-BjMA8FC5.js","sources":["../../../src/stories/AllColors/AllColorsDatePickerWrapper.svelte","../../../src/stories/DatePicker.stories.ts"],"sourcesContent":["<script lang=\"ts\">\n  import DatePicker from '../../lib/DatePicker.svelte';\n  import { CCLVividColor, CCLPastelColor } from '../../lib/const/config';\n</script>\n\n<div class=\"color-palette\">\n  <h2>Vivid Colors</h2>\n  <div class=\"color-grid\">\n    {#each Object.entries(CCLVividColor) as [name, color]}\n      <div class=\"color-sample\">\n        <DatePicker id={`vivid-${name.toLowerCase()}`} placeholder={name} borderColor={color} />\n      </div>\n    {/each}\n  </div>\n\n  <h2>Pastel Colors</h2>\n  <div class=\"color-grid\">\n    {#each Object.entries(CCLPastelColor) as [name, color]}\n      <div class=\"color-sample\">\n        <DatePicker id={`pastel-${name.toLowerCase()}`} placeholder={name} borderColor={color} />\n      </div>\n    {/each}\n  </div>\n</div>\n\n<style>\n  .color-palette {\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n  }\n  .color-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    gap: 1rem;\n  }\n  .color-sample {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n  }\n</style>\n","import type { Meta, StoryObj } from '@storybook/svelte';\nimport DatePicker from '../lib/DatePicker.svelte';\nimport { CCLVividColor, CCLPastelColor } from '../lib/const/config';\nimport { expect, fn, userEvent, within } from '@storybook/test';\nimport { DateTime } from 'luxon';\nimport AllColorsDatePickerWrapper from './AllColors/AllColorsDatePickerWrapper.svelte';\n\nconst colorOptions = Object.values(CCLVividColor);\n\nconst meta = {\n  title: 'Form/DatePicker',\n  component: DatePicker,\n  tags: ['autodocs'],\n  argTypes: {\n    selectedDate: {\n      control: { type: 'date' }\n    },\n    label: {\n      control: { type: 'text' }\n    },\n    id: {\n      control: { type: 'text' }\n    },\n    placeholder: {\n      control: { type: 'text' }\n    },\n    borderColor: {\n      control: { type: 'select' },\n      options: Object.values(CCLVividColor)\n    },\n    disableBlurClose: {\n      control: { type: 'boolean' }\n    }\n  }\n} satisfies Meta<DatePicker>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nconst createStory = (args: Story['args']): Story => ({\n  args: {\n    ...args,\n    disableBlurClose: true // テスト中はblurで閉じないようにする\n  },\n  play: async ({ canvasElement, step }) => {\n    const canvas = within(canvasElement);\n    const input = canvas.getByPlaceholderText(args.placeholder || '日付を選択');\n\n    await step('日付ピッカーが開くこと', async () => {\n      await userEvent.click(input);\n      await expect(canvas.getByText(/\\d{4}年\\d{2}月/)).toBeInTheDocument(); // 例: 2023年10月\n    });\n\n    await step('日付を選択できること', async () => {\n      const today = DateTime.local(); // Luxonを使用して現在の日付を取得\n      const dayOfMonth = today.day;\n      const dayButton = await canvas.findByRole('button', { name: String(dayOfMonth) });\n      await userEvent.click(dayButton);\n      await expect(input).toHaveValue(today.toFormat('yyyy/MM/dd')); // Luxonのフォーマットに合わせる\n    });\n\n    await step('日付ピッカーが閉じること', async () => {\n      await expect(canvas.queryByText(/\\d{4}年\\d{2}月/)).not.toBeInTheDocument();\n    });\n  }\n});\n\nexport const Default = createStory({\n  placeholder: '日付を選択',\n  selectedDate: null,\n  borderColor: CCLVividColor.STRAWBERRY_PINK\n});\n\nexport const WithInitialDate = createStory({\n  placeholder: '初期日付',\n  selectedDate: new Date('2023-01-15'),\n  borderColor: CCLVividColor.PINEAPPLE_YELLOW\n});\n\nWithInitialDate.play = async ({ canvasElement, step, args }) => {\n  const canvas = within(canvasElement);\n  const input = canvas.getByPlaceholderText(args.placeholder || '初期日付');\n\n  await step('初期日付が正しく表示されていること', async () => {\n    const expectedDate = DateTime.fromJSDate(args.selectedDate as Date).toFormat('yyyy/MM/dd');\n    await expect(input).toHaveValue(expectedDate);\n  });\n};\n\nexport const AllColors: Story = {\n  render: () => ({ Component: AllColorsDatePickerWrapper }),\n  args: {},\n  parameters: {\n    docs: {\n      source: {\n        code: null\n      }\n    }\n  }\n};\n"],"names":["$0","cov_1eeswispnq","s","$","f","name","toLowerCase","color","Object","entries","CCLPastelColor","$$anchor","$$item","$$array_1","values","CCLVividColor","meta","title","component","DatePicker","tags","argTypes","selectedDate","control","type","label","id","placeholder","borderColor","options","disableBlurClose","createStory","args","play","canvasElement","step","canvas","within","input","getByPlaceholderText","userEvent","click","expect","getByText","toBeInTheDocument","today","DateTime","local","dayOfMonth","day","dayButton","findByRole","String","toHaveValue","toFormat","queryByText","not","Default","STRAWBERRY_PINK","WithInitialDate","Date","PINEAPPLE_YELLOW","expectedDate","fromJSDate","AllColors","render","Component","AllColorsDatePickerWrapper","parameters","docs","source","code","originalSource"],"mappings":"00UAAA,IAAAA,GAAAC,IAAAC,EAAA,EAAA,IAAAC,EAAA,KAAAF,EAAA,EAAAG,EAAA,CAAA,IAAAH,EAAA,EAAAC,EAAA,EAAA,IAAA,SAAAG,EAAA,EAAAC,YAAA,CAAA,GAAA,GAAAL,EAAA,EAAAC,EAAA,EAAA,sGAAAG,EAAA,mDAAAE,EAAA,oGAQyDN,EAAA,EAAAG,EAAA,EAAA,IAAAH,EAAA,EAAAC,EAAA,EAAA,IAAAM,OAAAC,QAAAC,CAAA,GAAAP,EAAA,CAAAQ,EAAAC,IAAA,CAAAX,EAAA,EAAAG,EAAA,EAAA,mFAAAC,EAAAA,KAAAJ,EAAA,EAAAG,EAAA,EAAA,IAAAH,EAAA,EAAAC,EAAA,EAAA,IAAAC,EAAAU,CAAA,EAAA,CAAA,GAAAZ,EAAA,EAAAC,YAAAK,EAAAA,KAAAN,EAAA,EAAAG,EAAA,EAAA,IAAAH,EAAA,EAAAC,EAAA,EAAA,IAAAC,EAAAU,CAAA,EAAA,CAAA,4XAPhD,kLCMYL,OAAOM,OAAOC,CAAa,EAEhD,MAAMC,GAAO,CACXC,MAAO,kBACPC,UAAWC,EACXC,KAAM,CAAC,UAAU,EACjBC,SAAU,CACRC,aAAc,CACZC,QAAS,CAAEC,KAAM,MAAA,CAAO,EAE1BC,MAAO,CACLF,QAAS,CAAEC,KAAM,MAAA,CAAO,EAE1BE,GAAI,CACFH,QAAS,CAAEC,KAAM,MAAA,CAAO,EAE1BG,YAAa,CACXJ,QAAS,CAAEC,KAAM,MAAA,CAAO,EAE1BI,YAAa,CACXL,QAAS,CAAEC,KAAM,QAAA,EACjBK,QAASrB,OAAOM,OAAOC,CAAa,CAAA,EAEtCe,iBAAkB,CAChBP,QAAS,CAAEC,KAAM,SAAA,CAAU,CAC7B,CAEJ,EAKMO,EAAeC,IAAgC,CACnDA,KAAM,CACJ,GAAGA,EACHF,iBAAkB,EAAA,EAEpBG,KAAM,MAAO,CAAEC,cAAAA,EAAeC,KAAAA,CAAAA,IAAW,CACvC,MAAMC,EAASC,EAAOH,CAAa,EAC7BI,EAAQF,EAAOG,qBAAqBP,EAAKL,aAAe,OAAO,EAErE,MAAMQ,EAAK,cAAe,SAAY,CACpC,MAAMK,EAAUC,MAAMH,CAAK,EAC3B,MAAMI,EAAON,EAAOO,UAAU,cAAc,CAAC,EAAEC,kBAAAA,CACjD,CAAC,EAED,MAAMT,EAAK,aAAc,SAAY,CACnC,MAAMU,EAAQC,EAASC,MAAAA,EACjBC,EAAaH,EAAMI,IACnBC,EAAY,MAAMd,EAAOe,WAAW,SAAU,CAAE9C,KAAM+C,OAAOJ,CAAU,CAAA,CAAG,EAChF,MAAMR,EAAUC,MAAMS,CAAS,EAC/B,MAAMR,EAAOJ,CAAK,EAAEe,YAAYR,EAAMS,SAAS,YAAY,CAAC,CAC9D,CAAC,EAED,MAAMnB,EAAK,eAAgB,SAAY,CACrC,MAAMO,EAAON,EAAOmB,YAAY,cAAc,CAAC,EAAEC,IAAIZ,kBAAAA,CACvD,CAAC,CACH,CACF,GAEaa,EAAU1B,EAAY,CACjCJ,YAAa,QACbL,aAAc,KACdM,YAAab,EAAc2C,eAC7B,CAAC,EAEYC,EAAkB5B,EAAY,CACzCJ,YAAa,OACbL,aAAc,IAAIsC,KAAK,YAAY,EACnChC,YAAab,EAAc8C,gBAC7B,CAAC,EAEDF,EAAgB1B,KAAO,MAAO,CAAEC,cAAAA,EAAeC,KAAAA,EAAMH,KAAAA,CAAK,IAAM,CAE9D,MAAMM,EADSD,EAAOH,CAAa,EACdK,qBAAqBP,EAAKL,aAAe,MAAM,EAEpE,MAAMQ,EAAK,oBAAqB,SAAY,CAC1C,MAAM2B,EAAehB,EAASiB,WAAW/B,EAAKV,YAAoB,EAAEgC,SAAS,YAAY,EACzF,MAAMZ,EAAOJ,CAAK,EAAEe,YAAYS,CAAY,CAC9C,CAAC,CACH,EAEA,MAAaE,EAAmB,CAC9BC,OAAQA,KAAO,CAAEC,UAAWC,CAAAA,GAC5BnC,KAAM,CAAA,EACNoC,WAAY,CACVC,KAAM,CACJC,OAAQ,CACNC,KAAM,IAAA,CACR,CACF,CAEJ,YAACd,EAAAW,WAAA,CAAA,GAAAX,EAAAW,WAAAC,KAAA,CAAA,IAAAZ,EAAAA,EAAAW,aAAAX,YAAAA,EAAAY,KAAAC,OAAA,CAAAE,eAAA;AAAA;AAAA;AAAA;AAAA,IAAA,IAAAf,GAAAA,EAAAA,EAAAW,aAAAX,YAAAA,EAAAY,OAAAZ,YAAAA,EAAAa,MAAAA,CAAA,CAAA,YAAAX,EAAAS,WAAA,CAAA,GAAAT,EAAAS,WAAAC,KAAA,CAAA,IAAAV,EAAAA,EAAAS,aAAAT,YAAAA,EAAAU,KAAAC,OAAA,CAAAE,eAAA;AAAA;AAAA;AAAA;AAAA,IAAA,IAAAb,GAAAA,EAAAA,EAAAS,aAAAT,YAAAA,EAAAU,OAAAV,YAAAA,EAAAW,MAAAA,CAAA,CAAA,YAAAN,EAAAI,WAAA,CAAA,GAAAJ,EAAAI,WAAAC,KAAA,CAAA,IAAAL,EAAAA,EAAAI,aAAAJ,YAAAA,EAAAK,KAAAC,OAAA,CAAAE,eAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAA,IAAAR,GAAAA,EAAAA,EAAAI,aAAAJ,YAAAA,EAAAK,OAAAL,YAAAA,EAAAM,MAAAA,CAAA,CAAA"}