{"version":3,"file":"Checkbox.stories-CnI4ck1Z.js","sources":["../../../src/stories/MultipleCheckboxesWrapper.svelte","../../../src/stories/AllColors/AllColorsCheckboxWrapper.svelte","../../../src/stories/Checkbox.stories.ts"],"sourcesContent":["<script lang=\"ts\">\n  import Checkbox from '../lib/Checkbox.svelte';\n\n  export let checked1: boolean = false;\n  export let checked2: boolean = false;\n  export let checked3: boolean = false;\n</script>\n\n<div>\n  <Checkbox label=\"Option 1\" bind:checked={checked1} />\n  <Checkbox label=\"Option 2\" bind:checked={checked2} />\n  <Checkbox label=\"Option 3\" bind:checked={checked3} />\n</div>\n","<script lang=\"ts\">\n  import Checkbox from '../../lib/Checkbox.svelte';\n  import { CCLVividColor, CCLPastelColor } from '../../lib/const/config';\n</script>\n\n<div class=\"color-palette\">\n  <h2>Vivid Colors</h2>\n  <div class=\"color-grid\">\n    {#each Object.entries(CCLVividColor) as [name, color]}\n      <div class=\"color-sample\">\n        <Checkbox label={name} checked={true} {color} />\n      </div>\n    {/each}\n  </div>\n\n  <h2>Pastel Colors</h2>\n  <div class=\"color-grid\">\n    {#each Object.entries(CCLPastelColor) as [name, color]}\n      <div class=\"color-sample\">\n        <Checkbox label={name} checked={true} {color} />\n      </div>\n    {/each}\n  </div>\n</div>\n\n<style>\n  .color-palette {\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n  }\n  .color-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    gap: 1rem;\n  }\n  .color-sample {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n  }\n</style>\n","import type { Meta, StoryObj } from '@storybook/svelte';\nimport Checkbox from '../lib/Checkbox.svelte';\nimport { CCLVividColor } from '../lib/const/config';\nimport { expect, fn, userEvent, within } from '@storybook/test';\nimport MultipleCheckboxesWrapper from './MultipleCheckboxesWrapper.svelte';\nimport AllColorsCheckboxWrapper from './AllColors/AllColorsCheckboxWrapper.svelte';\n\nconst meta = {\n  title: 'Form/Checkbox',\n  component: Checkbox,\n  tags: ['autodocs'],\n  argTypes: {\n    label: {\n      control: { type: 'text' }\n    },\n    checked: {\n      control: { type: 'boolean' }\n    },\n    color: {\n      control: { type: 'select' },\n      options: Object.values(CCLVividColor)\n    },\n    disabled: {\n      control: { type: 'boolean' }\n    },\n    onChange: fn()\n  }\n} satisfies Meta<Checkbox>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nconst createStory = (initialArgs: Story['args']): Story => ({\n  args: {\n    ...initialArgs,\n    onChange: fn() // Ensure onChange is always a spy\n  },\n  play: async ({ args, canvasElement, step }) => {\n    const canvas = within(canvasElement);\n    const checkbox = canvas.getByRole('checkbox', { hidden: true });\n\n    await step('初期状態が正しいこと', async () => {\n      if (args?.checked) {\n        await expect(checkbox).toBeChecked();\n      } else {\n        await expect(checkbox).not.toBeChecked();\n      }\n    });\n\n    await step('クリック操作が正しく行われること', async () => {\n      await userEvent.click(checkbox);\n      if (args?.disabled) {\n        await expect(args.onChange).not.toHaveBeenCalled();\n        await step('非活性時は状態が変化しないこと', async () => {\n          if (args?.checked) {\n            await expect(checkbox).toBeChecked();\n          } else {\n            await expect(checkbox).not.toBeChecked();\n          }\n        });\n      } else {\n        await expect(args.onChange).toHaveBeenCalledOnce();\n        await step('活性時は状態が変化すること', async () => {\n          if (args?.checked) {\n            await expect(checkbox).not.toBeChecked(); // Will be false after click\n          } else {\n            await expect(checkbox).toBeChecked(); // Will be true after click\n          }\n        });\n      }\n    });\n  }\n});\n\nexport const Default = createStory({ label: 'Checkbox', checked: false });\nexport const Checked = createStory({ label: 'Checked', checked: true });\nexport const Disabled = createStory({ label: 'Disabled', checked: false, disabled: true });\nexport const DisabledChecked = createStory({\n  label: 'Disabled Checked',\n  checked: true,\n  disabled: true\n});\n\nexport const MultipleCheckboxes: Story = {\n  render: () => ({\n    Component: MultipleCheckboxesWrapper,\n    props: {\n      checked1: false,\n      checked2: false,\n      checked3: false\n    }\n  }),\n  play: async ({ canvasElement, step }) => {\n    const canvas = within(canvasElement);\n\n    const checkbox1 = await canvas.findByRole('checkbox', { hidden: true, name: 'Option 1' });\n    const checkbox2 = await canvas.findByRole('checkbox', { hidden: true, name: 'Option 2' });\n    const checkbox3 = await canvas.findByRole('checkbox', { hidden: true, name: 'Option 3' });\n\n    await step('複数のチェックボックスが存在することを確認', async () => {\n      await expect(checkbox1).toBeInTheDocument();\n      await expect(checkbox2).toBeInTheDocument();\n      await expect(checkbox3).toBeInTheDocument();\n    });\n\n    await step('Option 1をクリックし、状態が正しく切り替わること', async () => {\n      await userEvent.click(checkbox1);\n      await expect(checkbox1).toBeChecked();\n      await expect(checkbox2).not.toBeChecked();\n      await expect(checkbox3).not.toBeChecked();\n    });\n\n    await step('Option 2をクリックし、状態が正しく切り替わること', async () => {\n      await userEvent.click(checkbox2);\n      await expect(checkbox1).toBeChecked();\n      await expect(checkbox2).toBeChecked();\n      await expect(checkbox3).not.toBeChecked();\n    });\n\n    await step('Option 3をクリックし、状態が正しく切り替わること', async () => {\n      await userEvent.click(checkbox3);\n      await expect(checkbox1).toBeChecked();\n      await expect(checkbox2).toBeChecked();\n      await expect(checkbox3).toBeChecked();\n    });\n\n    await step('Option 1を再度クリックし、チェックが外れること', async () => {\n      await userEvent.click(checkbox1);\n      await expect(checkbox1).not.toBeChecked();\n      await expect(checkbox2).toBeChecked();\n      await expect(checkbox3).toBeChecked();\n    });\n  }\n};\n\nexport const AllColors: Story = {\n  render: () => ({ Component: AllColorsCheckboxWrapper }),\n  args: {},\n  parameters: {\n    docs: {\n      source: {\n        code: null\n      }\n    }\n  }\n};\n"],"names":["checked1","cov_whi6vtzrg","s","$","$$props","$$value","checked2","name","cov_1jxlmo2l58","f","Object","entries","CCLPastelColor","$$anchor","$$item","$$array_1","color","meta","title","component","Checkbox","tags","argTypes","label","control","type","checked","options","values","CCLVividColor","disabled","onChange","fn","createStory","initialArgs","args","play","canvasElement","step","checkbox","within","getByRole","hidden","expect","toBeChecked","not","userEvent","click","toHaveBeenCalled","toHaveBeenCalledOnce","Default","Checked","Disabled","DisabledChecked","MultipleCheckboxes","render","Component","MultipleCheckboxesWrapper","props","checked3","canvas","checkbox1","findByRole","checkbox2","checkbox3","toBeInTheDocument","AllColors","AllColorsCheckboxWrapper","parameters","docs","source","code","originalSource"],"mappings":"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"}