{"version":3,"file":"Table-BsSMgOhy.js","sources":["../../../src/lib/Table.svelte"],"sourcesContent":["<script lang=\"ts\">\n\timport { CCLPastelColor, CCLVividColor } from '$lib/const/config';\n\timport './const/variables.css';\n\n\t/**\n\t * テーブルメインカラー\n\t * CCLVividColorの中から指定する\n\t * @default --strawberry-pink\n\t * @type string\n\t */\n\texport let tableColor: string;\n\n\t/**\n\t * テーブルサブカラー\n\t * CCLPasterColorの中から指定する\n\t * @default --peach-pink\n\t * @type string\n\t */\n\tlet bodyColor: string;\n\n\t/**\n\t * テーブルのヘッダー\n\t * 一次元配列で自由長、\n\t * @type Array<string>\n\t */\n\texport let dataHeader: string[];\n\n\t/**\n\t * テーブルにいれるデータ\n\t * 2次元の配列で自由長\n\t * @type Array<Array<string | number>>\n\t */\n\texport let tableData: (string | number)[][];\n\n\t/**\n\t * テーブルカラーに応じた背景色を取得する関数\n\t * @param tableColor - テーブルのメインカラー\n\t * @returns 背景色\n\t */\n\tfunction getBodyColor(tableColor: string): string {\n\t\tswitch (tableColor) {\n\t\t\tcase CCLVividColor.STRAWBERRY_PINK:\n\t\t\t\treturn CCLPastelColor.PEACH_PINK;\n\t\t\tcase CCLVividColor.PINEAPPLE_YELLOW:\n\t\t\t\treturn CCLPastelColor.LEMON_YELLOW;\n\t\t\tcase CCLVividColor.SODA_BLUE:\n\t\t\t\treturn CCLPastelColor.SUGAR_BLUE;\n\t\t\tcase CCLVividColor.MELON_GREEN:\n\t\t\t\treturn CCLPastelColor.MATCHA_GREEN;\n\t\t\tcase CCLVividColor.GRAPE_PURPLE:\n\t\t\t\treturn CCLPastelColor.AKEBI_PURPLE;\n\t\t\tcase CCLVividColor.WRAP_GREY:\n\t\t\t\treturn CCLPastelColor.CLOUD_GREY;\n\t\t\tdefault:\n\t\t\t\treturn CCLPastelColor.PEACH_PINK;\n\t\t}\n\t}\n\n\t// 背景色を取得\n\t$: bodyColor = getBodyColor(tableColor);\n</script>\n\n<!--汎用テーブル-->\n<div class=\"table-wrapper\">\n\t<table>\n\t\t<!--テーブルヘッダー-->\n\t\t<thead class=\"table-header\" style=\"--bgColor: var({tableColor})\">\n\t\t\t<tr>\n\t\t\t\t{#each dataHeader as title}\n\t\t\t\t\t<th>{title}</th>\n\t\t\t\t{/each}\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t{#each tableData as row}\n\t\t\t\t<tr class=\"table-body-style\" style=\"--table-body-color: var({bodyColor})\">\n\t\t\t\t\t{#each row as data}\n\t\t\t\t\t\t<td>{data}</td>\n\t\t\t\t\t{/each}\n\t\t\t\t</tr>\n\t\t\t{/each}\n\t\t</tbody>\n\t</table>\n</div>\n\n<style>\n\tth {\n\t\tpadding: 5px 60px;\n\t}\n\n\tthead {\n\t\tposition: sticky;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twhite-space: nowrap;\n\t}\n\n\ttable {\n\t\tborder-collapse: collapse;\n\t\twidth: 100%;\n\t}\n\n\t.table-wrapper {\n\t\toverflow-y: auto;\n\t\tmax-width: 90%;\n\t\theight: 200px;\n\t\t-webkit-overflow-scrolling: touch;\n\t}\n\n\t.table-header {\n\t\tbackground-color: var(--bgColor);\n\t\tcolor: #ffffff;\n\t}\n\t.table-body-style {\n\t\ttext-align: center;\n\t\tcolor: var(--wrap-grey);\n\t\twhite-space: nowrap;\n\t}\n\t.table-body-style:nth-child(odd) {\n\t\tbackground-color: var(--table-body-color);\n\t}\n</style>\n"],"names":["ctx","length","i","cov_jowf863gt","s","table","thead","dataHeader","$$props","MATCHA_GREEN"],"mappings":"snjCAqEKA,oEAAAC,OAAAC,KAAAC,EAAA,EAAAC,EAAA,EAAA,s7CAAKC,EAAAC,CAAA,EAAAH,EAAA,EAAAC,EAAA,GAAA,0YAALJ,EAAe,CAAA,CAAA,iCAAfC,OAAAC,GAAA,EAAA,uQAAAD,4sBAnEGM,WAAAA,CAAA,GAAAJ,EAAA,EAAAC,EAAA,GAAA,IAAAI,6VAmEEC;;;"}