{"version":3,"file":"style-DvJ3IcV1.js","sources":["../../../node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs","../../../node_modules/.pnpm/svelte@5.38.7/node_modules/svelte/src/internal/shared/attributes.js","../../../node_modules/.pnpm/svelte@5.38.7/node_modules/svelte/src/internal/client/dom/elements/style.js"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import { escape_html } from '../../escaping.js';\nimport { clsx as _clsx } from 'clsx';\n\n/**\n * `<div translate={false}>` should be rendered as `<div translate=\"no\">` and _not_\n * `<div translate=\"false\">`, which is equivalent to `<div translate=\"yes\">`. There\n * may be other odd cases that need to be added to this list in future\n * @type {Record<string, Map<any, string>>}\n */\nconst replacements = {\n\ttranslate: new Map([\n\t\t[true, 'yes'],\n\t\t[false, 'no']\n\t])\n};\n\n/**\n * @template V\n * @param {string} name\n * @param {V} value\n * @param {boolean} [is_boolean]\n * @returns {string}\n */\nexport function attr(name, value, is_boolean = false) {\n\tif (value == null || (!value && is_boolean)) return '';\n\tconst normalized = (name in replacements && replacements[name].get(value)) || value;\n\tconst assignment = is_boolean ? '' : `=\"${escape_html(normalized, true)}\"`;\n\treturn ` ${name}${assignment}`;\n}\n\n/**\n * Small wrapper around clsx to preserve Svelte's (weird) handling of falsy values.\n * TODO Svelte 6 revisit this, and likely turn all falsy values into the empty string (what clsx also does)\n * @param  {any} value\n */\nexport function clsx(value) {\n\tif (typeof value === 'object') {\n\t\treturn _clsx(value);\n\t} else {\n\t\treturn value ?? '';\n\t}\n}\n\nconst whitespace = [...' \\t\\n\\r\\f\\u00a0\\u000b\\ufeff'];\n\n/**\n * @param {any} value\n * @param {string | null} [hash]\n * @param {Record<string, boolean>} [directives]\n * @returns {string | null}\n */\nexport function to_class(value, hash, directives) {\n\tvar classname = value == null ? '' : '' + value;\n\n\tif (hash) {\n\t\tclassname = classname ? classname + ' ' + hash : hash;\n\t}\n\n\tif (directives) {\n\t\tfor (var key in directives) {\n\t\t\tif (directives[key]) {\n\t\t\t\tclassname = classname ? classname + ' ' + key : key;\n\t\t\t} else if (classname.length) {\n\t\t\t\tvar len = key.length;\n\t\t\t\tvar a = 0;\n\n\t\t\t\twhile ((a = classname.indexOf(key, a)) >= 0) {\n\t\t\t\t\tvar b = a + len;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t(a === 0 || whitespace.includes(classname[a - 1])) &&\n\t\t\t\t\t\t(b === classname.length || whitespace.includes(classname[b]))\n\t\t\t\t\t) {\n\t\t\t\t\t\tclassname = (a === 0 ? '' : classname.substring(0, a)) + classname.substring(b + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ta = b;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn classname === '' ? null : classname;\n}\n\n/**\n *\n * @param {Record<string,any>} styles\n * @param {boolean} important\n */\nfunction append_styles(styles, important = false) {\n\tvar separator = important ? ' !important;' : ';';\n\tvar css = '';\n\n\tfor (var key in styles) {\n\t\tvar value = styles[key];\n\t\tif (value != null && value !== '') {\n\t\t\tcss += ' ' + key + ': ' + value + separator;\n\t\t}\n\t}\n\n\treturn css;\n}\n\n/**\n * @param {string} name\n * @returns {string}\n */\nfunction to_css_name(name) {\n\tif (name[0] !== '-' || name[1] !== '-') {\n\t\treturn name.toLowerCase();\n\t}\n\treturn name;\n}\n\n/**\n * @param {any} value\n * @param {Record<string, any> | [Record<string, any>, Record<string, any>]} [styles]\n * @returns {string | null}\n */\nexport function to_style(value, styles) {\n\tif (styles) {\n\t\tvar new_style = '';\n\n\t\t/** @type {Record<string,any> | undefined} */\n\t\tvar normal_styles;\n\n\t\t/** @type {Record<string,any> | undefined} */\n\t\tvar important_styles;\n\n\t\tif (Array.isArray(styles)) {\n\t\t\tnormal_styles = styles[0];\n\t\t\timportant_styles = styles[1];\n\t\t} else {\n\t\t\tnormal_styles = styles;\n\t\t}\n\n\t\tif (value) {\n\t\t\tvalue = String(value)\n\t\t\t\t.replaceAll(/\\s*\\/\\*.*?\\*\\/\\s*/g, '')\n\t\t\t\t.trim();\n\n\t\t\t/** @type {boolean | '\"' | \"'\"} */\n\t\t\tvar in_str = false;\n\t\t\tvar in_apo = 0;\n\t\t\tvar in_comment = false;\n\n\t\t\tvar reserved_names = [];\n\n\t\t\tif (normal_styles) {\n\t\t\t\treserved_names.push(...Object.keys(normal_styles).map(to_css_name));\n\t\t\t}\n\t\t\tif (important_styles) {\n\t\t\t\treserved_names.push(...Object.keys(important_styles).map(to_css_name));\n\t\t\t}\n\n\t\t\tvar start_index = 0;\n\t\t\tvar name_index = -1;\n\n\t\t\tconst len = value.length;\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tvar c = value[i];\n\n\t\t\t\tif (in_comment) {\n\t\t\t\t\tif (c === '/' && value[i - 1] === '*') {\n\t\t\t\t\t\tin_comment = false;\n\t\t\t\t\t}\n\t\t\t\t} else if (in_str) {\n\t\t\t\t\tif (in_str === c) {\n\t\t\t\t\t\tin_str = false;\n\t\t\t\t\t}\n\t\t\t\t} else if (c === '/' && value[i + 1] === '*') {\n\t\t\t\t\tin_comment = true;\n\t\t\t\t} else if (c === '\"' || c === \"'\") {\n\t\t\t\t\tin_str = c;\n\t\t\t\t} else if (c === '(') {\n\t\t\t\t\tin_apo++;\n\t\t\t\t} else if (c === ')') {\n\t\t\t\t\tin_apo--;\n\t\t\t\t}\n\n\t\t\t\tif (!in_comment && in_str === false && in_apo === 0) {\n\t\t\t\t\tif (c === ':' && name_index === -1) {\n\t\t\t\t\t\tname_index = i;\n\t\t\t\t\t} else if (c === ';' || i === len - 1) {\n\t\t\t\t\t\tif (name_index !== -1) {\n\t\t\t\t\t\t\tvar name = to_css_name(value.substring(start_index, name_index).trim());\n\n\t\t\t\t\t\t\tif (!reserved_names.includes(name)) {\n\t\t\t\t\t\t\t\tif (c !== ';') {\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar property = value.substring(start_index, i).trim();\n\t\t\t\t\t\t\t\tnew_style += ' ' + property + ';';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart_index = i + 1;\n\t\t\t\t\t\tname_index = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (normal_styles) {\n\t\t\tnew_style += append_styles(normal_styles);\n\t\t}\n\n\t\tif (important_styles) {\n\t\t\tnew_style += append_styles(important_styles, true);\n\t\t}\n\n\t\tnew_style = new_style.trim();\n\t\treturn new_style === '' ? null : new_style;\n\t}\n\n\treturn value == null ? null : String(value);\n}\n","import { to_style } from '../../../shared/attributes.js';\nimport { hydrating } from '../hydration.js';\n\n/**\n * @param {Element & ElementCSSInlineStyle} dom\n * @param {Record<string, any>} prev\n * @param {Record<string, any>} next\n * @param {string} [priority]\n */\nfunction update_styles(dom, prev = {}, next, priority) {\n\tfor (var key in next) {\n\t\tvar value = next[key];\n\n\t\tif (prev[key] !== value) {\n\t\t\tif (next[key] == null) {\n\t\t\t\tdom.style.removeProperty(key);\n\t\t\t} else {\n\t\t\t\tdom.style.setProperty(key, value, priority);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} dom\n * @param {string | null} value\n * @param {Record<string, any> | [Record<string, any>, Record<string, any>]} [prev_styles]\n * @param {Record<string, any> | [Record<string, any>, Record<string, any>]} [next_styles]\n */\nexport function set_style(dom, value, prev_styles, next_styles) {\n\t// @ts-expect-error\n\tvar prev = dom.__style;\n\n\tif (hydrating || prev !== value) {\n\t\tvar next_style_attr = to_style(value, next_styles);\n\n\t\tif (!hydrating || next_style_attr !== dom.getAttribute('style')) {\n\t\t\tif (next_style_attr == null) {\n\t\t\t\tdom.removeAttribute('style');\n\t\t\t} else {\n\t\t\t\tdom.style.cssText = next_style_attr;\n\t\t\t}\n\t\t}\n\n\t\t// @ts-expect-error\n\t\tdom.__style = value;\n\t} else if (next_styles) {\n\t\tif (Array.isArray(next_styles)) {\n\t\t\tupdate_styles(dom, prev_styles?.[0], next_styles[0]);\n\t\t\tupdate_styles(dom, prev_styles?.[1], next_styles[1], 'important');\n\t\t} else {\n\t\t\tupdate_styles(dom, prev_styles, next_styles);\n\t\t}\n\t}\n\n\treturn next_styles;\n}\n"],"names":["r","e","t","f","n","o","clsx","value","_clsx","whitespace","to_class","hash","directives","classname","key","len","a","b","append_styles","styles","important","separator","css","to_css_name","name","to_style","new_style","normal_styles","important_styles","in_str","in_apo","in_comment","reserved_names","start_index","name_index","i","c","property","update_styles","dom","prev","next","priority","set_style","prev_styles","next_styles","next_style_attr"],"mappings":"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","x_google_ignoreList":[0,1,2]}