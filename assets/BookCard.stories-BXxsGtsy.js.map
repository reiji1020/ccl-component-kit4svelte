{"version":3,"file":"BookCard.stories-BXxsGtsy.js","sources":["../../../src/stories/AllColors/AllColorsBookCardWrapper.svelte","../../../src/stories/BookCard.stories.ts"],"sourcesContent":["<script lang=\"ts\">\n  import BookCard from '../../lib/BookCard.svelte';\n  import { CCLVividColor } from '../../lib/const/config';\n\n  const colors = Object.values(CCLVividColor);\n</script>\n\n<div class=\"all-colors-wrapper\">\n  {#each colors as color}\n    <div class=\"card-container\">\n      <BookCard\n        borderColor={color}\n        title={'書籍のタイトル'}\n        description={'ここに書籍の説明文が入ります。このカードは色のバリエーションを確認するためのものです。'}\n        coverImageUrl={'thumbnail.png'}\n        altText={'ブックカードの表紙'}\n        linkUrl={'#'}\n        linkText={'詳しく見る'}\n      />\n    </div>\n  {/each}\n</div>\n\n<style>\n  .all-colors-wrapper {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n    padding: 20px;\n  }\n  .card-container {\n    flex: 1 1 300px; /* Flexbox for responsive wrapping */\n    max-width: 300px;\n  }\n</style>\n","import type { Meta, StoryObj } from '@storybook/svelte';\nimport BookCard from '../lib/BookCard.svelte';\nimport { CCLVividColor } from '../lib/const/config';\nimport { expect, fn, userEvent, within } from '@storybook/test';\nimport AllColorsBookCardWrapper from './AllColors/AllColorsBookCardWrapper.svelte';\n\nconst colorOptions = [\n  CCLVividColor.STRAWBERRY_PINK,\n  CCLVividColor.PINEAPPLE_YELLOW,\n  CCLVividColor.SODA_BLUE,\n  CCLVividColor.MELON_GREEN,\n  CCLVividColor.GRAPE_PURPLE,\n  CCLVividColor.WRAP_GREY\n];\n\nconst meta = {\n  title: 'CommonComponents/BookCard',\n  component: BookCard,\n  tags: ['autodocs'],\n  argTypes: {\n    title: { control: 'text' },\n    description: { control: 'text' },\n    coverImageUrl: { control: 'text' },\n    altText: { control: 'text' },\n    linkUrl: { control: 'text' },\n    linkText: { control: 'text' },\n    borderColor: {\n      control: { type: 'select' },\n      options: colorOptions\n    }\n  }\n} satisfies Meta<BookCard>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nexport const Default: Story = {\n  args: {\n    title: 'SvelteではじめるWebアプリ開発',\n    description:\n      'Svelteの基本から、SvelteKitを使った実践的なWebアプリケーション開発までを網羅した一冊です。',\n    coverImageUrl: 'thumbnail.png',\n    altText: 'SvelteではじめるWebアプリ開発 書籍表紙',\n    linkUrl: 'https://example.com',\n    linkText: 'Amazonで見る',\n    borderColor: CCLVividColor.STRAWBERRY_PINK\n  },\n  parameters: {\n    docs: {\n      source: {\n        code: `\n<script>\n    import { BookCard } from 'cclkit4svelte';\n    import { CCLVividColor } from 'cclkit4svelte';\n</script>\n\n<BookCard\n    title=\"SvelteではじめるWebアプリ開発\"\n    description=\"Svelteの基本から、SvelteKitを使った実践的なWebアプリケーション開発までを網羅した一冊です。\"\n    coverImageUrl=\"thumbnail.png\"\n    altText=\"SvelteではじめるWebアプリ開発 書籍表紙\"\n    linkUrl=\"https://example.com\"\n    linkText=\"Amazonで見る\"\n    borderColor={CCLVividColor.STRAWBERRY_PINK}\n/>\n`\n      }\n    }\n  },\n  play: async ({ args, canvasElement, step }) => {\n    const canvas = within(canvasElement);\n\n    await step('タイトルが正しく表示されていること', async () => {\n      await expect(canvas.getByText(args.title!)).toBeInTheDocument();\n    });\n\n    await step('説明文が正しく表示されていること', async () => {\n      await expect(canvas.getByText(args.description!)).toBeInTheDocument();\n    });\n\n    await step('画像に正しいalt属性が設定されていること', async () => {\n      await expect(canvas.getByRole('img')).toHaveAttribute('alt', args.altText);\n    });\n\n    await step('リンクボタンが表示されていること', async () => {\n      const button = canvas.getByRole('button', { name: args.linkText });\n      await expect(button).toBeInTheDocument();\n    });\n  }\n};\n\nexport const NoLink: Story = {\n  args: {\n    title: 'リンクがない場合の表示',\n    description: 'linkUrlが指定されていない場合、ボタンは表示されません。',\n    coverImageUrl: 'thumbnail.png',\n    altText: 'リンクなし書籍表紙',\n    linkUrl: undefined,\n    borderColor: CCLVividColor.SODA_BLUE\n  },\n  parameters: {\n    docs: {\n      source: {\n        code: `\n<script>\n    import { BookCard } from 'cclkit4svelte';\n    import { CCLVividColor } from 'cclkit4svelte';\n</script>\n\n<BookCard\n    title=\"リンクがない場合の表示\"\n    description=\"linkUrlが指定されていない場合、ボタンは表示されません。\"\n    coverImageUrl=\"thumbnail.png\"\n    altText=\"リンクなし書籍表紙\"\n    borderColor={CCLVividColor.SODA_BLUE}\n/>\n`\n      }\n    }\n  },\n  play: async ({ args, canvasElement, step }) => {\n    const canvas = within(canvasElement);\n\n    await step('タイトルが正しく表示されていること', async () => {\n      await expect(canvas.getByText(args.title!)).toBeInTheDocument();\n    });\n\n    await step('リンクボタンが表示されていないこと', async () => {\n      const button = canvas.queryByRole('button');\n      await expect(button).not.toBeInTheDocument();\n    });\n  }\n};\n\nexport const AllColors: Story = {\n  render: () => ({ Component: AllColorsBookCardWrapper }),\n  args: {},\n  parameters: {\n    docs: {\n      source: {\n        code: `\n<script>\n    import { BookCard } from 'cclkit4svelte';\n    import { CCLVividColor } from 'cclkit4svelte';\n</script>\n\n<div style=\"display: flex; flex-wrap: wrap; gap: 20px;\">\n    <BookCard borderColor={CCLVividColor.STRAWBERRY_PINK} title=\"ピンク\" description=\"...\" coverImageUrl=\"thumbnail.png\" altText=\"...\" />\n    <BookCard borderColor={CCLVividColor.PINEAPPLE_YELLOW} title=\"イエロー\" description=\"...\" coverImageUrl=\"thumbnail.png\" altText=\"...\" />\n    <BookCard borderColor={CCLVividColor.SODA_BLUE} title=\"ブルー\" description=\"...\" coverImageUrl=\"thumbnail.png\" altText=\"...\" />\n    <BookCard borderColor={CCLVividColor.MELON_GREEN} title=\"グリーン\" description=\"...\" coverImageUrl=\"thumbnail.png\" altText=\"...\" />\n    <BookCard borderColor={CCLVividColor.GRAPE_PURPLE} title=\"パープル\" description=\"...\" coverImageUrl=\"thumbnail.png\" altText=\"...\" />\n    <BookCard borderColor={CCLVividColor.WRAP_GREY} title=\"グレー\" description=\"...\" coverImageUrl=\"thumbnail.png\" altText=\"...\" />\n</div>\n`\n      }\n    }\n  }\n};\n"],"names":["colors","cov_jvuaca9ij","s","Object","values","CCLVividColor","colorOptions","STRAWBERRY_PINK","PINEAPPLE_YELLOW","SODA_BLUE","MELON_GREEN","GRAPE_PURPLE","WRAP_GREY","meta","title","component","BookCard","tags","argTypes","control","description","coverImageUrl","altText","linkUrl","linkText","borderColor","type","options","Default","args","parameters","docs","source","code","play","canvasElement","step","canvas","within","expect","getByText","toBeInTheDocument","getByRole","toHaveAttribute","button","name","NoLink","undefined","queryByRole","not","AllColors","render","Component","AllColorsBookCardWrapper","originalSource"],"mappings":"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"}