{"version":3,"file":"ServiceCard.stories-COSLFoWI.js","sources":["../../../src/stories/AllColors/AllColorsServiceCardWrapper.svelte","../../../src/stories/ServiceCard.stories.ts"],"sourcesContent":["<script lang=\"ts\">\n  import ServiceCard from '../../lib/ServiceCard.svelte';\n  import { CCLVividColor } from '../../lib/const/config';\n\n  const colors = Object.values(CCLVividColor);\n</script>\n\n<div class=\"all-colors-wrapper\">\n  {#each colors as color}\n    <div class=\"card-container\">\n      <ServiceCard\n        borderColor={color}\n        serviceName={'サービス名'}\n        description={'ここにサービスの説明文が入ります。このカードは色のバリエーションを確認するためのものです。'}\n        imageUrl={'thumbnail.png'}\n        altText={'サービスカードのサムネイル'}\n        linkUrl={'#'}\n      />\n    </div>\n  {/each}\n</div>\n\n<style>\n  .all-colors-wrapper {\n    display: flex;\n    flex-direction: column; /* ServiceCards are wide, so a column layout is better */\n    align-items: center;\n    gap: 20px;\n    padding: 20px;\n  }\n  .card-container {\n    width: 100%;\n    max-width: 500px; /* Match the max-width in ServiceCard.svelte */\n  }\n</style>\n","import type { Meta, StoryObj } from '@storybook/svelte';\nimport { within, userEvent, expect } from '@storybook/test';\nimport ServiceCard from '../lib/ServiceCard.svelte';\nimport { CCLVividColor } from '../lib/const/config';\nimport AllColorsServiceCardWrapper from './AllColors/AllColorsServiceCardWrapper.svelte';\n\nconst colorOptions = [\n  CCLVividColor.STRAWBERRY_PINK,\n  CCLVividColor.PINEAPPLE_YELLOW,\n  CCLVividColor.SODA_BLUE,\n  CCLVividColor.MELON_GREEN,\n  CCLVividColor.GRAPE_PURPLE,\n  CCLVividColor.WRAP_GREY\n];\n\nconst meta = {\n  title: 'CommonComponents/ServiceCard',\n  component: ServiceCard,\n  tags: ['autodocs'],\n  argTypes: {\n    serviceName: { control: 'text' },\n    description: { control: 'text' },\n    imageUrl: { control: 'text' },\n    altText: { control: 'text' },\n    linkUrl: { control: 'text' },\n    borderColor: {\n      control: { type: 'select' },\n      options: colorOptions\n    }\n  }\n} satisfies Meta<ServiceCard>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nexport const Default: Story = {\n  args: {\n    serviceName: 'オンライン学習プラットフォーム',\n    description:\n      'この素晴らしいサービスについての説明です。あなたの学習体験を次のレベルに引き上げます。',\n    imageUrl: 'thumbnail.png',\n    altText: 'オンライン学習プラットフォームのサムネイル',\n    linkUrl: 'https://example.com',\n    borderColor: CCLVividColor.STRAWBERRY_PINK\n  },\n  parameters: {\n    docs: {\n      source: {\n        code: `\n<script>\n    import { ServiceCard } from 'cclkit4svelte';\n    import { CCLVividColor } from 'cclkit4svelte';\n</script>\n\n<ServiceCard\n    serviceName=\"オンライン学習プラットフォーム\"\n    description=\"この素晴らしいサービスについての説明です。あなたの学習体験を次のレベルに引き上げます。\"\n    imageUrl=\"thumbnail.png\"\n    altText=\"オンライン学習プラットフォームのサムネイル\"\n    linkUrl=\"https://example.com\"\n    borderColor={CCLVividColor.STRAWBERRY_PINK}\n/>\n`\n      }\n    }\n  },\n  play: async ({ args, canvasElement, step }) => {\n    const canvas = within(canvasElement);\n\n    const serviceName = canvas.getByText('オンライン学習プラットフォーム');\n    const description = canvas.getByText(\n      'この素晴らしいサービスについての説明です。あなたの学習体験を次のレベルに引き上げます。'\n    );\n\n    await step('サービス名が表示されていること', async () => {\n      await expect(serviceName).toBeInTheDocument();\n    });\n    await step('説明文が表示されていること', async () => {\n      await expect(description).toBeInTheDocument();\n    });\n    await step('指定した枠線の色が正しいこと', async () => {\n      await expect(args.borderColor).toBe(CCLVividColor.STRAWBERRY_PINK);\n    });\n  }\n};\n\nDefault.storyName = 'Default';\n\nexport const NoLink: Story = {\n  args: {\n    serviceName: '社内向けツール',\n    description: 'このツールには外部リンクがありません。',\n    imageUrl: 'thumbnail.png',\n    altText: '社内向けツールのアイコン',\n    borderColor: CCLVividColor.WRAP_GREY\n  },\n  parameters: {\n    docs: {\n      source: {\n        code: `\n<script>\n    import { ServiceCard } from 'cclkit4svelte';\n    import { CCLVividColor } from 'cclkit4svelte';\n</script>\n\n<ServiceCard\n    serviceName=\"社内向けツール\"\n    description=\"このツールには外部リンクがありません。\"\n    imageUrl=\"thumbnail.png\"\n    altText=\"社内向けツールのアイコン\"\n    borderColor={CCLVividColor.WRAP_GREY}\n/>\n`\n      }\n    }\n  },\n  play: async ({ canvasElement, step }) => {\n    const canvas = within(canvasElement);\n    const serviceName = canvas.getByText('社内向けツール');\n    await step('サービス名が表示されていること', async () => {\n      await expect(serviceName).toBeInTheDocument();\n    });\n\n    const cardElement = canvas.getByText('社内向けツール').closest('.service-card');\n    await step('リンクが設定されていないこと', async () => {\n      await expect(cardElement).not.toHaveAttribute('href');\n    });\n  }\n};\nNoLink.storyName = 'NoLink';\n\nexport const AllColors: Story = {\n  render: () => ({ Component: AllColorsServiceCardWrapper }),\n  args: {},\n  parameters: {\n    docs: {\n      source: {\n        code: `\n<script>\n    import { ServiceCard } from 'cclkit4svelte';\n    import { CCLVividColor } from 'cclkit4svelte';\n</script>\n\n<div style=\"display: flex; flex-direction: column; gap: 20px;\">\n    <ServiceCard borderColor={CCLVividColor.STRAWBERRY_PINK} serviceName=\"ピンク\" description=\"...\" imageUrl=\"thumbnail.png\" altText=\"...\" />\n    <ServiceCard borderColor={CCLVividColor.PINEAPPLE_YELLOW} serviceName=\"イエロー\" description=\"...\" imageUrl=\"thumbnail.png\" altText=\"...\" />\n    <ServiceCard borderColor={CCLVividColor.SODA_BLUE} serviceName=\"ブルー\" description=\"...\" imageUrl=\"thumbnail.png\" altText=\"...\" />\n    <ServiceCard borderColor={CCLVividColor.MELON_GREEN} serviceName=\"グリーン\" description=\"...\" imageUrl=\"thumbnail.png\" altText=\"...\" />\n    <ServiceCard borderColor={CCLVividColor.GRAPE_PURPLE} serviceName=\"パープル\" description=\"...\" imageUrl=\"thumbnail.png\" altText=\"...\" />\n    <ServiceCard borderColor={CCLVividColor.WRAP_GREY} serviceName=\"グレー\" description=\"...\" imageUrl=\"thumbnail.png\" altText=\"...\" />\n</div>\n`\n      }\n    }\n  }\n};\n"],"names":["colors","cov_23yc79z1lb","s","Object","values","CCLVividColor","colorOptions","STRAWBERRY_PINK","PINEAPPLE_YELLOW","SODA_BLUE","MELON_GREEN","GRAPE_PURPLE","WRAP_GREY","meta","title","component","ServiceCard","tags","argTypes","serviceName","control","description","imageUrl","altText","linkUrl","borderColor","type","options","Default","args","parameters","docs","source","code","play","canvasElement","step","canvas","within","getByText","expect","toBeInTheDocument","toBe","storyName","NoLink","cardElement","closest","not","toHaveAttribute","AllColors","render","Component","AllColorsServiceCardWrapper","originalSource"],"mappings":"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"}