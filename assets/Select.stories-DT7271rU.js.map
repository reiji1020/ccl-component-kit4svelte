{"version":3,"file":"Select.stories-DT7271rU.js","sources":["../../../src/stories/AllColors/AllColorsSelectWrapper.svelte","../../../src/stories/Select.stories.ts"],"sourcesContent":["<script lang=\"ts\">\n  import Select from '../../lib/Select.svelte';\n  import type { SelectOption } from '../lib/Select.svelte';\n  import { CCLVividColor, CCLPastelColor } from '../../lib/const/config';\n\n  const options: SelectOption[] = [\n    { value: 'option1', label: 'オプション 1' },\n    { value: 'option2', label: 'オプション 2' },\n    { value: 'option3', label: 'オプション 3' }\n  ];\n</script>\n\n<div class=\"color-palette\">\n  <h2>Vivid Colors</h2>\n  <div class=\"color-grid\">\n    {#each Object.entries(CCLVividColor) as [name, color]}\n      <div class=\"color-sample\">\n        <Select\n          id={`vivid-${name.toLowerCase()}`}\n          label={name}\n          {options}\n          value={'option1'}\n          borderColor={color}\n        />\n      </div>\n    {/each}\n  </div>\n\n  <h2>Pastel Colors</h2>\n  <div class=\"color-grid\">\n    {#each Object.entries(CCLPastelColor) as [name, color]}\n      <div class=\"color-sample\">\n        <Select\n          id={`pastel-${name.toLowerCase()}`}\n          label={name}\n          {options}\n          value={'option1'}\n          borderColor={color}\n        />\n      </div>\n    {/each}\n  </div>\n</div>\n\n<style>\n  .color-palette {\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n  }\n  .color-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    gap: 1rem;\n  }\n  .color-sample {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n  }\n</style>\n","import type { Meta, StoryObj } from '@storybook/svelte';\nimport Select from '../lib/Select.svelte';\nimport { CCLVividColor, CCLPastelColor } from '../lib/const/config';\nimport { expect, userEvent, within } from '@storybook/test';\nimport AllColorsSelectWrapper from './AllColors/AllColorsSelectWrapper.svelte';\n\nconst defaultOptions = [\n  { value: 'option1', label: 'オプション 1' },\n  { value: 'option2', label: 'オプション 2' },\n  { value: 'option3', label: 'オプション 3' }\n];\n\nconst meta = {\n  title: 'Form/Select',\n  component: Select,\n  tags: ['autodocs'],\n  argTypes: {\n    borderColor: {\n      control: { type: 'select' },\n      options: Object.values(CCLVividColor)\n    },\n    options: {\n      control: { type: 'object' }\n    }\n  }\n} satisfies Meta<Select>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nexport const Default: Story = {\n  args: {\n    id: 'default-select',\n    label: '選択してください',\n    options: defaultOptions,\n    value: 'option1',\n    borderColor: CCLVividColor.STRAWBERRY_PINK\n  },\n  play: async ({ canvasElement, args, step }) => {\n    const canvas = within(canvasElement);\n    const select = canvas.getByLabelText('選択してください');\n\n    await step('ユーザーがドロップダウンからオプションを選択できること', async () => {\n      await userEvent.selectOptions(select, 'option2');\n    });\n\n    await step('選択された値が正しく更新されること', async () => {\n      await expect(select).toHaveValue('option2');\n    });\n  }\n};\n\nexport const Disabled: Story = {\n  args: {\n    id: 'disabled-select',\n    label: '選択不可',\n    options: defaultOptions,\n    value: 'option2',\n    disabled: true,\n    borderColor: CCLVividColor.WRAP_GREY\n  }\n};\n\nexport const NoLabel: Story = {\n  args: {\n    id: 'no-label-select',\n    options: defaultOptions,\n    value: 'option3',\n    borderColor: CCLVividColor.PINEAPPLE_YELLOW\n  }\n};\n\nexport const AllColors: Story = {\n  render: () => ({ Component: AllColorsSelectWrapper }),\n  args: {},\n  parameters: {\n    docs: {\n      source: {\n        code: null\n      }\n    }\n  }\n};\n"],"names":["color","defaultOptions","value","label","meta","title","component","Select","tags","argTypes","borderColor","control","type","options","Object","values","CCLVividColor","Default","args","id","STRAWBERRY_PINK","play","canvasElement","step","select","within","getByLabelText","userEvent","selectOptions","expect","toHaveValue","Disabled","disabled","WRAP_GREY","NoLabel","PINEAPPLE_YELLOW","AllColors","render","Component","AllColorsSelectWrapper","parameters","docs","source","code","originalSource"],"mappings":"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"}