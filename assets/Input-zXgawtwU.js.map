{"version":3,"file":"Input-zXgawtwU.js","sources":["../../../src/lib/Input.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { CCLVividColor } from './const/config';\n\n  /**\n   * 入力フィールドのタイプ\n   * @default 'text'\n   * @type {'text' | 'password' | 'email' | 'number'}\n   */\n  export let type: 'text' | 'password' | 'email' | 'number' = 'text';\n\n  /**\n   * ラベルのテキスト\n   * @default ''\n   * @type string\n   */\n  export let label: string = '';\n\n  /**\n   * 入力値\n   * @default ''\n   * @type string\n   */\n  export let value: string = '';\n\n  /**\n   * プレースホルダーのテキスト\n   * @default ''\n   * @type string\n   */\n  export let placeholder: string = '';\n\n  /**\n   * 枠線の色\n   * @default --strawberry-pink\n   * @type string\n   */\n  export let borderColor: string = CCLVividColor.STRAWBERRY_PINK;\n\n  /**\n   * 非活性状態にするか\n   * @default false\n   * @type boolean\n   */\n  export let disabled: boolean = false;\n\n  /**\n   * コンポーネントのID\n   * @default 'ccl-input'\n   * @type string\n   */\n  export let id: string = 'ccl-input';\n\n  /**\n   * バリデーションメッセージ\n   * @default ''\n   * @type string\n   */\n  export let validationMessage: string = '';\n\n  /**\n   * バリデーションの状態\n   * @default true\n   * @type boolean\n   */\n  export let isValid: boolean = true;\n</script>\n\n<div class=\"input-wrapper\">\n  {#if label}\n    <label for={id} class=\"input-label\">{label}</label>\n  {/if}\n  {#if type === 'text'}\n    <input\n      {id}\n      type=\"text\"\n      bind:value\n      {placeholder}\n      {disabled}\n      class=\"input-field\"\n      class:invalid={!isValid}\n      style=\"--border-color: var({borderColor})\"\n    />\n  {:else if type === 'password'}\n    <input\n      {id}\n      type=\"password\"\n      bind:value\n      {placeholder}\n      {disabled}\n      class=\"input-field\"\n      class:invalid={!isValid}\n      style=\"--border-color: var({borderColor})\"\n    />\n  {:else if type === 'email'}\n    <input\n      {id}\n      type=\"email\"\n      bind:value\n      {placeholder}\n      {disabled}\n      class=\"input-field\"\n      class:invalid={!isValid}\n      style=\"--border-color: var({borderColor})\"\n    />\n  {:else if type === 'number'}\n    <input\n      {id}\n      type=\"number\"\n      bind:value\n      {placeholder}\n      {disabled}\n      class=\"input-field\"\n      class:invalid={!isValid}\n      style=\"--border-color: var({borderColor})\"\n    />\n  {/if}\n  {#if !isValid && validationMessage}\n    <span class=\"validation-message\">{validationMessage}</span>\n  {/if}\n</div>\n\n<style>\n  .input-wrapper {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n  }\n\n  .input-label {\n    font-size: 14px;\n    color: var(--wrap-grey);\n  }\n\n  .input-field {\n    padding: 10px 15px;\n    border-radius: 8px;\n    border: 2px solid var(--border-color);\n    font-size: 16px;\n    outline: none;\n    transition: border-color 0.2s;\n  }\n\n  .input-field:focus {\n    border-color: var(--ccl-focus-color, var(--soda-blue)); /* フォーカス時の色を定義 */\n  }\n\n  .input-field:disabled {\n    background-color: var(--cloud-grey);\n    cursor: not-allowed;\n    border-color: var(--cloud-grey);\n  }\n\n  .input-field.invalid {\n    border-color: var(--ccl-error-color, var(--strawberry-pink));\n  }\n\n  .validation-message {\n    font-size: 12px;\n    color: var(--ccl-error-color, var(--strawberry-pink));\n  }\n</style>\n"],"names":["type","cov_drkrun7sy","b","s","$$render","consequent_3","alternate"],"mappings":"qltBAqEyCA,EAAA,IAAA,SAAKC,EAAA,EAAAC,EAAA,CAAA,EAAA,CAAA,IAAAD,EAAA,EAAAE,EAAA,EAAA,IAAAC,EAAAC,CAAA,IAAAJ,EAAA,EAAAC,EAAA,CAAA,EAAA,CAAA,IAAAD,IAAAE,EAAA,EAAA,IAAAC,EAAAE,EAAA,EAAA"}