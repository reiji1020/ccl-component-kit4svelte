{"version":3,"file":"actions-DjX1dSX2.js","sources":["../../../node_modules/.pnpm/svelte@5.38.7/node_modules/svelte/src/internal/client/dom/elements/actions.js"],"sourcesContent":["/** @import { ActionPayload } from '#client' */\nimport { effect, render_effect } from '../../reactivity/effects.js';\nimport { safe_not_equal } from '../../reactivity/equality.js';\nimport { deep_read_state, untrack } from '../../runtime.js';\n\n/**\n * @template P\n * @param {Element} dom\n * @param {(dom: Element, value?: P) => ActionPayload<P>} action\n * @param {() => P} [get_value]\n * @returns {void}\n */\nexport function action(dom, action, get_value) {\n\teffect(() => {\n\t\tvar payload = untrack(() => action(dom, get_value?.()) || {});\n\n\t\tif (get_value && payload?.update) {\n\t\t\tvar inited = false;\n\t\t\t/** @type {P} */\n\t\t\tvar prev = /** @type {any} */ ({}); // initialize with something so it's never equal on first run\n\n\t\t\trender_effect(() => {\n\t\t\t\tvar value = get_value();\n\n\t\t\t\t// Action's update method is coarse-grained, i.e. when anything in the passed value changes, update.\n\t\t\t\t// This works in legacy mode because of mutable_source being updated as a whole, but when using $state\n\t\t\t\t// together with actions and mutation, it wouldn't notice the change without a deep read.\n\t\t\t\tdeep_read_state(value);\n\n\t\t\t\tif (inited && safe_not_equal(prev, value)) {\n\t\t\t\t\tprev = value;\n\t\t\t\t\t/** @type {Function} */ (payload.update)(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tinited = true;\n\t\t}\n\n\t\tif (payload?.destroy) {\n\t\t\treturn () => /** @type {Function} */ (payload.destroy)();\n\t\t}\n\t});\n}\n"],"names":["action","dom","get_value","effect","payload","untrack","inited","prev","render_effect","value","deep_read_state","safe_not_equal"],"mappings":"sEAYO,SAASA,EAAOC,EAAKD,EAAQE,EAAW,CAC9CC,EAAO,IAAM,CACZ,IAAIC,EAAUC,EAAQ,IAAML,EAAOC,EAAKC,GAAA,YAAAA,GAAa,GAAK,EAAE,EAE5D,GAAIA,IAAaE,GAAA,MAAAA,EAAS,QAAQ,CACjC,IAAIE,EAAS,GAETC,EAA2B,CAAA,EAE/BC,EAAc,IAAM,CACnB,IAAIC,EAAQP,EAAS,EAKrBQ,EAAgBD,CAAK,EAEjBH,GAAUK,EAAeJ,EAAME,CAAK,IACvCF,EAAOE,EACkBL,EAAQ,OAAQK,CAAK,EAEhD,CAAC,EAEDH,EAAS,EACV,CAEA,GAAIF,GAAA,MAAAA,EAAS,QACZ,MAAO,IAA+BA,EAAQ,QAAO,CAEvD,CAAC,CACF","x_google_ignoreList":[0]}