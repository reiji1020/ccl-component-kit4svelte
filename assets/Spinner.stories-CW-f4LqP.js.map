{"version":3,"file":"Spinner.stories-CW-f4LqP.js","sources":["../../../src/stories/AllColors/AllColorsSpinnerWrapper.svelte","../../../src/stories/Spinner.stories.ts"],"sourcesContent":["<script lang=\"ts\">\n  import Spinner from '../../lib/Spinner.svelte';\n  import { CCLVividColor, CCLPastelColor } from '../../lib/const/config';\n\n  const vividColors = [\n    { name: 'STRAWBERRY_PINK', value: CCLVividColor.STRAWBERRY_PINK },\n    { name: 'PINEAPPLE_YELLOW', value: CCLVividColor.PINEAPPLE_YELLOW },\n    { name: 'SODA_BLUE', value: CCLVividColor.SODA_BLUE },\n    { name: 'MELON_GREEN', value: CCLVividColor.MELON_GREEN },\n    { name: 'GRAPE_PURPLE', value: CCLVividColor.GRAPE_PURPLE },\n    { name: 'WRAP_GREY', value: CCLVividColor.WRAP_GREY }\n  ];\n\n  const pastelColors = [\n    { name: 'PEACH_PINK', value: CCLPastelColor.PEACH_PINK },\n    { name: 'LEMON_YELLOW', value: CCLPastelColor.LEMON_YELLOW },\n    { name: 'SUGAR_BLUE', value: CCLPastelColor.SUGAR_BLUE },\n    { name: 'MATCHA_GREEN', value: CCLPastelColor.MATCHA_GREEN },\n    { name: 'AKEBI_PURPLE', value: CCLPastelColor.AKEBI_PURPLE },\n    { name: 'CLOUD_GREY', value: CCLPastelColor.CLOUD_GREY }\n  ];\n</script>\n\n<div style=\"display: flex; flex-direction: column; gap: 40px; padding: 20px;\">\n  <div>\n    <h3>Vivid Colors</h3>\n    <div style=\"display: flex; flex-wrap: wrap; gap: 20px;\">\n      {#each vividColors as colorOption}\n        <div\n          style=\"display: flex; flex-direction: column; align-items: center; gap: 10px; border: 1px solid #eee; padding: 15px; border-radius: 8px;\"\n        >\n          <Spinner color={colorOption.value} size=\"60px\" borderWidth=\"6px\" />\n          <span style=\"font-size: 14px; color: #555;\">{colorOption.name}</span>\n        </div>\n      {/each}\n    </div>\n  </div>\n\n  <div>\n    <h3>Pastel Colors</h3>\n    <div style=\"display: flex; flex-wrap: wrap; gap: 20px;\">\n      {#each pastelColors as colorOption}\n        <div\n          style=\"display: flex; flex-direction: column; align-items: center; gap: 10px; border: 1px solid #eee; padding: 15px; border-radius: 8px;\"\n        >\n          <Spinner color={colorOption.value} size=\"60px\" borderWidth=\"6px\" />\n          <span style=\"font-size: 14px; color: #555;\">{colorOption.name}</span>\n        </div>\n      {/each}\n    </div>\n  </div>\n</div>\n","import type { Meta, StoryObj } from '@storybook/svelte';\nimport Spinner from '../lib/Spinner.svelte';\n\nimport { CCLVividColor, CCLPastelColor } from '../lib/const/config';\n\nconst colorOptions = [\n  CCLVividColor.STRAWBERRY_PINK,\n  CCLVividColor.PINEAPPLE_YELLOW,\n  CCLVividColor.SODA_BLUE,\n  CCLVividColor.MELON_GREEN,\n  CCLVividColor.GRAPE_PURPLE,\n  CCLVividColor.WRAP_GREY,\n  CCLPastelColor.PEACH_PINK,\n  CCLPastelColor.LEMON_YELLOW,\n  CCLPastelColor.SUGAR_BLUE,\n  CCLPastelColor.MATCHA_GREEN,\n  CCLPastelColor.AKEBI_PURPLE,\n  CCLPastelColor.CLOUD_GREY\n];\n\nconst meta = {\n  title: 'CommonComponents/Spinner',\n  component: Spinner,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  argTypes: {\n    size: {\n      control: { type: 'text' },\n      description: 'スピナーのサイズ (例: \"40px\", \"2em\")'\n    },\n    color: {\n      control: { type: 'select' },\n      options: colorOptions,\n      description: 'スピナーの色'\n    },\n    borderWidth: {\n      control: { type: 'text' },\n      description: 'スピナーのボーダー幅 (例: \"4px\", \"0.2em\")'\n    }\n  }\n} satisfies Meta<Spinner>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nimport { expect } from '@storybook/test';\nimport { within } from '@storybook/test';\n\nexport const Default: Story = {\n  args: {\n    size: '50px',\n    color: CCLVividColor.STRAWBERRY_PINK,\n    borderWidth: '5px'\n  },\n  play: async ({ canvasElement, step, args }) => {\n    const canvas = within(canvasElement);\n    await step('スピナーが表示されていること', async () => {\n      const spinner = canvas.getByRole('status');\n      await expect(spinner).toBeInTheDocument();\n    });\n    await step('スピナーのサイズが指定通りであること', async () => {\n      const spinner = canvas.getByRole('status');\n      await expect(spinner).toHaveStyle(`width: ${args.size}; height: ${args.size};`);\n    });\n    await step('スピナーのボーダー幅が指定通りであること', async () => {\n      const spinner = canvas.getByRole('status');\n      await expect(spinner).toHaveStyle(`border-width: ${args.borderWidth};`);\n    });\n  }\n};\n\nexport const Large: Story = {\n  args: {\n    size: '80px',\n    color: CCLVividColor.MELON_GREEN,\n    borderWidth: '8px'\n  },\n  play: async ({ canvasElement, step, args }) => {\n    const canvas = within(canvasElement);\n    await step('スピナーが表示されていること', async () => {\n      const spinner = canvas.getByRole('status');\n      await expect(spinner).toBeInTheDocument();\n    });\n    await step('スピナーのサイズが指定通りであること', async () => {\n      const spinner = canvas.getByRole('status');\n      await expect(spinner).toHaveStyle(`width: ${args.size}; height: ${args.size};`);\n    });\n    await step('スピナーのボーダー幅が指定通りであること', async () => {\n      const spinner = canvas.getByRole('status');\n      await expect(spinner).toHaveStyle(`border-width: ${args.borderWidth};`);\n    });\n  }\n};\n\nimport AllColorsSpinnerWrapper from './AllColors/AllColorsSpinnerWrapper.svelte';\n\nexport const Small: Story = {\n  args: {\n    size: '20px',\n    color: CCLVividColor.SODA_BLUE,\n    borderWidth: '2px'\n  },\n  play: async ({ canvasElement, step, args }) => {\n    const canvas = within(canvasElement);\n    await step('スピナーが表示されていること', async () => {\n      const spinner = canvas.getByRole('status');\n      await expect(spinner).toBeInTheDocument();\n    });\n    await step('スピナーのサイズが指定通りであること', async () => {\n      const spinner = canvas.getByRole('status');\n      await expect(spinner).toHaveStyle(`width: ${args.size}; height: ${args.size};`);\n    });\n    await step('スピナーのボーダー幅が指定通りであること', async () => {\n      const spinner = canvas.getByRole('status');\n      await expect(spinner).toHaveStyle(`border-width: ${args.borderWidth};`);\n    });\n  }\n};\n\nexport const AllColors: Story = {\n  render: () => ({ Component: AllColorsSpinnerWrapper }),\n  args: {},\n  parameters: {\n    docs: {\n      source: {\n        code: null\n      }\n    }\n  }\n};\n"],"names":["cov_8s23nsiko","s","name","value","CCLVividColor","WRAP_GREY","pastelColors","CCLPastelColor","LEMON_YELLOW","SUGAR_BLUE","$","div_2","vividColors","$$anchor","colorOption","f","text","colorOptions","STRAWBERRY_PINK","PINEAPPLE_YELLOW","SODA_BLUE","MELON_GREEN","GRAPE_PURPLE","PEACH_PINK","MATCHA_GREEN","AKEBI_PURPLE","CLOUD_GREY","meta","title","component","Spinner","tags","parameters","layout","argTypes","size","control","type","description","color","options","borderWidth","Default","args","play","canvasElement","step","canvas","within","spinner","getByRole","expect","toBeInTheDocument","toHaveStyle","Large","Small","AllColors","render","Component","AllColorsSpinnerWrapper","docs","source","code","originalSource"],"mappings":"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"}