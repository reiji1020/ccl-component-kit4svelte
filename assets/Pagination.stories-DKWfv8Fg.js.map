{"version":3,"file":"Pagination.stories-DKWfv8Fg.js","sources":["../../../src/lib/Pagination.svelte","../../../src/stories/PaginationWrapper.svelte","../../../src/stories/AllColors/AllColorsPaginationWrapper.svelte","../../../src/stories/Pagination.stories.ts"],"sourcesContent":["<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  import { CCLVividColor } from './const/config';\n  import type { ColorVar } from './const/config';\n  import { vividFor } from './const/colorMap';\n\n  const dispatch = createEventDispatcher<{ change: { page: number } }>();\n\n  /** 現在のページ(1始まり) */\n  export let page: number = 1;\n  /** 総アイテム数（`pageCount`とどちらか一方を指定） */\n  export let total: number | undefined = undefined;\n  /** 1ページあたり件数（`total`指定時に使用） */\n  export let perPage: number = 10;\n  /** 総ページ数（`total`の代わりに明示指定可） */\n  export let pageCount: number | undefined = undefined;\n\n  /** 省略せず両端に常に表示するページ数 */\n  export let boundaryCount: number = 1;\n  /** 現在ページの前後に表示するページ数 */\n  export let siblingCount: number = 1;\n\n  /** 最初/最後ページボタンの表示 */\n  export let showFirstLast: boolean = true;\n  /** 前へ/次へボタンの表示 */\n  export let showPrevNext: boolean = true;\n\n  /** 操作不可にする */\n  export let disabled: boolean = false;\n\n  /** アクセントカラー（選択中・ホバー等） */\n  export let accentColor: ColorVar = CCLVividColor.SODA_BLUE;\n\n  /** `nav`のARIAラベル */\n  export let ariaLabel: string = 'Pagination';\n\n  $: accentFg = vividFor(accentColor as string);\n  $: styleInline =\n    `--accent-color: var(${accentColor});` + (accentFg ? ` --accent-fg: var(${accentFg});` : '');\n\n  $: totalPages = Math.max(\n    1,\n    pageCount ?? (total != null ? Math.ceil(total / Math.max(1, perPage)) : 1)\n  );\n  $: currentPage = clamp(page, 1, totalPages);\n  $: pages = getVisiblePages(totalPages, currentPage, siblingCount, boundaryCount);\n\n  function clamp(n: number, min: number, max: number) {\n    return Math.min(max, Math.max(min, n));\n  }\n\n  function range(start: number, end: number) {\n    const arr: number[] = [];\n    for (let i = start; i <= end; i++) arr.push(i);\n    return arr;\n  }\n\n  function getVisiblePages(\n    total: number,\n    current: number,\n    sib: number,\n    boundary: number\n  ): (number | 'ellipsis-start' | 'ellipsis-end')[] {\n    if (total <= 0) return [1];\n\n    const startPages = range(1, Math.min(boundary, total));\n    const endPages = range(Math.max(total - boundary + 1, boundary + 1), total);\n\n    // 兄弟範囲の開始/終了を計算\n    const siblingsStart = Math.max(\n      Math.min(current - sib, total - boundary - sib * 2 - 1),\n      boundary + 2\n    );\n    const siblingsEnd = Math.min(\n      Math.max(current + sib, boundary + sib * 2 + 2),\n      endPages.length > 0 ? endPages[0] - 2 : total - 1\n    );\n\n    const pages: (number | 'ellipsis-start' | 'ellipsis-end')[] = [];\n    pages.push(...startPages);\n\n    if (siblingsStart > boundary + 2) {\n      pages.push('ellipsis-start');\n    } else if (boundary + 1 < total - boundary) {\n      pages.push(boundary + 1);\n    }\n\n    pages.push(...range(siblingsStart, siblingsEnd));\n\n    if (siblingsEnd < total - boundary - 1) {\n      pages.push('ellipsis-end');\n    } else if (total - boundary > boundary) {\n      pages.push(total - boundary);\n    }\n\n    pages.push(...endPages);\n    // ユニーク化と並び順維持\n    const seen = new Set<string>();\n    return pages.filter((p) => {\n      const key = String(p);\n      if (seen.has(key)) return false;\n      seen.add(key);\n      return true;\n    });\n  }\n\n  function goTo(target: number) {\n    if (disabled) return;\n    const next = clamp(target, 1, totalPages);\n    if (next !== currentPage) {\n      dispatch('change', { page: next });\n    }\n  }\n  //\n</script>\n\n<nav class=\"ccl-pagination\" aria-label={ariaLabel} style={styleInline}>\n  <ul class=\"list\" role=\"list\">\n    {#if showFirstLast}\n      <li>\n        <button\n          type=\"button\"\n          class=\"item control\"\n          on:click={() => goTo(1)}\n          aria-label=\"Go to first page\"\n          disabled={disabled || currentPage === 1}>«</button\n        >\n      </li>\n    {/if}\n    {#if showPrevNext}\n      <li>\n        <button\n          type=\"button\"\n          class=\"item control\"\n          on:click={() => goTo(currentPage - 1)}\n          aria-label=\"Go to previous page\"\n          disabled={disabled || currentPage === 1}>‹</button\n        >\n      </li>\n    {/if}\n\n    {#each pages as p}\n      {#if p === 'ellipsis-start' || p === 'ellipsis-end'}\n        <li><span class=\"item ellipsis\" aria-hidden=\"true\">…</span></li>\n      {:else}\n        <li>\n          <button\n            type=\"button\"\n            class=\"item {p === currentPage ? 'active' : ''}\"\n            aria-current={p === currentPage ? 'page' : undefined}\n            aria-label={`Go to page ${p}`}\n            {disabled}\n            on:click={() => goTo(p as number)}>{p}</button\n          >\n        </li>\n      {/if}\n    {/each}\n\n    {#if showPrevNext}\n      <li>\n        <button\n          type=\"button\"\n          class=\"item control\"\n          on:click={() => goTo(currentPage + 1)}\n          aria-label=\"Go to next page\"\n          disabled={disabled || currentPage === totalPages}>›</button\n        >\n      </li>\n    {/if}\n    {#if showFirstLast}\n      <li>\n        <button\n          type=\"button\"\n          class=\"item control\"\n          on:click={() => goTo(totalPages)}\n          aria-label=\"Go to last page\"\n          disabled={disabled || currentPage === totalPages}>»</button\n        >\n      </li>\n    {/if}\n  </ul>\n  <div class=\"sr-only\" aria-live=\"polite\">Page {currentPage} of {totalPages}</div>\n</nav>\n\n<style>\n  .ccl-pagination {\n    display: inline-block;\n    --accent-color: var(--soda-blue);\n    --size: 36px;\n  }\n  .list {\n    display: flex;\n    gap: 6px;\n    padding: 0;\n    margin: 0;\n    list-style: none;\n    align-items: center;\n  }\n  .item {\n    width: var(--size);\n    min-width: var(--size);\n    height: var(--size);\n    padding: 0;\n    border-radius: 50%;\n    border: 2px solid var(--cloud-grey);\n    background: white;\n    color: var(--wrap-grey);\n    font-size: 14px;\n    line-height: 1;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    transition:\n      border-color 0.15s,\n      color 0.15s,\n      background 0.15s;\n  }\n  .item.control {\n    font-size: 18px; /* larger chevrons */\n  }\n  .item.ellipsis {\n    width: auto;\n    min-width: auto;\n    padding: 0 4px;\n    border-radius: 0;\n    background: transparent;\n    border: none;\n    cursor: default;\n    color: var(--wrap-grey);\n  }\n  .item:hover:not(:disabled) {\n    border-color: var(--accent-color);\n    color: var(--accent-color);\n  }\n  .item.active {\n    background: var(--accent-color);\n    border-color: var(--accent-color);\n    color: var(--accent-fg, #fff);\n    cursor: default;\n  }\n  .item:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n  .sr-only {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    margin: -1px;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    border: 0;\n  }\n</style>\n","<script lang=\"ts\">\n  import Pagination from '../lib/Pagination.svelte';\n  import type { ColorVar } from '../lib/const/config';\n\n  export let page: number = 1;\n  export let total: number | undefined = undefined;\n  export let perPage: number = 10;\n  export let pageCount: number | undefined = undefined;\n  export let boundaryCount: number = 1;\n  export let siblingCount: number = 1;\n  export let showFirstLast: boolean = true;\n  export let showPrevNext: boolean = true;\n  export let disabled: boolean = false;\n  export let accentColor: ColorVar;\n  export let ariaLabel: string = 'Pagination';\n\n  function handleChange(e: CustomEvent<{ page: number }>) {\n    page = e.detail.page;\n  }\n</script>\n\n<Pagination\n  {page}\n  {total}\n  {perPage}\n  {pageCount}\n  {boundaryCount}\n  {siblingCount}\n  {showFirstLast}\n  {showPrevNext}\n  {disabled}\n  {accentColor}\n  {ariaLabel}\n  on:change={handleChange}\n/>\n","<script lang=\"ts\">\n  import Pagination from '../../lib/Pagination.svelte';\n  import { CCLVividColor, CCLPastelColor } from '../../lib/const/config';\n\n  const common = {\n    page: 3,\n    pageCount: 7,\n    boundaryCount: 1,\n    siblingCount: 1,\n    showFirstLast: true,\n    showPrevNext: true,\n    disabled: false\n  } as const;\n</script>\n\n<div class=\"color-palette\">\n  <h2>Vivid Colors</h2>\n  <div class=\"color-list\">\n    {#each Object.entries(CCLVividColor) as [name, color]}\n      <div class=\"color-sample\">\n        <Pagination {...common} accentColor={color} ariaLabel={`Pagination ${name}`} />\n        <div class=\"label\">{name}</div>\n      </div>\n    {/each}\n  </div>\n\n  <h2>Pastel Colors</h2>\n  <div class=\"color-list\">\n    {#each Object.entries(CCLPastelColor) as [name, color]}\n      <div class=\"color-sample\">\n        <Pagination {...common} accentColor={color} ariaLabel={`Pagination ${name}`} />\n        <div class=\"label\">{name}</div>\n      </div>\n    {/each}\n  </div>\n</div>\n\n<style>\n  .color-palette {\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    padding: 1rem;\n  }\n  .color-list {\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n  }\n  .color-sample {\n    display: block;\n    padding: 8px 0;\n  }\n  .label {\n    font-size: 12px;\n    color: var(--wrap-grey);\n    margin-top: 6px;\n  }\n</style>\n","import type { Meta, StoryObj } from '@storybook/svelte';\nimport { within, userEvent, expect } from '@storybook/test';\nimport Pagination from '$lib/Pagination.svelte';\nimport PaginationWrapper from './PaginationWrapper.svelte';\nimport AllColorsPaginationWrapper from './AllColors/AllColorsPaginationWrapper.svelte';\nimport { CCLVividColor, CCLPastelColor } from '$lib/const/config';\n\nconst colorOptions = [...Object.values(CCLVividColor), ...Object.values(CCLPastelColor)];\n\nconst meta = {\n  title: 'CommonComponents/Pagination',\n  component: Pagination,\n  tags: ['autodocs'],\n  parameters: { layout: 'padded' },\n  argTypes: {\n    page: { control: { type: 'number', min: 1 }, description: '現在ページ(1始まり)' },\n    total: { control: { type: 'number' }, description: '総アイテム数（pageCountとどちらか）' },\n    perPage: {\n      control: { type: 'number', min: 1 },\n      description: '1ページあたり件数（total使用時）'\n    },\n    pageCount: { control: { type: 'number', min: 1 }, description: '総ページ数（totalの代替）' },\n    boundaryCount: {\n      control: { type: 'number', min: 0, max: 5 },\n      description: '両端に常時表示するページ数'\n    },\n    siblingCount: {\n      control: { type: 'number', min: 0, max: 5 },\n      description: '現在ページ前後の表示数'\n    },\n    showFirstLast: { control: { type: 'boolean' }, description: '最初/最後を表示' },\n    showPrevNext: { control: { type: 'boolean' }, description: '前へ/次へを表示' },\n    disabled: { control: { type: 'boolean' }, description: '全体の操作不可' },\n    accentColor: {\n      control: { type: 'select' },\n      options: colorOptions,\n      description: 'アクセントカラー'\n    },\n    ariaLabel: { control: { type: 'text' }, description: 'ナビゲーションのARIAラベル' }\n  }\n} satisfies Meta<Pagination>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nexport const Default: Story = {\n  render: (args) => ({ Component: PaginationWrapper, props: args }),\n  args: {\n    page: 1,\n    total: 120,\n    perPage: 10,\n    boundaryCount: 1,\n    siblingCount: 1,\n    showFirstLast: true,\n    showPrevNext: true,\n    disabled: false,\n    accentColor: CCLVividColor.SODA_BLUE\n  },\n  play: async ({ canvasElement, step }) => {\n    const canvas = within(canvasElement);\n    await step('次へをクリックすると、アクティブページが 2 になること', async () => {\n      const next = await canvas.getByRole('button', { name: /go to next page/i });\n      await userEvent.click(next);\n      const page2 = await canvas.getByRole('button', { name: /go to page 2/i });\n      await expect(page2).toHaveAttribute('aria-current', 'page');\n    });\n    await step('最後へをクリックすると、アクティブページが 最終 になること', async () => {\n      const last = await canvas.getByRole('button', { name: /go to last page/i });\n      await userEvent.click(last);\n      const lastPage = await canvas.getByRole('button', { name: /go to page 12/i });\n      await expect(lastPage).toHaveAttribute('aria-current', 'page');\n    });\n  }\n};\n\nexport const ManyPages: Story = {\n  render: (args) => ({ Component: PaginationWrapper, props: args }),\n  args: {\n    page: 10,\n    pageCount: 50,\n    boundaryCount: 2,\n    siblingCount: 2,\n    showFirstLast: true,\n    showPrevNext: true,\n    accentColor: CCLVividColor.STRAWBERRY_PINK\n  },\n  play: async ({ canvasElement, step }) => {\n    const canvas = within(canvasElement);\n    await step('前へをクリックすると、アクティブページが 9 になること', async () => {\n      const prev = await canvas.getByRole('button', { name: /go to previous page/i });\n      await userEvent.click(prev);\n      const page9 = await canvas.getByRole('button', { name: /go to page 9/i });\n      await expect(page9).toHaveAttribute('aria-current', 'page');\n    });\n    await step('最後へをクリックすると、アクティブページが 最終 になること', async () => {\n      const last = await canvas.getByRole('button', { name: /go to last page/i });\n      await userEvent.click(last);\n      const page50 = await canvas.getByRole('button', { name: /go to page 50/i });\n      await expect(page50).toHaveAttribute('aria-current', 'page');\n    });\n  }\n};\n\nexport const MinimalControls: Story = {\n  render: (args) => ({ Component: PaginationWrapper, props: args }),\n  args: {\n    page: 3,\n    pageCount: 8,\n    boundaryCount: 1,\n    siblingCount: 0,\n    showFirstLast: false,\n    showPrevNext: true,\n    accentColor: CCLVividColor.MELON_GREEN\n  },\n  play: async ({ canvasElement, step }) => {\n    const canvas = within(canvasElement);\n    await step('次へをクリックすると、アクティブページが 4 になること', async () => {\n      const next = await canvas.getByRole('button', { name: /go to next page/i });\n      await userEvent.click(next);\n      const page4 = await canvas.getByRole('button', { name: /go to page 4/i });\n      await expect(page4).toHaveAttribute('aria-current', 'page');\n    });\n    await step('前へをクリックすると、アクティブページが 3 に戻ること', async () => {\n      const prev = await canvas.getByRole('button', { name: /go to previous page/i });\n      await userEvent.click(prev);\n      const page3 = await canvas.getByRole('button', { name: /go to page 3/i });\n      await expect(page3).toHaveAttribute('aria-current', 'page');\n    });\n  }\n};\n\nexport const AllColors: Story = {\n  render: () => ({ Component: AllColorsPaginationWrapper }),\n  args: {},\n  parameters: {\n    docs: {\n      source: { code: null }\n    }\n  }\n};\n"],"names":["pageCount","cov_rhj6umpuf","s","$","$$props","undefined","showFirstLast","clamp","n","i","start","end","arr","push","total","current","sib","f","b","startPages","range","Math","min","boundary","siblingsEnd","max","pages","siblingsStart","endPages","filter","p","seen","add","key","goTo","target","next","totalPages","page","accentColor","accentFg","currentPage","disabled","showPrevNext","cov_2oajy3fxz3","path","hash","global","gcv","coverageData","coverage","actualCoverage","perPage","boundaryCount","siblingCount","ariaLabel","handleChange","cov_1wkc94j9iy","Object","entries","CCLVividColor","$$anchor","$$item","name","$$array","color","colorOptions","values","CCLPastelColor","meta","title","component","Pagination","tags","parameters","layout","argTypes","control","type","description","options","Default","render","args","Component","PaginationWrapper","props","SODA_BLUE","play","canvasElement","step","canvas","within","getByRole","userEvent","click","page2","expect","toHaveAttribute","last","lastPage","ManyPages","STRAWBERRY_PINK","prev","page9","page50","MinimalControls","MELON_GREEN","page4","page3","AllColors","AllColorsPaginationWrapper","docs","source","code","originalSource"],"mappings":"yivCAAAA,GAAAC,EAAA,EAAAC,QAAAC,EAAAC,EAAA,YAAA,EAAAC,MAAA,oFAMQC,GAAWL,EAAA,EAAAC,EAAA,EAAA,IAAAC,EAAAC,EAAA,gBAAA,EAAA,EAAqB,kNAmB3B,SAAAG,GAAqBC,gIAMrB,QAAAC,GAAAR,EAAA,EAAAC,QAAqBQ,GAAAD,GAAAE,EAAAF,IAAAR,EAAA,EAAAC,QAAAU,EAAAC,KAAAJ,CAAA,EAAAR,OAAAA,EAAA,EAAAC,EAAA,EAAA,kBAgBvBY,EACAC,EACTC,IAE2C,IAAAf,EAAA,EAAAgB,EAAA,CAAA,IAAAhB,EAAA,EAAAC,EAAA,EAAA,IACnCY,GAAa,EAAAb,OAAAA,EAAA,EAAAiB,EAAA,CAAA,EAAA,CAAA,IAAAjB,EAAA,EAAAC,EAAA,EAAA,IAAA,CAAA,CAAA,EAAAD,EAAA,EAAAiB,EAAA,CAAA,EAAA,CAAA,UACVC,IAASlB,EAAA,EAAAC,QAAGkB,GAAI,EAAKC,KAAKC,IAAIC,EAAMT,CAAA,CAAA,qEAItCO,KAAAC,IAAAP,EAAeC,EACtBF,EACAS,EAEAP,EAAU,EACsC,CAAA,EAC5CO,EAAU,CAAA,GAERC,GAAavB,EAAA,EAAAC,EAAA,EAAA,IAAAmB,KAAOC,IACpBD,KAAAI,IAAAV,EAAiBC,EAAKO,EAASP,EAAG,EAAQ,CAAA,yFAO1CU,EAAAb,KAAA,GAAAM,EAAmB,EAAAlB,EAAA,EAAAC,EAAA,EAAA,qCAMzBwB,EAAUb,KAAI,gBAAU,iEAEpBa,EAAAb,KAAAU,EAAgB,CAAA,GAClBtB,EAAA,EAAAiB,EAAA,CAAA,EAAA,CAAA,KAAAjB,EAAA,EAAAC,EAAA,EAAA,IAEAwB,EAAMb,KAAK,GAAAO,GAAQO,EAAIH,CAAA,CAAA,EAAAvB,EAAA,EAAAC,EAAA,EAAA,uCAGzBwB,EAAUb,mBAAU,+DAEhBa,EAAAb,KAAWC,EAAQS,CAAG,GACxBtB,EAAA,EAAAiB,EAAA,CAAA,EAAA,CAAA,KAAAjB,EAAA,EAAAC,EAAA,EAAA,IAEAwB,EAAMb,KAAK,GAAAe,CAAQ,mDAGfF,EAAQG,OAAQC,IAAA,CAAA7B,EAAA,EAAAgB,EAAA,CAAA,6HAEhBc,EAAAC,IAAIC,EAAA,EAAAhC,EAAA,EAAAC,EAAA,EAAA,OACH,CAAA,CACC,UACEgC,EAAKC,EAAa,IAAAlC,EAAA,EAAAgB,EAAA,CAAA,IAAAhB,EAAA,EAAAC,EAAA,EAAA,6DACrB,MAAAkC,GAAInC,EAAA,EAAAC,QAAGK,GAAA4B,EAAA,EAAAhC,EAAAkC,CAAA,CAAA,GAAApC,EAAA,EAAAC,EAAA,EAAA,0CACD,SAAA,CAAAoC,KAAAF,CAAA,IACZnC,EAAA,EAAAiB,EAAA,CAAA,EAAA,CAAA,GACH,CAAAjB,EAAA,EAAAC,EAAA,EAAA,oMAtFgCqC,EAAA,CAAA,MAAApC,EAAAqC,CAAA,GAAAvC,EAAA,EAAAiB,EAAA,CAAA,EAAA,CAAA,IAAA,qBAAAf,EAAIqC,CAAA,QAAAvC,EAAA,EAAAiB,EAAA,CAAA,EAAA,CAAA,IAAA,mHAEzB,+MAGAf,EAAAsC,+YAaGxC,EAAA,EAAAiB,EAAA,EAAA,EAAA,CAAA,IAAAwB,EAAS,IAAAzC,EAAA,EAAAiB,EAAA,EAAA,EAAA,CAAA,IAAAf,EAAAsC,CAAW,IAAA,IAAA,EAAAxC,EAAA,EAAAC,4hBAC/ByC,suEAqEM,kgEC/FE,SAAAC,GAAA,CAAA,IAAAC,EAAA,2GAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,2GAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,IAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,oBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,CAAA,EAAA,EAAA,CAAA,KAAA,eAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,KAAA,iBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,KAAA,iBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,KAAA,iBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,UAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA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"}