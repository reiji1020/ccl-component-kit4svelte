{"version":3,"file":"Tooltip.stories-CUAvmf8C.js","sources":["../../../src/stories/TooltipWrapper.svelte","../../../src/stories/AllColors/AllColorsTooltipWrapper.svelte","../../../src/stories/Tooltip.stories.ts"],"sourcesContent":["<script lang=\"ts\">\n  import Tooltip from '../lib/Tooltip.svelte';\n  import { CCLVividColor } from '../lib/const/config';\n\n  export let text: string;\n  export let position: 'top' | 'bottom' | 'left' | 'right' = 'top';\n  export let disabled: boolean = false;\n  export let backgroundColor: string = CCLVividColor.WRAP_GREY;\n</script>\n\n<div style=\"border: 1px dashed #ccc; padding: 8px;\">\n  <Tooltip {text} {position} {disabled} {backgroundColor}>\n    <div\n      style=\"width: 120px; height: 40px; border: 1px dashed #ccc; display: flex; justify-content: center; align-items: center;\"\n    >\n      Hover me\n    </div>\n  </Tooltip>\n</div>\n","<script lang=\"ts\">\n  import Tooltip from '../../lib/Tooltip.svelte';\n  import { CCLVividColor } from '../../lib/const/config';\n\n  const allColors = {\n    ...CCLVividColor\n  };\n</script>\n\n<div style=\"display: flex; flex-wrap: wrap; gap: 20px; padding: 20px;\">\n  {#each Object.entries(allColors) as [colorName, colorValue]}\n    <div\n      style=\"display: flex; flex-direction: column; align-items: center; gap: 10px; padding: 10px; border: 1px solid #eee; border-radius: 8px;\"\n    >\n      <span style=\"font-size: 0.9em; color: #555;\">{colorName}</span>\n      <Tooltip text=\"{colorName} Tooltip\" backgroundColor={colorValue} position=\"top\">\n        <div\n          style=\"width: 80px; height: 40px; background-color: var({colorValue}); display: flex; justify-content: center; align-items: center; border-radius: 4px; color: white; font-size: 0.8em;\"\n        >\n          Hover me\n        </div>\n      </Tooltip>\n    </div>\n  {/each}\n</div>\n","import type { Meta, StoryObj } from '@storybook/svelte';\nimport TooltipWrapper from './TooltipWrapper.svelte';\nimport AllColorsTooltipWrapper from './AllColors/AllColorsTooltipWrapper.svelte';\nimport { expect, userEvent, within, waitFor, fireEvent } from '@storybook/test';\nimport { CCLVividColor } from '../lib/const/config';\n\nconst colorOptions = [...Object.values(CCLVividColor)];\n\nconst meta = {\n  title: 'CommonComponents/Tooltip',\n  component: TooltipWrapper,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered'\n  },\n  argTypes: {\n    text: {\n      control: 'text',\n      type: { required: true },\n      description: 'ツールチップとして表示されるテキスト'\n    },\n    position: {\n      control: 'select',\n      options: ['top', 'bottom', 'left', 'right'],\n      description: 'ツールチップの表示位置'\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'ツールチップを無効化するかどうか'\n    },\n    backgroundColor: {\n      control: 'select',\n      options: colorOptions,\n      description: 'ツールチップの背景色'\n    }\n  }\n} satisfies Meta<TooltipWrapper>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nexport const Default: Story = {\n  args: {\n    text: 'これはツールチップです',\n    position: 'top',\n    backgroundColor: CCLVividColor.WRAP_GREY\n  }\n};\n\nexport const PositionBottom: Story = {\n  ...Default,\n  args: {\n    ...Default.args,\n    position: 'bottom'\n  }\n};\n\nexport const PositionLeft: Story = {\n  ...Default,\n  args: {\n    ...Default.args,\n    position: 'left'\n  }\n};\n\nexport const PositionRight: Story = {\n  ...Default,\n  args: {\n    ...Default.args,\n    position: 'right'\n  }\n};\n\nexport const Disabled: Story = {\n  ...Default,\n  args: {\n    ...Default.args,\n    disabled: true\n  },\n  play: async ({ canvasElement, step }) => {\n    const canvas = within(canvasElement);\n    const trigger = canvas.getByTestId('tooltip-trigger');\n\n    // disabledの場合、フォーカスしてもツールチップが表示されないこと\n    await step('disabledの場合、フォーカスしてもツールチップが表示されないこと', async () => {\n      const tooltip = canvas.queryByTestId('tooltip-content');\n      await expect(tooltip).not.toBeVisible(); // disabledの場合はDOM自体は存在するが非表示\n    });\n  }\n};\n\nexport const AllColors: Story = {\n  render: () => ({\n    Component: AllColorsTooltipWrapper\n  }),\n  args: {},\n  parameters: {\n    layout: 'fullscreen',\n    docs: {\n      source: {\n        code: null\n      }\n    }\n  }\n};\n"],"names":["text","cov_1rdf3uqgmp","s","$","$$props","allColors","cov_fuwctvb32","f","Object","entries","$$anchor","$$item","colorName","$$array","colorValue","b","colorOptions","values","CCLVividColor","meta","title","component","TooltipWrapper","tags","parameters","layout","argTypes","control","type","required","description","position","options","disabled","backgroundColor","Default","args","WRAP_GREY","PositionBottom","PositionLeft","PositionRight","Disabled","play","canvasElement","step","canvas","within","getByTestId","tooltip","queryByTestId","expect","not","toBeVisible","AllColors","render","Component","AllColorsTooltipWrapper","docs","source","code","originalSource"],"mappings":"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"}