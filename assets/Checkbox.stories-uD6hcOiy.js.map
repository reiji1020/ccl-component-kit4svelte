{"version":3,"file":"Checkbox.stories-uD6hcOiy.js","sources":["../../../src/stories/AllColors/AllColorsCheckboxWrapper.svelte","../../../src/stories/Checkbox.stories.ts"],"sourcesContent":["<script lang=\"ts\">\n\timport Checkbox from '../../lib/Checkbox.svelte';\n\timport { CCLVividColor, CCLPastelColor } from '../../lib/const/config';\n</script>\n\n<div class=\"color-palette\">\n\t<h2>Vivid Colors</h2>\n\t<div class=\"color-grid\">\n\t\t{#each Object.entries(CCLVividColor) as [name, color]}\n\t\t\t<div class=\"color-sample\">\n\t\t\t\t<Checkbox\n\t\t\t\t\tlabel={name}\n\t\t\t\t\tchecked={true}\n\t\t\t\t\t{color}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t{/each}\n\t</div>\n\n\t<h2>Pastel Colors</h2>\n\t<div class=\"color-grid\">\n\t\t{#each Object.entries(CCLPastelColor) as [name, color]}\n\t\t\t<div class=\"color-sample\">\n\t\t\t\t<Checkbox\n\t\t\t\t\tlabel={name}\n\t\t\t\t\tchecked={true}\n\t\t\t\t\t{color}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t{/each}\n\t</div>\n</div>\n\n<style>\n\t.color-palette {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: 2rem;\n\t}\n\t.color-grid {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n\t\tgap: 1rem;\n\t}\n\t.color-sample {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: 0.5rem;\n\t}\n</style>\n","import type { Meta, StoryObj } from '@storybook/svelte';\nimport Checkbox from '../lib/Checkbox.svelte';\nimport { CCLVividColor, CCLPastelColor } from '../lib/const/config';\nimport { expect, fn, userEvent, within } from '@storybook/test';\nimport MultipleCheckboxesWrapper from './MultipleCheckboxesWrapper.svelte';\nimport AllColorsCheckboxWrapper from './AllColors/AllColorsCheckboxWrapper.svelte';\n\nconst meta = {\n\ttitle: 'Form/Checkbox',\n\tcomponent: Checkbox,\n\ttags: ['autodocs'],\n\targTypes: {\n\t\tlabel: {\n\t\t\tcontrol: { type: 'text' }\n\t\t},\n\t\tchecked: {\n\t\t\tcontrol: { type: 'boolean' }\n\t\t},\n\t\tcolor: {\n\t\t\tcontrol: { type: 'select' },\n\t\t\toptions: Object.values(CCLVividColor)\n\t\t},\n\t\tonChange: fn()\n\t}\n} satisfies Meta<Checkbox>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nconst createStory = (initialArgs: Story['args']): Story => ({\n\targs: {\n\t\t...initialArgs,\n\t\tonChange: fn() // Ensure onChange is always a spy\n\t},\n\tplay: async ({ args, canvasElement, step }) => {\n\t\tconst canvas = within(canvasElement);\n\t\tconst checkbox = canvas.getByRole('checkbox', { hidden: true });\n\n\t\tawait step('初期状態が正しいこと', async () => {\n\t\t\tif (args?.checked) {\n\t\t\t\tawait expect(checkbox).toBeChecked();\n\t\t\t} else {\n\t\t\t\tawait expect(checkbox).not.toBeChecked();\n\t\t\t}\n\t\t});\n\n\t\tawait step('クリック操作が正しく行われること', async () => {\n\t\t\tawait userEvent.click(checkbox);\n\t\t\tif (args?.disabled) {\n\t\t\t\tawait expect(args.onChange).not.toHaveBeenCalled();\n\t\t\t\tawait step('非活性時は状態が変化しないこと', async () => {\n\t\t\t\t\tif (args?.checked) {\n\t\t\t\t\t\tawait expect(checkbox).toBeChecked();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait expect(checkbox).not.toBeChecked();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tawait expect(args.onChange).toHaveBeenCalledOnce();\n\t\t\t\tawait step('活性時は状態が変化すること', async () => {\n\t\t\t\t\tif (args?.checked) {\n\t\t\t\t\t\tawait expect(checkbox).not.toBeChecked(); // Will be false after click\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait expect(checkbox).toBeChecked(); // Will be true after click\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n});\n\nexport const Default = createStory({ label: 'Checkbox', checked: false });\nexport const Checked = createStory({ label: 'Checked', checked: true });\nexport const Disabled = createStory({ label: 'Disabled', checked: false, disabled: true });\nexport const DisabledChecked = createStory({ label: 'Disabled Checked', checked: true, disabled: true });\n\nexport const MultipleCheckboxes: Story = {\n\trender: () => ({\n\t\tComponent: MultipleCheckboxesWrapper,\n\t\tprops: {\n\t\t\tchecked1: false,\n\t\t\tchecked2: false,\n\t\t\tchecked3: false,\n\t\t},\n\t}),\n\tplay: async ({ canvasElement, step }) => {\n\t\tconst canvas = within(canvasElement);\n\n\t\tconst checkbox1 = await canvas.findByRole('checkbox', { hidden: true, name: 'Option 1' });\n\t\tconst checkbox2 = await canvas.findByRole('checkbox', { hidden: true, name: 'Option 2' });\n\t\tconst checkbox3 = await canvas.findByRole('checkbox', { hidden: true, name: 'Option 3' });\n\n\t\tawait step('複数のチェックボックスが存在することを確認', async () => {\n\t\t\tawait expect(checkbox1).toBeInTheDocument();\n\t\t\tawait expect(checkbox2).toBeInTheDocument();\n\t\t\tawait expect(checkbox3).toBeInTheDocument();\n\t\t});\n\n\t\tawait step('Option 1をクリックし、状態が正しく切り替わること', async () => {\n\t\t\tawait userEvent.click(checkbox1);\n\t\t\tawait expect(checkbox1).toBeChecked();\n\t\t\tawait expect(checkbox2).not.toBeChecked();\n\t\t\tawait expect(checkbox3).not.toBeChecked();\n\t\t});\n\n\t\tawait step('Option 2をクリックし、状態が正しく切り替わること', async () => {\n\t\t\tawait userEvent.click(checkbox2);\n\t\t\tawait expect(checkbox1).toBeChecked();\n\t\t\tawait expect(checkbox2).toBeChecked();\n\t\t\tawait expect(checkbox3).not.toBeChecked();\n\t\t});\n\n\t\tawait step('Option 3をクリックし、状態が正しく切り替わること', async () => {\n\t\t\tawait userEvent.click(checkbox3);\n\t\t\tawait expect(checkbox1).toBeChecked();\n\t\t\tawait expect(checkbox2).toBeChecked();\n\t\t\tawait expect(checkbox3).toBeChecked();\n\t\t});\n\n\t\tawait step('Option 1を再度クリックし、チェックが外れること', async () => {\n\t\t\tawait userEvent.click(checkbox1);\n\t\t\tawait expect(checkbox1).not.toBeChecked();\n\t\t\tawait expect(checkbox2).toBeChecked();\n\t\t\tawait expect(checkbox3).toBeChecked();\n\t\t});\n\t},\n};\n\nexport const AllColors: Story = {\n\trender: () => ({ Component: AllColorsCheckboxWrapper }),\n\targs: {},\n\tparameters: {\n\t\tdocs: {\n\t\t\tsource: {\n\t\t\t\tcode: null\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n"],"names":["div2","div1","cov_1jxlmo2l58","s","meta","title","component","Checkbox","tags","argTypes","label","control","type","checked","color","options","Object","values","CCLVividColor","onChange","fn","createStory","initialArgs","args","play","canvasElement","step","checkbox","within","getByRole","hidden","expect","toBeChecked","not","userEvent","click","disabled","toHaveBeenCalled","toHaveBeenCalledOnce","Default","Checked","Disabled","DisabledChecked","MultipleCheckboxes","render","Component","MultipleCheckboxesWrapper","props","checked1","checked2","checked3","canvas","checkbox1","findByRole","name","checkbox2","checkbox3","toBeInTheDocument","AllColors","AllColorsCheckboxWrapper","parameters","docs","source","code","originalSource"],"mappings":"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"}