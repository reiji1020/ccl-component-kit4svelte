{"version":3,"file":"Input.stories-D2hjCv9a.js","sources":["../../../src/stories/AllColors/AllColorsWrapper.svelte","../../../src/stories/Input.stories.ts"],"sourcesContent":["<script lang=\"ts\">\n  import Input from '../../lib/Input.svelte';\n  import { CCLVividColor, CCLPastelColor } from '../../lib/const/config';\n</script>\n\n<div class=\"color-palette\">\n  <h2>Vivid Colors</h2>\n  <div class=\"color-grid\">\n    {#each Object.entries(CCLVividColor) as [name, color]}\n      <div class=\"color-sample\">\n        <Input\n          id={`vivid-${name.toLowerCase()}`}\n          label={name}\n          borderColor={color}\n          placeholder={`--${name.toLowerCase().replace(/_/g, '-')}`}\n        />\n      </div>\n    {/each}\n  </div>\n\n  <h2>Pastel Colors</h2>\n  <div class=\"color-grid\">\n    {#each Object.entries(CCLPastelColor) as [name, color]}\n      <div class=\"color-sample\">\n        <Input\n          id={`pastel-${name.toLowerCase()}`}\n          label={name}\n          borderColor={color}\n          placeholder={`--${name.toLowerCase().replace(/_/g, '-')}`}\n        />\n      </div>\n    {/each}\n  </div>\n</div>\n\n<style>\n  .color-palette {\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n  }\n  .color-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    gap: 1rem;\n  }\n  .color-sample {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n  }\n</style>\n","import type { Meta, StoryObj } from '@storybook/svelte';\nimport Input from '../lib/Input.svelte';\nimport { CCLVividColor } from '../lib/const/config';\nimport { expect, userEvent, within } from '@storybook/test';\nimport AllColorsWrapper from './AllColors/AllColorsWrapper.svelte';\n\nconst meta = {\n  title: 'Form/Input',\n  component: Input,\n  tags: ['autodocs'],\n  argTypes: {\n    type: {\n      control: { type: 'select' },\n      options: ['text', 'password', 'email', 'number']\n    },\n    borderColor: {\n      control: { type: 'select' },\n      options: Object.values(CCLVividColor)\n    }\n  }\n} satisfies Meta<Input>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nconst createStory = (initialArgs: Story['args'], play?: Story['play']): Story => ({\n  args: initialArgs,\n  play\n});\n\nexport const Default = createStory(\n  {\n    id: 'default-input',\n    label: 'お名前',\n    placeholder: '山田 太郎',\n    borderColor: CCLVividColor.STRAWBERRY_PINK\n  },\n  async ({ canvasElement, step }) => {\n    const canvas = within(canvasElement);\n    const input = canvas.getByLabelText('お名前');\n\n    await step('ユーザーが入力フィールドにテキストを入力できること', async () => {\n      await userEvent.type(input, 'テスト入力');\n    });\n\n    await step('入力フィールドの値が正しく更新されること', async () => {\n      await expect(input).toHaveValue('テスト入力');\n    });\n  }\n);\n\nexport const Password = createStory({\n  id: 'password-input',\n  label: 'パスワード',\n  type: 'password',\n  placeholder: 'パスワードを入力',\n  borderColor: CCLVividColor.SODA_BLUE\n});\n\nexport const Disabled = createStory({\n  id: 'disabled-input',\n  label: '入力不可',\n  placeholder: 'このフィールドは無効です',\n  value: '編集できません',\n  disabled: true,\n  borderColor: CCLVividColor.WRAP_GREY\n});\n\nexport const NoLabel = createStory({\n  id: 'no-label-input',\n  placeholder: 'ラベルなしの入力フィールド',\n  borderColor: CCLVividColor.PINEAPPLE_YELLOW\n});\n\nexport const Invalid = createStory(\n  {\n    id: 'invalid-input',\n    label: 'メールアドレス',\n    placeholder: 'メールアドレスを入力',\n    borderColor: CCLVividColor.STRAWBERRY_PINK,\n    value: 'invalid-email',\n    isValid: false,\n    validationMessage: '有効なメールアドレスを入力してください。'\n  },\n  async ({ canvasElement, args, step }) => {\n    const canvas = within(canvasElement);\n    const input = canvas.getByLabelText('メールアドレス');\n\n    await step('バリデーションメッセージが正しく表示されること', async () => {\n      const validationMessage = canvas.getByText(args.validationMessage);\n      await expect(validationMessage).toBeInTheDocument();\n    });\n\n    await step('入力フィールドにinvalidクラスが付与されていること', async () => {\n      await expect(input).toHaveClass('input-field invalid');\n    });\n  }\n);\n\nexport const AllColors: Story = {\n  render: () => ({ Component: AllColorsWrapper }),\n  args: {},\n  parameters: {\n    docs: {\n      source: {\n        code: null\n      }\n    }\n  }\n};\n"],"names":["$0","cov_zx34i6oxs","s","$","f","name","toLowerCase","meta","title","component","Input","tags","argTypes","type","control","options","borderColor","Object","values","CCLVividColor","createStory","initialArgs","play","args","Default","id","label","placeholder","STRAWBERRY_PINK","canvasElement","step","input","within","getByLabelText","userEvent","expect","toHaveValue","Password","SODA_BLUE","Disabled","value","disabled","WRAP_GREY","NoLabel","PINEAPPLE_YELLOW","Invalid","isValid","validationMessage","canvas","getByText","toBeInTheDocument","toHaveClass","AllColors","render","Component","AllColorsWrapper","parameters","docs","source","code","originalSource"],"mappings":"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"}