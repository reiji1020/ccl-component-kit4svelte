{"version":3,"file":"Pagination-CYTzN_Kl.js","sources":["../../../src/lib/Pagination.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { createEventDispatcher, onMount } from 'svelte';\n  import type { ColorVar } from './const/config';\n\n  export let page: number = 1; // 1-based\n  export let total: number | undefined = undefined; // total items\n  export let perPage: number = 10; // items per page when using total\n  export let pageCount: number | undefined = undefined; // total pages (alternative to total)\n  export let boundaryCount: number = 1; // pages maintained at each boundary\n  export let siblingCount: number = 1; // pages around current page\n  export let showFirstLast: boolean = true;\n  export let showPrevNext: boolean = true;\n  export let disabled: boolean = false;\n  export let accentColor: ColorVar = '--soda-blue';\n  export let ariaLabel: string = 'Pagination';\n\n  const dispatch = createEventDispatcher<{ change: { page: number } }>();\n\n  // normalize and clamp helpers\n  function getPageCount(): number {\n    const count = pageCount ?? (total && perPage ? Math.ceil(total / perPage) : 1);\n    return Math.max(1, count || 1);\n  }\n\n  function clampPage(p: number): number {\n    const max = getPageCount();\n    return Math.min(Math.max(1, Math.trunc(p || 1)), max);\n  }\n\n  $: page = clampPage(page);\n\n  function goTo(p: number) {\n    if (disabled) return;\n    const next = clampPage(p);\n    if (next !== page) {\n      page = next;\n      dispatch('change', { page });\n    }\n  }\n\n  type Item = number | 'ellipsis';\n\n  function range(start: number, end: number): number[] {\n    return Array.from({ length: end - start + 1 }, (_, i) => start + i);\n  }\n\n  function usePagination(): Item[] {\n    const totalPages = getPageCount();\n\n    // total pages small enough to show all\n    const totalNumbers = boundaryCount * 2 + siblingCount * 2 + 3; // first + last + current\n    const totalBlocks = totalNumbers + 2; // with two ellipses\n\n    if (totalPages <= totalBlocks) {\n      return range(1, totalPages);\n    }\n\n    const startPages = range(1, Math.min(boundaryCount, totalPages));\n    const endPages = range(\n      Math.max(totalPages - boundaryCount + 1, boundaryCount + 1),\n      totalPages\n    );\n\n    const siblingsStart = Math.max(\n      Math.min(page - siblingCount, totalPages - boundaryCount - siblingCount * 2 - 1),\n      boundaryCount + 2\n    );\n    const siblingsEnd = Math.min(\n      Math.max(page + siblingCount, boundaryCount + siblingCount * 2 + 2),\n      endPages[0] - 2\n    );\n\n    const items: Item[] = [\n      ...startPages,\n      siblingsStart > boundaryCount + 2 ? 'ellipsis' : (boundaryCount + 1) as unknown as Item,\n      ...range(siblingsStart, siblingsEnd),\n      siblingsEnd < totalPages - boundaryCount - 1 ? 'ellipsis' : (totalPages - boundaryCount) as unknown as Item,\n      ...endPages\n    ];\n\n    // Clean up potential duplicate numbers from the conditional fallbacks above\n    const normalized: Item[] = [];\n    let prev: Item | undefined = undefined;\n    for (const it of items) {\n      if (it === 'ellipsis') {\n        if (prev !== 'ellipsis') normalized.push('ellipsis');\n      } else {\n        if (it !== prev) normalized.push(it);\n      }\n      prev = it;\n    }\n    return normalized;\n  }\n\n  $: items = usePagination();\n\n  onMount(() => {\n    // Ensure initial page is clamped and consumers can react if needed\n    const normalized = clampPage(page);\n    if (normalized !== page) {\n      page = normalized;\n      dispatch('change', { page });\n    }\n  });\n</script>\n\n<nav class=\"ccl-pagination\" aria-label={ariaLabel} style={`--ccl-pagination-accent: var(${accentColor});`}>\n  <ul class=\"ccl-pagination__list\" role=\"list\">\n    {#if showFirstLast}\n      <li>\n        <button\n          class=\"ccl-pagination__control\"\n          on:click={() => goTo(1)}\n          disabled={disabled || page === 1}\n          aria-label=\"go to first page\"\n          type=\"button\"\n        >«</button>\n      </li>\n    {/if}\n    {#if showPrevNext}\n      <li>\n        <button\n          class=\"ccl-pagination__control\"\n          on:click={() => goTo(page - 1)}\n          disabled={disabled || page === 1}\n          aria-label=\"go to previous page\"\n          type=\"button\"\n        >‹</button>\n      </li>\n    {/if}\n\n    {#each items as it}\n      {#if it === 'ellipsis'}\n        <li class=\"ccl-pagination__ellipsis\" aria-hidden=\"true\">…</li>\n      {:else}\n        <li>\n          <button\n            class=\"ccl-pagination__page\"\n            class:active={it === page}\n            aria-label={`go to page ${it}`}\n            aria-current={it === page ? 'page' : undefined}\n            disabled={disabled}\n            on:click={() => goTo(it)}\n            type=\"button\"\n          >{it}</button>\n        </li>\n      {/if}\n    {/each}\n\n    {#if showPrevNext}\n      <li>\n        <button\n          class=\"ccl-pagination__control\"\n          on:click={() => goTo(page + 1)}\n          disabled={disabled || page === getPageCount()}\n          aria-label=\"go to next page\"\n          type=\"button\"\n        >›</button>\n      </li>\n    {/if}\n    {#if showFirstLast}\n      <li>\n        <button\n          class=\"ccl-pagination__control\"\n          on:click={() => goTo(getPageCount())}\n          disabled={disabled || page === getPageCount()}\n          aria-label=\"go to last page\"\n          type=\"button\"\n        >»</button>\n      </li>\n    {/if}\n  </ul>\n</nav>\n\n<style>\n  .ccl-pagination {\n    --ccl-pagination-accent: var(--soda-blue);\n    display: inline-block;\n  }\n  .ccl-pagination__list {\n    list-style: none;\n    display: inline-flex;\n    gap: 6px;\n    padding: 0;\n    margin: 0;\n    align-items: center;\n  }\n  .ccl-pagination__page,\n  .ccl-pagination__control {\n    appearance: none;\n    border: 1px solid var(--wrap-grey, #ccc);\n    background: white;\n    color: inherit;\n    width: 36px;\n    height: 36px;\n    padding: 0;\n    border-radius: 50%;\n    cursor: pointer;\n    font: inherit;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n  }\n  .ccl-pagination__page.active {\n    background: var(--ccl-pagination-accent);\n    border-color: var(--ccl-pagination-accent);\n    color: white;\n  }\n  .ccl-pagination__ellipsis {\n    padding: 0 4px;\n    color: var(--wrap-grey, #888);\n  }\n  .ccl-pagination__page:disabled,\n  .ccl-pagination__control:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n  .ccl-pagination__page:not(:disabled):hover,\n  .ccl-pagination__control:not(:disabled):hover {\n    border-color: var(--ccl-pagination-accent);\n  }\n</style>\n"],"names":["accentColor","cov_rhj6umpuf","s","$","$$props","getPageCount","f","Math","max","b","count","goTo","p","disabled","next","page","Array","from","length","end","start","_","i","usePagination","totalPages","totalNumbers","boundaryCount","siblingCount","range","startPages","min","endPages","items","siblingsStart","normalized","prev","undefined","it","push","onMount","clampPage","dispatch","button"],"mappings":"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"}