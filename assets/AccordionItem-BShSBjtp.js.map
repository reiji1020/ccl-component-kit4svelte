{"version":3,"file":"AccordionItem-BShSBjtp.js","sources":["../../../src/lib/scripts/accordionContext.ts","../../../src/lib/Accordion.svelte","../../../src/lib/AccordionItem.svelte"],"sourcesContent":["export const ACCORDION_CONTEXT_KEY = Symbol('accordion-context');\n","<script lang=\"ts\">\n\timport { setContext } from 'svelte';\n\timport { writable } from 'svelte/store';\n\n\t/**\n\t * 複数の項目を同時に開けるようにするかどうか\n\t * @default false\n\t * @type boolean\n\t */\n\texport let multiple: boolean = false;\n\n\timport { ACCORDION_CONTEXT_KEY } from './scripts/accordionContext';\n\n\tconst openItems = writable<Set<string>>(new Set());\n\n\tfunction toggleItem(label: string) {\n\t\topenItems.update((currentOpenItems) => {\n\t\t\tconst newOpenItems = new Set(currentOpenItems);\n\t\t\tif (newOpenItems.has(label)) {\n\t\t\t\tnewOpenItems.delete(label);\n\t\t\t} else {\n\t\t\t\tif (!multiple) {\n\t\t\t\t\tnewOpenItems.clear();\n\t\t\t\t}\n\t\t\t\tnewOpenItems.add(label);\n\t\t\t}\n\t\t\treturn newOpenItems;\n\t\t});\n\t}\n\n\tsetContext(ACCORDION_CONTEXT_KEY, {\n\t\topenItems,\n\t\ttoggleItem,\n\t\tinitiallyOpen: (label: string) => {\n\t\t\topenItems.update((items) => items.add(label));\n\t\t}\n\t});\n</script>\n\n<div class=\"accordion-wrapper\" role=\"presentation\">\n\t<slot />\n</div>\n\n<style>\n\t.accordion-wrapper {\n\t\tborder: 1px solid #e0e0e0;\n\t\tborder-radius: 8px;\n\t\toverflow: hidden;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { getContext, onMount } from 'svelte';\n\timport { writable, type Readable } from 'svelte/store';\n\n\t/**\n\t * 項目のヘッダーとして常に表示されるテキスト\n\t * @type string\n\t */\n\texport let label: string;\n\n\t/**\n\t * 項目の初期状態を開いた状態にするかどうか\n\t * @default false\n\t * @type boolean\n\t */\n\texport let isOpen: boolean = false;\n\n\t/**\n\t * ヘッダーの背景色\n\t * @type {string | undefined}\n\t */\n\texport let headerColor: string | undefined = undefined;\n\n\t/**\n\t * コンテンツエリアの背景色\n\t * @type {string | undefined}\n\t */\n\texport let contentColor: string | undefined = undefined;\n\n\timport { ACCORDION_CONTEXT_KEY } from './scripts/accordionContext';\n\n\tinterface AccordionContext {\n\t\topenItems: Readable<Set<string>>;\n\t\ttoggleItem: (label: string) => void;\n\t\tinitiallyOpen: (label: string) => void;\n\t}\n\n\tconst { openItems, toggleItem, initiallyOpen } =\n\t\tgetContext<AccordionContext>(ACCORDION_CONTEXT_KEY);\n\n\tonMount(() => {\n\t\tif (isOpen) {\n\t\t\tinitiallyOpen(label);\n\t\t}\n\t});\n\n\tlet isContentOpen = false;\n\t$: isContentOpen = $openItems.has(label);\n</script>\n\n<div\n\tclass=\"accordion-item\"\n\tstyle={`${headerColor ? `--header-bg-color: var(${headerColor});` : ''}${contentColor ? `--content-bg-color: var(${contentColor});` : ''}`}\n>\n\t<h2 class=\"accordion-header\">\n\t\t<button\n\t\t\tclass=\"accordion-button\"\n\t\t\taria-expanded={isContentOpen}\n\t\t\taria-controls={`accordion-panel-${label}`}\n\t\t\ton:click={() => toggleItem(label)}\n\t\t>\n\t\t\t<span class=\"button-label\">{label}</span>\n\t\t\t<span class=\"accordion-icon\" class:open={isContentOpen} aria-hidden=\"true\">▼</span>\n\t\t</button>\n\t</h2>\n\t{#if isContentOpen}\n\t\t<div\n\t\t\tclass=\"accordion-content\"\n\t\t\tid={`accordion-panel-${label}`}\n\t\t\trole=\"region\"\n\t\t\taria-labelledby={`accordion-button-${label}`}\n\t\t>\n\t\t\t<div class=\"content-padding\">\n\t\t\t\t<slot />\n\t\t\t</div>\n\t\t</div>\n\t{/if}\n</div>\n\n<style>\n\t.accordion-item {\n\t\tborder-bottom: 1px solid #e0e0e0;\n\t}\n\n\t.accordion-item:last-child {\n\t\tborder-bottom: none;\n\t}\n\n\t.accordion-header {\n\t\tmargin: 0;\n\t}\n\n\t.accordion-button {\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tpadding: 16px 20px;\n\t\tfont-size: 1rem;\n\t\tfont-weight: 600;\n\t\tcolor: #333;\n\t\tbackground-color: var(--header-bg-color, #f9f9f9);\n\t\tborder: none;\n\t\tcursor: pointer;\n\t\ttext-align: left;\n\t\ttransition: filter 0.2s ease-in-out;\n\t}\n\n\t.accordion-button:hover {\n\t\tfilter: brightness(95%);\n\t}\n\n\t.accordion-icon {\n\t\ttransition: transform 0.2s ease-in-out;\n\t\ttransform: rotate(0deg);\n\t}\n\n\t.accordion-icon.open {\n\t\ttransform: rotate(180deg);\n\t}\n\n\t.accordion-content {\n\t\tbackground-color: var(--content-bg-color, white);\n\t}\n\n\t.content-padding {\n\t\tpadding: 16px 20px;\n\t}\n</style>\n"],"names":["ACCORDION_CONTEXT_KEY","cov_1g5qro1sqt","s","Symbol","multiple","cov_jy0qvufni","b","clear","target","div","anchor","cov_21ju0ys2b3"],"mappings":"wnCAAO,MAAMA,GAAAC,EAAA,EAAAC,EAAA,CAAA,IAAwBC,OAAO,mBAAmB,y2cCErDC,kBAAAC,EAAA,EAAAC,EAAA,EAAA,EAAA,CAAA,IAAAD,EAAA,EAAAH,EAAA,EAAA,MASAK,qqoCC6DPC,EAAAC,EAAAC,CAAA,EAAAC,EAAA,EAAAT"}