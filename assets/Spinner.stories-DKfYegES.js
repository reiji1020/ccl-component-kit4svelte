import{S as f}from"./Spinner-BC8QlFsg.js";import{C as a,a as s}from"./config-kcBgQwvH.js";import{w as L,e as o}from"./index-CrmC1JuE.js";import{f as S,b as R}from"./props-CUu2VnSM.js";import{L as i,M as d,f as Q,p as j,k as E,N as B}from"./runtime-gABUAsI6.js";import{s as W}from"./render-CxQItQXj.js";import{e as P,i as I}from"./each-Bi0pIGDH.js";import{i as F}from"./lifecycle-Cmteo-47.js";import"./style-DvJ3IcV1.js";function A(){var l="/home/runner/work/ccl-component-kit4svelte/ccl-component-kit4svelte/src/stories/AllColors/AllColorsSpinnerWrapper.svelte",t="1a40c1ca3f2912749a451dbc26b36ff26ded8750",n=window,e="__coverage__",C={path:"/home/runner/work/ccl-component-kit4svelte/ccl-component-kit4svelte/src/stories/AllColors/AllColorsSpinnerWrapper.svelte",statementMap:{0:{start:{line:7,column:13},end:{line:7,column:233}},1:{start:{line:8,column:13},end:{line:8,column:233}},2:{start:{line:9,column:11},end:{line:9,column:302}},3:{start:{line:12,column:1},end:{line:12,column:24}},4:{start:{line:14,column:21},end:{line:29,column:2}},5:{start:{line:31,column:22},end:{line:38,column:2}},6:{start:{line:40,column:1},end:{line:40,column:10}},7:{start:{line:42,column:11},end:{line:42,column:17}},8:{start:{line:43,column:13},end:{line:43,column:25}},9:{start:{line:44,column:13},end:{line:44,column:41}},10:{start:{line:46,column:1},end:{line:66,column:4}},11:{start:{line:46,column:24},end:{line:46,column:35}},12:{start:{line:47,column:14},end:{line:47,column:22}},13:{start:{line:48,column:13},end:{line:48,column:27}},14:{start:{line:50,column:2},end:{line:57,column:5}},15:{start:{line:52,column:4},end:{line:52,column:36}},16:{start:{line:59,column:13},end:{line:59,column:31}},17:{start:{line:60,column:13},end:{line:60,column:32}},18:{start:{line:62,column:2},end:{line:62,column:16}},19:{start:{line:63,column:2},end:{line:63,column:17}},20:{start:{line:64,column:2},end:{line:64,column:69}},21:{start:{line:64,column:26},end:{line:64,column:67}},22:{start:{line:65,column:2},end:{line:65,column:28}},23:{start:{line:68,column:1},end:{line:68,column:16}},24:{start:{line:69,column:1},end:{line:69,column:16}},25:{start:{line:71,column:13},end:{line:71,column:32}},26:{start:{line:72,column:13},end:{line:72,column:41}},27:{start:{line:74,column:1},end:{line:94,column:4}},28:{start:{line:74,column:24},end:{line:74,column:36}},29:{start:{line:75,column:14},end:{line:75,column:22}},30:{start:{line:76,column:15},end:{line:76,column:29}},31:{start:{line:78,column:2},end:{line:85,column:5}},32:{start:{line:80,column:4},end:{line:80,column:36}},33:{start:{line:87,column:15},end:{line:87,column:35}},34:{start:{line:88,column:15},end:{line:88,column:36}},35:{start:{line:90,column:2},end:{line:90,column:18}},36:{start:{line:91,column:2},end:{line:91,column:17}},37:{start:{line:92,column:2},end:{line:92,column:71}},38:{start:{line:92,column:26},end:{line:92,column:69}},39:{start:{line:93,column:2},end:{line:93,column:28}},40:{start:{line:96,column:1},end:{line:96,column:16}},41:{start:{line:97,column:1},end:{line:97,column:16}},42:{start:{line:98,column:1},end:{line:98,column:14}},43:{start:{line:99,column:1},end:{line:99,column:25}},44:{start:{line:100,column:1},end:{line:100,column:9}},45:{start:{line:102,column:1},end:{line:102,column:208}}},fnMap:{0:{name:"AllColorsSpinnerWrapper",decl:{start:{line:11,column:24},end:{line:11,column:47}},loc:{start:{line:11,column:67},end:{line:101,column:1}},line:11},1:{name:"(anonymous_1)",decl:{start:{line:46,column:18},end:{line:46,column:19}},loc:{start:{line:46,column:24},end:{line:46,column:35}},line:46},2:{name:"(anonymous_2)",decl:{start:{line:46,column:46},end:{line:46,column:47}},loc:{start:{line:46,column:73},end:{line:66,column:2}},line:46},3:{name:"(anonymous_3)",decl:{start:{line:51,column:3},end:{line:51,column:4}},loc:{start:{line:51,column:15},end:{line:53,column:4}},line:51},4:{name:"(anonymous_4)",decl:{start:{line:64,column:20},end:{line:64,column:21}},loc:{start:{line:64,column:26},end:{line:64,column:67}},line:64},5:{name:"(anonymous_5)",decl:{start:{line:74,column:18},end:{line:74,column:19}},loc:{start:{line:74,column:24},end:{line:74,column:36}},line:74},6:{name:"(anonymous_6)",decl:{start:{line:74,column:47},end:{line:74,column:48}},loc:{start:{line:74,column:74},end:{line:94,column:2}},line:74},7:{name:"(anonymous_7)",decl:{start:{line:79,column:3},end:{line:79,column:4}},loc:{start:{line:79,column:15},end:{line:81,column:4}},line:79},8:{name:"(anonymous_8)",decl:{start:{line:92,column:20},end:{line:92,column:21}},loc:{start:{line:92,column:26},end:{line:92,column:69}},line:92}},branchMap:{},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0},f:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0},b:{},inputSourceMap:{version:3,file:null,sources:["/home/runner/work/ccl-component-kit4svelte/ccl-component-kit4svelte/src/stories/AllColors/AllColorsSpinnerWrapper.svelte"],names:[],mappings:"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"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"1a40c1ca3f2912749a451dbc26b36ff26ded8750"},r=n[e]||(n[e]={});(!r[l]||r[l].hash!==t)&&(r[l]=C);var p=r[l];return A=function(){return p},p}A();var q=(A().s[0]++,S('<div style="display: flex; flex-direction: column; align-items: center; gap: 10px; border: 1px solid #eee; padding: 15px; border-radius: 8px;"><!> <span style="font-size: 14px; color: #555;"> </span></div>')),J=(A().s[1]++,S('<div style="display: flex; flex-direction: column; align-items: center; gap: 10px; border: 1px solid #eee; padding: 15px; border-radius: 8px;"><!> <span style="font-size: 14px; color: #555;"> </span></div>')),X=(A().s[2]++,S('<div style="display: flex; flex-direction: column; gap: 40px; padding: 20px;"><div><h3>Vivid Colors</h3> <div style="display: flex; flex-wrap: wrap; gap: 20px;"></div></div> <div><h3>Pastel Colors</h3> <div style="display: flex; flex-wrap: wrap; gap: 20px;"></div></div></div>'));function T(l,t){A().f[0]++,A().s[3]++,j(t,!1);const n=(A().s[4]++,[{name:"STRAWBERRY_PINK",value:a.STRAWBERRY_PINK},{name:"PINEAPPLE_YELLOW",value:a.PINEAPPLE_YELLOW},{name:"SODA_BLUE",value:a.SODA_BLUE},{name:"MELON_GREEN",value:a.MELON_GREEN},{name:"GRAPE_PURPLE",value:a.GRAPE_PURPLE},{name:"WRAP_GREY",value:a.WRAP_GREY}]),e=(A().s[5]++,[{name:"PEACH_PINK",value:s.PEACH_PINK},{name:"LEMON_YELLOW",value:s.LEMON_YELLOW},{name:"SUGAR_BLUE",value:s.SUGAR_BLUE},{name:"MATCHA_GREEN",value:s.MATCHA_GREEN},{name:"AKEBI_PURPLE",value:s.AKEBI_PURPLE},{name:"CLOUD_GREY",value:s.CLOUD_GREY}]);A().s[6]++,F();var C=(A().s[7]++,X()),r=(A().s[8]++,i(C)),p=(A().s[9]++,d(i(r),2));A().s[10]++,P(p,5,()=>(A().f[1]++,A().s[11]++,n),I,(g,c)=>{A().f[2]++;var m=(A().s[12]++,q()),u=(A().s[13]++,i(m));A().s[14]++,f(u,{get color(){return A().f[3]++,A().s[15]++,E(c).value},size:"60px",borderWidth:"6px"});var w=(A().s[16]++,d(u,2)),x=(A().s[17]++,i(w));A().s[18]++,A().s[19]++,A().s[20]++,B(()=>(A().f[4]++,A().s[21]++,W(x,E(c).name))),A().s[22]++,R(g,m)}),A().s[23]++,A().s[24]++;var k=(A().s[25]++,d(r,2)),V=(A().s[26]++,d(i(k),2));A().s[27]++,P(V,5,()=>(A().f[5]++,A().s[28]++,e),I,(g,c)=>{A().f[6]++;var m=(A().s[29]++,J()),u=(A().s[30]++,i(m));A().s[31]++,f(u,{get color(){return A().f[7]++,A().s[32]++,E(c).value},size:"60px",borderWidth:"6px"});var w=(A().s[33]++,d(u,2)),x=(A().s[34]++,i(w));A().s[35]++,A().s[36]++,A().s[37]++,B(()=>(A().f[8]++,A().s[38]++,W(x,E(c).name))),A().s[39]++,R(g,m)}),A().s[40]++,A().s[41]++,A().s[42]++,A().s[43]++,R(l,C),A().s[44]++,Q()}A().s[45]++;T.__docgen={version:3,name:"AllColorsSpinnerWrapper.svelte",data:[],computed:[],methods:[],components:[],description:null,keywords:[],events:[],slots:[],refs:[]};const Z=[a.STRAWBERRY_PINK,a.PINEAPPLE_YELLOW,a.SODA_BLUE,a.MELON_GREEN,a.GRAPE_PURPLE,a.WRAP_GREY,s.PEACH_PINK,s.LEMON_YELLOW,s.SUGAR_BLUE,s.MATCHA_GREEN,s.AKEBI_PURPLE,s.CLOUD_GREY],rA={title:"CommonComponents/Spinner",component:f,tags:["autodocs"],parameters:{layout:"centered"},argTypes:{size:{control:{type:"text"},description:'スピナーのサイズ (例: "40px", "2em")'},color:{control:{type:"select"},options:Z,description:"スピナーの色"},borderWidth:{control:{type:"text"},description:'スピナーのボーダー幅 (例: "4px", "0.2em")'}}},v={args:{size:"50px",color:a.STRAWBERRY_PINK,borderWidth:"5px"},play:async({canvasElement:l,step:t,args:n})=>{const e=L(l);await t("スピナーが表示されていること",async()=>{const C=e.getByRole("status");await o(C).toBeInTheDocument()}),await t("スピナーのサイズが指定通りであること",async()=>{const C=e.getByRole("status");await o(C).toHaveStyle(`width: ${n.size}; height: ${n.size};`)}),await t("スピナーのボーダー幅が指定通りであること",async()=>{const C=e.getByRole("status");await o(C).toHaveStyle(`border-width: ${n.borderWidth};`)})}},y={args:{size:"80px",color:a.MELON_GREEN,borderWidth:"8px"},play:async({canvasElement:l,step:t,args:n})=>{const e=L(l);await t("スピナーが表示されていること",async()=>{const C=e.getByRole("status");await o(C).toBeInTheDocument()}),await t("スピナーのサイズが指定通りであること",async()=>{const C=e.getByRole("status");await o(C).toHaveStyle(`width: ${n.size}; height: ${n.size};`)}),await t("スピナーのボーダー幅が指定通りであること",async()=>{const C=e.getByRole("status");await o(C).toHaveStyle(`border-width: ${n.borderWidth};`)})}},_={args:{size:"20px",color:a.SODA_BLUE,borderWidth:"2px"},play:async({canvasElement:l,step:t,args:n})=>{const e=L(l);await t("スピナーが表示されていること",async()=>{const C=e.getByRole("status");await o(C).toBeInTheDocument()}),await t("スピナーのサイズが指定通りであること",async()=>{const C=e.getByRole("status");await o(C).toHaveStyle(`width: ${n.size}; height: ${n.size};`)}),await t("スピナーのボーダー幅が指定通りであること",async()=>{const C=e.getByRole("status");await o(C).toHaveStyle(`border-width: ${n.borderWidth};`)})}},h={render:()=>({Component:T}),args:{},parameters:{docs:{source:{code:null}}}};var b,K,N;v.parameters={...v.parameters,docs:{...(b=v.parameters)==null?void 0:b.docs,source:{originalSource:`{
  args: {
    size: '50px',
    color: CCLVividColor.STRAWBERRY_PINK,
    borderWidth: '5px'
  },
  play: async ({
    canvasElement,
    step,
    args
  }) => {
    const canvas = within(canvasElement);
    await step('スピナーが表示されていること', async () => {
      const spinner = canvas.getByRole('status');
      await expect(spinner).toBeInTheDocument();
    });
    await step('スピナーのサイズが指定通りであること', async () => {
      const spinner = canvas.getByRole('status');
      await expect(spinner).toHaveStyle(\`width: \${args.size}; height: \${args.size};\`);
    });
    await step('スピナーのボーダー幅が指定通りであること', async () => {
      const spinner = canvas.getByRole('status');
      await expect(spinner).toHaveStyle(\`border-width: \${args.borderWidth};\`);
    });
  }
}`,...(N=(K=v.parameters)==null?void 0:K.docs)==null?void 0:N.source}}};var Y,D,O;y.parameters={...y.parameters,docs:{...(Y=y.parameters)==null?void 0:Y.docs,source:{originalSource:`{
  args: {
    size: '80px',
    color: CCLVividColor.MELON_GREEN,
    borderWidth: '8px'
  },
  play: async ({
    canvasElement,
    step,
    args
  }) => {
    const canvas = within(canvasElement);
    await step('スピナーが表示されていること', async () => {
      const spinner = canvas.getByRole('status');
      await expect(spinner).toBeInTheDocument();
    });
    await step('スピナーのサイズが指定通りであること', async () => {
      const spinner = canvas.getByRole('status');
      await expect(spinner).toHaveStyle(\`width: \${args.size}; height: \${args.size};\`);
    });
    await step('スピナーのボーダー幅が指定通りであること', async () => {
      const spinner = canvas.getByRole('status');
      await expect(spinner).toHaveStyle(\`border-width: \${args.borderWidth};\`);
    });
  }
}`,...(O=(D=y.parameters)==null?void 0:D.docs)==null?void 0:O.source}}};var z,G,U;_.parameters={..._.parameters,docs:{...(z=_.parameters)==null?void 0:z.docs,source:{originalSource:`{
  args: {
    size: '20px',
    color: CCLVividColor.SODA_BLUE,
    borderWidth: '2px'
  },
  play: async ({
    canvasElement,
    step,
    args
  }) => {
    const canvas = within(canvasElement);
    await step('スピナーが表示されていること', async () => {
      const spinner = canvas.getByRole('status');
      await expect(spinner).toBeInTheDocument();
    });
    await step('スピナーのサイズが指定通りであること', async () => {
      const spinner = canvas.getByRole('status');
      await expect(spinner).toHaveStyle(\`width: \${args.size}; height: \${args.size};\`);
    });
    await step('スピナーのボーダー幅が指定通りであること', async () => {
      const spinner = canvas.getByRole('status');
      await expect(spinner).toHaveStyle(\`border-width: \${args.borderWidth};\`);
    });
  }
}`,...(U=(G=_.parameters)==null?void 0:G.docs)==null?void 0:U.source}}};var H,M,$;h.parameters={...h.parameters,docs:{...(H=h.parameters)==null?void 0:H.docs,source:{originalSource:`{
  render: () => ({
    Component: AllColorsSpinnerWrapper
  }),
  args: {},
  parameters: {
    docs: {
      source: {
        code: null
      }
    }
  }
}`,...($=(M=h.parameters)==null?void 0:M.docs)==null?void 0:$.source}}};const iA=["Default","Large","Small","AllColors"];export{h as AllColors,v as Default,y as Large,_ as Small,iA as __namedExportsOrder,rA as default};
//# sourceMappingURL=Spinner.stories-DKfYegES.js.map
