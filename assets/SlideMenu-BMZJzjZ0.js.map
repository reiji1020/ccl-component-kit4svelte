{"version":3,"file":"SlideMenu-BMZJzjZ0.js","sources":["../../../src/lib/Drawer.svelte","../../../src/lib/SlideMenu.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { createEventDispatcher, onMount, onDestroy } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  /** 開閉状態（制御用） */\n  export let open: boolean = false;\n  /** どの方向から表示するか */\n  export let side: 'left' | 'right' | 'top' | 'bottom' = 'right';\n  /** パネルサイズ（left/right は幅、top/bottom は高さ） */\n  export let size: string = '320px';\n  /** 背景のバックドロップを表示するか */\n  export let backdrop: boolean = true;\n  /** ESC キーで閉じるか */\n  export let closeOnEsc: boolean = true;\n  /** バックドロップクリックで閉じるか */\n  export let closeOnBackdropClick: boolean = true;\n  /** アクセシビリティ用ラベル（タイトルが無い場合など） */\n  export let ariaLabel: string | undefined;\n  /** 追加クラス（外部からパネルへ付与） */\n  export let panelClass: string = '';\n  /** 追加スタイル（外部からパネルへ付与） */\n  export let panelStyle: string = '';\n\n  let panelEl: HTMLDivElement | null = null;\n\n  function handleKeydown(e: KeyboardEvent) {\n    if (!open) return;\n    if (closeOnEsc && e.key === 'Escape') {\n      e.stopPropagation();\n      dispatch('close');\n    }\n  }\n\n  function onBackdropClick() {\n    if (!open) return;\n    if (closeOnBackdropClick) dispatch('close');\n  }\n\n  function lockScroll(lock: boolean) {\n    try {\n      document.body.style.overflow = lock ? 'hidden' : '';\n    } catch {}\n  }\n\n  $: lockScroll(open && backdrop);\n\n  onMount(() => {\n    window.addEventListener('keydown', handleKeydown, { capture: true });\n  });\n  onDestroy(() => {\n    window.removeEventListener('keydown', handleKeydown, { capture: true } as any);\n    lockScroll(false);\n  });\n</script>\n\n{#if backdrop}\n  <div\n    class=\"drawer-backdrop {open ? 'open' : ''}\"\n    data-testid=\"drawer-backdrop\"\n    aria-hidden=\"true\"\n    on:click={onBackdropClick}\n  />\n{/if}\n\n<div\n  bind:this={panelEl}\n  {...$$restProps}\n  class={`drawer ${open ? 'open' : ''} from-${side} ${panelClass}`}\n  role=\"dialog\"\n  aria-modal=\"true\"\n  aria-hidden={!open}\n  aria-label={ariaLabel}\n  style={`--drawer-size: ${size}; ${panelStyle}`}\n>\n  <slot />\n</div>\n\n<style>\n  .drawer-backdrop {\n    position: fixed;\n    inset: 0;\n    background: rgba(0, 0, 0, 0.35);\n    opacity: 0;\n    pointer-events: none;\n    transition: opacity 0.2s ease;\n    z-index: 9998;\n  }\n  .drawer-backdrop.open {\n    opacity: 1;\n    pointer-events: auto;\n  }\n\n  .drawer {\n    position: fixed;\n    z-index: 9999;\n    background: #fff;\n    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);\n    transition: transform 0.22s ease;\n    overflow: hidden; /* prevent inner spill */\n    visibility: hidden; /* hide when closed to avoid visual leak */\n    pointer-events: none; /* ignore interactions when closed */\n    /* default size for each side is set via vars */\n  }\n\n  .drawer.open {\n    visibility: visible;\n    pointer-events: auto;\n  }\n\n  /* from-right */\n  .drawer.from-right {\n    top: 0;\n    right: 0;\n    height: 100%;\n    width: var(--drawer-size);\n    transform: translateX(100%);\n  }\n  .drawer.from-right.open {\n    transform: translateX(0);\n  }\n\n  /* from-left */\n  .drawer.from-left {\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: var(--drawer-size);\n    transform: translateX(-100%);\n  }\n  .drawer.from-left.open {\n    transform: translateX(0);\n  }\n\n  /* from-top */\n  .drawer.from-top {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: var(--drawer-size);\n    transform: translateY(-100%);\n  }\n  .drawer.from-top.open {\n    transform: translateY(0);\n  }\n\n  /* from-bottom */\n  .drawer.from-bottom {\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: var(--drawer-size);\n    transform: translateY(100%);\n  }\n  .drawer.from-bottom.open {\n    transform: translateY(0);\n  }\n</style>\n","<script lang=\"ts\">\n  import Drawer from './Drawer.svelte';\n  import { CCLVividColor } from './const/config';\n  import type { ColorVar } from './const/config';\n  import { vividFor } from './const/colorMap';\n  import { createEventDispatcher, tick } from 'svelte';\n\n  import type { MenuItem } from './types/slide-menu';\n\n  /** 開閉状態（制御） */\n  export let open: boolean = false;\n  /** スライド方向 */\n  export let side: 'left' | 'right' | 'top' | 'bottom' = 'left';\n  /** パネルサイズ */\n  export let size: string = '320px';\n  /** メニュータイトル */\n  export let title: string = 'メニュー';\n  /** ナビの aria-label（見出し連携がない場合の代替） */\n  export let ariaLabel: string = 'メインメニュー';\n  /** リンク一覧 */\n  export let items: MenuItem[] = [];\n  /** 現在選択中の項目 id（強調表示） */\n  export let currentId: string | undefined;\n  /** アクセントカラー（選択中の強調） */\n  export let accentColor: ColorVar = CCLVividColor.SODA_BLUE;\n  /** 項目選択時に自動で閉じる */\n  export let closeOnSelect: boolean = true;\n\n  // Drawer の挙動\n  export let backdrop: boolean = true;\n  export let closeOnEsc: boolean = true;\n  export let closeOnBackdropClick: boolean = true;\n\n  // 色（パステル時の前景補正）\n  $: accentFg = vividFor(accentColor as string);\n  $: styleInline =\n    `--sm-accent: var(${accentColor});` + (accentFg ? ` --sm-accent-fg: var(${accentFg});` : '');\n  const dispatch = createEventDispatcher<{\n    select: { id: string; item: MenuItem; event: Event };\n    close: void;\n  }>();\n\n  let firstLink: HTMLAnchorElement | HTMLButtonElement | null = null;\n  const titleId = 'slide-menu-title';\n\n  // action: indexが0の要素を firstLink にセット\n  function firstLinkAction(node: HTMLElement, index: number) {\n    if (index === 0) firstLink = node as any;\n    return {\n      destroy() {\n        if (firstLink === node) firstLink = null;\n      }\n    };\n  }\n\n  $: (async () => {\n    if (open) {\n      await tick();\n      // 初期フォーカス: 最初のリンクへ\n      try {\n        firstLink?.focus();\n      } catch {}\n    }\n  })();\n\n  function handleSelect(item: MenuItem, event: Event) {\n    const detail = { id: item.id, item, event };\n    dispatch('select', detail);\n    if (closeOnSelect) dispatch('close');\n  }\n</script>\n\n<Drawer\n  {open}\n  {side}\n  {size}\n  {backdrop}\n  {closeOnEsc}\n  {closeOnBackdropClick}\n  ariaLabel={title}\n  on:close={() => dispatch('close')}\n  panelStyle={styleInline}\n  aria-labelledby={titleId}\n>\n  <div class=\"sm-header\">\n    <h2 id={titleId} class=\"sm-title\">{title}</h2>\n  </div>\n  <nav class=\"sm-nav\" role=\"navigation\" aria-label={ariaLabel}>\n    <ul class=\"sm-list\" role=\"list\">\n      {#each items as it, i}\n        <li>\n          {#if it.href}\n            <a\n              use:firstLinkAction={i}\n              class=\"sm-link {it.id === currentId ? 'active' : ''}\"\n              href={it.href}\n              on:click|preventDefault={(e) => handleSelect(it, e)}\n              aria-current={it.id === currentId ? 'page' : undefined}>{it.label}</a\n            >\n          {:else}\n            <button\n              use:firstLinkAction={i}\n              type=\"button\"\n              class=\"sm-link {it.id === currentId ? 'active' : ''}\"\n              on:click={(e) => handleSelect(it, e)}\n              aria-current={it.id === currentId ? 'page' : undefined}>{it.label}</button\n            >\n          {/if}\n        </li>\n      {/each}\n    </ul>\n  </nav>\n  <slot name=\"footer\" />\n</Drawer>\n\n<style>\n  .sm-header {\n    padding: 16px;\n    border-bottom: 1px solid #eee;\n  }\n  .sm-title {\n    margin: 0;\n    font-size: 16px;\n  }\n  .sm-nav {\n    padding: 8px 8px 16px 8px;\n  }\n  .sm-list {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n  }\n  .sm-link {\n    display: block;\n    width: 100%;\n    text-align: left;\n    padding: 10px 12px;\n    border-radius: 8px;\n    color: var(--wrap-grey);\n    text-decoration: none;\n    background: transparent;\n    border: none;\n    cursor: pointer;\n    font-size: 14px;\n  }\n  .sm-link.active {\n    background: var(--sm-accent);\n    color: var(--sm-accent-fg, #fff);\n  }\n  .sm-link:focus-visible {\n    outline: 2px solid var(--sm-accent);\n    outline-offset: 2px;\n  }\n</style>\n"],"names":["dispatch","cov_wzwjdwngd","s","createEventDispatcher","side","$","$$props","b","closeOnEsc","e","key","onBackdropClick","f","lockScroll","backdrop","$$render","consequent","$$restProps","class","open","panelClass","ariaLabel","style","size","panelStyle","div_1","$$value","panelEl","items","cov_4u1i7nsip","closeOnSelect","index","firstLink","node","destroy","handleSelect","item","event","detail","styleInline","focus","title","ul","$$anchor","it","i","a","id","currentId","href"],"mappings":"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"}