{"version":3,"file":"DatePicker-CdW8-7Yt.js","sources":["../../../src/lib/DatePicker.svelte"],"sourcesContent":["<script lang=\"ts\">\n\timport { createEventDispatcher } from 'svelte';\n\timport { DateTime } from 'luxon';\n\timport './const/variables.css';\n\n\tconst dispatch = createEventDispatcher();\n\n\t/**\n\t * 選択された日付\n\t * @default null\n\t * @type {Date | null}\n\t */\n\texport let selectedDate: Date | null = null;\n\n\t/**\n\t * 日付ピッカーのプレースホルダーテキスト\n\t * @default '日付を選択'\n\t * @type string\n\t */\n\texport let placeholder: string = '日付を選択';\n\n\t/**\n\t * 日付ピッカーのID\n\t * @default ''\n\t * @type string\n\t */\n\texport let id: string = 'date-picker-' + Math.random().toString(36).substring(2, 9);\n\n\t/**\n\t * ボーダーカラー、CCLVividColorの中から選ぶ\n\t * @default --strawberry-pink\n\t * @type string\n\t */\n\texport let borderColor: string = '--strawberry-pink';\n\n\t/**\n\t * blurイベントでカレンダーを閉じないようにするか\n\t * テスト用途で利用\n\t * @default false\n\t * @type boolean\n\t */\n\texport let disableBlurClose: boolean = false;\n\n\tlet showCalendar = false;\n\tlet currentMonth: DateTime = selectedDate ? DateTime.fromJSDate(selectedDate) : DateTime.local();\n\n\t$: formattedDate = selectedDate ? DateTime.fromJSDate(selectedDate).toFormat('yyyy/MM/dd') : '';\n\n\tfunction toggleCalendar() {\n\t\tshowCalendar = !showCalendar;\n\t}\n\n\tfunction selectDay(day: number) {\n\t\tconst newDate = currentMonth.set({ day }).toJSDate();\n\t\tselectedDate = newDate;\n\t\tdispatch('change', newDate);\n\t\tshowCalendar = false;\n\t}\n\n\tfunction prevMonth() {\n\t\tcurrentMonth = currentMonth.minus({ months: 1 });\n\t}\n\n\tfunction nextMonth() {\n\t\tcurrentMonth = currentMonth.plus({ months: 1 });\n\t}\n\n\tfunction getDaysInMonth(date: DateTime) {\n\t\tconst startOfMonth = date.startOf('month');\n\t\tconst endOfMonth = date.endOf('month');\n\t\tconst days = [];\n\n\t\t// 前月の日付を埋める\n\t\tconst startDayOfWeek = startOfMonth.weekday === 7 ? 0 : startOfMonth.weekday; // Luxon: 1=Mon, 7=Sun. Adjust to 0=Sun, 6=Sat\n\t\tfor (let i = 0; i < startDayOfWeek; i++) {\n\t\t\tdays.push(null);\n\t\t}\n\n\t\t// 今月の日付\n\t\tfor (let i = 1; i <= endOfMonth.day; i++) {\n\t\t\tdays.push(i);\n\t\t}\n\n\t\t// 次月の日付を埋める\n\t\tconst remainingDays = 42 - days.length; // 6 rows * 7 days\n\t\tfor (let i = 0; i < remainingDays; i++) {\n\t\t\tdays.push(null);\n\t\t}\n\n\t\treturn days;\n\t}\n\n\t$: daysInMonth = getDaysInMonth(currentMonth);\n</script>\n\n<div class=\"datePickerWrapper\" style=\"--selected-color: var({borderColor});\">\n\t<input type=\"text\" {id} value={formattedDate} placeholder={placeholder} on:focus={toggleCalendar} on:blur={() => { if (!disableBlurClose) toggleCalendar(); }} readonly style=\"border-color: var({borderColor});\" />\n\n\t{#if showCalendar}\n\t\t<div class=\"calendarOverlay\" on:mousedown|preventDefault={() => {}}>\n\t\t\t<div class=\"calendarHeader\">\n\t\t\t\t<button on:click={prevMonth} aria-label=\"前月へ\">&lt;</button>\n\t\t\t\t<span>{currentMonth.toFormat('yyyy年MM月')}</span>\n\t\t\t\t<button on:click={nextMonth} aria-label=\"次月へ\">&gt;</button>\n\t\t\t</div>\n\t\t\t<div class=\"weekdays\">\n\t\t\t\t<span>日</span>\n\t\t\t\t<span>月</span>\n\t\t\t\t<span>火</span>\n\t\t\t\t<span>水</span>\n\t\t\t\t<span>木</span>\n\t\t\t\t<span>金</span>\n\t\t\t\t<span>土</span>\n\t\t\t</div>\n\t\t\t<div class=\"daysGrid\">\n\t\t\t\t{#each daysInMonth as day}\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass:currentMonthDay={day !== null}\n\t\t\t\t\t\tclass:selected={selectedDate && day === DateTime.fromJSDate(selectedDate).day && currentMonth.month === DateTime.fromJSDate(selectedDate).month && currentMonth.year === DateTime.fromJSDate(selectedDate).year}\n\t\t\t\t\t\ton:click={() => day && selectDay(day)}\n\t\t\t\t\t\tdisabled={day === null}\n\t\t\t\t\t>\n\t\t\t\t\t\t{day !== null ? day : ''}\n\t\t\t\t\t</button>\n\t\t\t\t{/each}\n\t\t\t</div>\n\t\t</div>\n\t{/if}\n</div>\n\n<style lang=\"css\">\n\t.datePickerWrapper {\n\t\tposition: relative;\n\t\tdisplay: inline-block;\n\t}\n\n\t.datePickerWrapper input {\n\t\tpadding: 8px;\n\t\tborder: 1px solid #ccc;\n\t\tborder-radius: 4px;\n\t\twidth: 120px;\n\t}\n\n\t.calendarOverlay {\n\t\tposition: absolute;\n\t\tbackground-color: white;\n\t\tborder: 1px solid #ccc;\n\t\tborder-radius: 4px;\n\t\tpadding: 10px;\n\t\tz-index: 1000;\n\t\tbox-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n\t\tmargin-top: 5px;\n\t}\n\n\t.calendarHeader {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tmargin-bottom: 10px;\n\t}\n\n\t.calendarHeader button {\n\t\tbackground: none;\n\t\tborder: none;\n\t\tfont-size: 1.2em;\n\t\tcursor: pointer;\n\t\tpadding: 5px;\n\t}\n\n\t.weekdays,\n\t.daysGrid {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: repeat(7, 1fr);\n\t\ttext-align: center;\n\t}\n\n\t.weekdays span {\n\t\tfont-weight: bold;\n\t\tpadding: 5px 0;\n\t}\n\n\t.daysGrid button {\n\t\tbackground: none;\n\t\tborder: none;\n\t\tpadding: 0;\n\t\twidth: 30px;\n\t\theight: 30px;\n\t\tline-height: 30px;\n\t\tcursor: pointer;\n\t\tborder-radius: 4px;\n\t}\n\n\t.daysGrid button:hover:not([disabled]) {\n\t\tbackground-color: #eee;\n\t}\n\n\t.daysGrid button.currentMonthDay {\n\t\tcolor: #333;\n\t}\n\n\t.daysGrid button.selected {\n\t\tbackground-color: var(--selected-color);\n\t\tcolor: white;\n\t}\n\n\t.daysGrid button[disabled] {\n\t\tcolor: #ccc;\n\t\tcursor: default;\n\t}\n</style>\n"],"names":["prevMonth","cov_8qwa4gac1","f","s"],"mappings":"q30DAmHW,SAAAA,GAAA,CAAAC,EAAA,EAAAC,EAAA,EAAA,IAAAD,EAAA,EAAAE,EAAA,GAAA;"}