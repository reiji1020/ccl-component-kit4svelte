{"version":3,"file":"RadioButton.stories-Cfg0Yns0.js","sources":["../../../src/stories/MultipleRadioButtonsWrapper.svelte","../../../src/stories/AllColors/AllColorsRadioButtonWrapper.svelte","../../../src/stories/RadioButton.stories.ts"],"sourcesContent":["<script lang=\"ts\">\n  import RadioButton from '../lib/RadioButton.svelte';\n\n  export let selectedValue: string = 'option1';\n</script>\n\n<div>\n  <RadioButton label=\"Option 1\" value=\"option1\" bind:group={selectedValue} />\n  <RadioButton label=\"Option 2\" value=\"option2\" bind:group={selectedValue} />\n  <RadioButton label=\"Option 3\" value=\"option3\" bind:group={selectedValue} />\n</div>\n","<script lang=\"ts\">\n  import RadioButton from '../../lib/RadioButton.svelte';\n  import { CCLVividColor, CCLPastelColor } from '../../lib/const/config';\n\n  let vividGroup = 'STRAWBERRY_PINK';\n  let pastelGroup = 'PEACH_PINK';\n</script>\n\n<div class=\"color-palette\">\n  <h2>Vivid Colors</h2>\n  <div class=\"color-grid\">\n    {#each Object.entries(CCLVividColor) as [name, color]}\n      <div class=\"color-sample\">\n        <RadioButton label={name} value={name} bind:group={vividGroup} {color} />\n      </div>\n    {/each}\n  </div>\n\n  <h2>Pastel Colors</h2>\n  <div class=\"color-grid\">\n    {#each Object.entries(CCLPastelColor) as [name, color]}\n      <div class=\"color-sample\">\n        <RadioButton label={name} value={name} bind:group={pastelGroup} {color} />\n      </div>\n    {/each}\n  </div>\n</div>\n\n<style>\n  .color-palette {\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n  }\n  .color-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    gap: 1rem;\n  }\n  .color-sample {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n  }\n</style>\n","import type { Meta, StoryObj } from '@storybook/svelte';\nimport RadioButton from '../lib/RadioButton.svelte';\nimport { CCLVividColor, CCLPastelColor } from '../lib/const/config';\nimport { expect, fn, userEvent, within } from '@storybook/test';\nimport MultipleRadioButtonsWrapper from './MultipleRadioButtonsWrapper.svelte';\nimport AllColorsRadioButtonWrapper from './AllColors/AllColorsRadioButtonWrapper.svelte';\n\nconst meta = {\n  title: 'Form/RadioButton',\n  component: RadioButton,\n  tags: ['autodocs'],\n  argTypes: {\n    label: {\n      control: { type: 'text' }\n    },\n    color: {\n      control: { type: 'select' },\n      options: Object.values(CCLVividColor)\n    },\n    disabled: {\n      control: { type: 'boolean' }\n    }\n  }\n} satisfies Meta<RadioButton>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nconst createStory = (initialArgs: Story['args']): Story => ({\n  args: {\n    ...initialArgs\n  },\n  play: async ({ args, canvasElement, step }) => {\n    const canvas = within(canvasElement);\n    const radio = canvas.getByRole('radio', { hidden: true });\n\n    await step('初期状態が正しいこと', async () => {\n      if (args?.group === args?.value) {\n        await expect(radio).toBeChecked();\n      } else {\n        await expect(radio).not.toBeChecked();\n      }\n    });\n\n    await step('クリック操作が正しく行われること', async () => {\n      await userEvent.click(radio);\n      if (args?.disabled) {\n        await expect(radio).toBeChecked(); // Disabled radio should not change state\n      } else {\n        await expect(radio).toBeChecked();\n      }\n    });\n  }\n});\n\nexport const Default = createStory({\n  label: 'Option 1',\n  value: 'option1',\n  group: 'option1'\n});\n\nexport const Disabled = createStory({\n  label: 'Disabled',\n  value: 'disabled',\n  group: 'none',\n  disabled: true\n});\n\nexport const DisabledChecked = createStory({\n  label: 'Disabled Checked',\n  value: 'disabledChecked',\n  group: 'disabledChecked',\n  disabled: true\n});\n\nexport const MultipleRadioButtons: Story = {\n  render: () => ({\n    Component: MultipleRadioButtonsWrapper,\n    props: {\n      selectedValue: 'option1'\n    }\n  }),\n  play: async ({ canvasElement, step }) => {\n    const canvas = within(canvasElement);\n\n    const radio1 = canvas.getByRole('radio', { name: 'Option 1' });\n    const radio2 = canvas.getByRole('radio', { name: 'Option 2' });\n    const radio3 = canvas.getByRole('radio', { name: 'Option 3' });\n\n    await step('初期状態でOption 1が選択されていること', async () => {\n      await expect(radio1).toBeChecked();\n      await expect(radio2).not.toBeChecked();\n      await expect(radio3).not.toBeChecked();\n    });\n\n    await step('Option 2をクリックし、選択が切り替わること', async () => {\n      await userEvent.click(radio2);\n      await expect(radio1).not.toBeChecked();\n      await expect(radio2).toBeChecked();\n      await expect(radio3).not.toBeChecked();\n    });\n\n    await step('Option 3をクリックし、選択が切り替わること', async () => {\n      await userEvent.click(radio3);\n      await expect(radio1).not.toBeChecked();\n      await expect(radio2).not.toBeChecked();\n      await expect(radio3).toBeChecked();\n    });\n\n    await step('再度Option 1をクリックし、選択が切り替わること', async () => {\n      await userEvent.click(radio1);\n      await expect(radio1).toBeChecked();\n      await expect(radio2).not.toBeChecked();\n      await expect(radio3).not.toBeChecked();\n    });\n  }\n};\n\nexport const AllColors: Story = {\n  render: () => ({ Component: AllColorsRadioButtonWrapper }),\n  args: {},\n  parameters: {\n    docs: {\n      source: {\n        code: null\n      }\n    }\n  }\n};\n"],"names":["selectedValue","cov_1j28qwx9e8","s","$","$$props","$$value","cov_1c403igqmj","name","vividGroup","f","Object","entries","CCLPastelColor","$$anchor","$$item","$$array_1","color","meta","title","component","RadioButton","tags","argTypes","label","control","type","options","values","CCLVividColor","disabled","createStory","initialArgs","args","play","canvasElement","step","radio","within","getByRole","hidden","group","value","expect","toBeChecked","not","userEvent","click","Default","Disabled","DisabledChecked","MultipleRadioButtons","render","Component","MultipleRadioButtonsWrapper","props","canvas","radio1","radio2","radio3","AllColors","AllColorsRadioButtonWrapper","parameters","docs","source","code","originalSource"],"mappings":"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"}