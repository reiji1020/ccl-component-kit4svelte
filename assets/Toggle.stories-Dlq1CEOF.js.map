{"version":3,"file":"Toggle.stories-Dlq1CEOF.js","sources":["../../../src/stories/Toggle.stories.ts"],"sourcesContent":["import type { Meta, StoryObj } from '@storybook/svelte';\nimport Toggle from '../lib/Toggle.svelte';\nimport { CCLVividColor, CCLPastelColor } from '../lib/const/config';\nimport { expect, fn, userEvent, within } from '@storybook/test';\nimport AllColorsToggleWrapper from './AllColors/AllColorsToggleWrapper.svelte';\n\nconst meta = {\n\ttitle: 'Form/Toggle',\n\tcomponent: Toggle,\n\ttags: ['autodocs'],\n\targTypes: {\n\t\tchecked: {\n\t\t\tcontrol: { type: 'boolean' }\n\t\t},\n\t\tcolor: {\n\t\t\tcontrol: { type: 'select' },\n\t\t\toptions: Object.values(CCLVividColor)\n\t\t},\n\t\tdisabled: {\n\t\t\tcontrol: { type: 'boolean' }\n\t\t},\n\t\tonChange: fn()\n\t}\n} satisfies Meta<Toggle>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nconst createStory = (initialArgs: Story['args']): Story => ({\n\targs: {\n\t\t...initialArgs,\n\t\tonChange: fn() // Ensure onChange is always a spy\n\t},\n\tplay: async ({ args, canvasElement, step }) => {\n\t\tconst canvas = within(canvasElement);\n\t\tconst toggle = canvas.getByRole('checkbox', { hidden: true });\n\n\t\tawait step('初期状態が正しいこと', async () => {\n\t\t\tif (args?.checked) {\n\t\t\t\tawait expect(toggle).toBeChecked();\n\t\t\t} else {\n\t\t\t\tawait expect(toggle).not.toBeChecked();\n\t\t\t}\n\t\t});\n\n\t\tawait step('クリック操作が正しく行われること', async () => {\n\t\t\tawait userEvent.click(toggle);\n\t\t\tif (args?.disabled) {\n\t\t\t\tawait expect(args.onChange).not.toHaveBeenCalled();\n\t\t\t\tawait step('非活性時は状態が変化しないこと', async () => {\n\t\t\t\t\tif (args?.checked) {\n\t\t\t\t\t\tawait expect(toggle).toBeChecked();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait expect(toggle).not.toBeChecked();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tawait expect(args.onChange).toHaveBeenCalledOnce();\n\t\t\t\tawait step('活性時は状態が変化すること', async () => {\n\t\t\t\t\tif (args?.checked) {\n\t\t\t\t\t\tawait expect(toggle).not.toBeChecked(); // Will be false after click\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait expect(toggle).toBeChecked(); // Will be true after click\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n});\n\nexport const Default = createStory({\n\tchecked: false\n});\n\nexport const Checked = createStory({\n\tchecked: true\n});\n\nexport const Disabled = createStory({\n\tchecked: false,\n\tdisabled: true\n});\n\nexport const DisabledChecked = createStory({\n\tchecked: true,\n\tdisabled: true\n});\n\nexport const AllColors: Story = {\n\trender: () => ({ Component: AllColorsToggleWrapper }),\n\targs: {},\n\tparameters: {\n\t\tdocs: {\n\t\t\tsource: {\n\t\t\t\tcode: null\n\t\t\t}\n\t\t}\n\t}\n};\n"],"names":["meta","title","component","Toggle","tags","argTypes","checked","control","type","color","options","Object","values","CCLVividColor","disabled","onChange","fn","createStory","initialArgs","args","play","canvasElement","step","toggle","within","getByRole","hidden","expect","toBeChecked","not","userEvent","click","toHaveBeenCalled","toHaveBeenCalledOnce","Default","Checked","Disabled","DisabledChecked","AllColors","render","Component","AllColorsToggleWrapper","parameters","docs","source","code","originalSource"],"mappings":"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"}