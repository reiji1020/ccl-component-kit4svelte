{"version":3,"file":"Header.stories-91LP1_Kb.js","sources":["../../../src/stories/AllColors/AllColorsHeaderWrapper.svelte","../../../src/stories/Header.stories.ts"],"sourcesContent":["<script lang=\"ts\">\n  import Header from '../../lib/Header.svelte';\n  import { CCLVividColor, CCLPastelColor, HeaderHeight } from '../../lib/const/config';\n</script>\n\n<div class=\"color-palette\">\n  <h2>Vivid Colors</h2>\n  <div class=\"color-grid\">\n    {#each Object.entries(CCLVividColor) as [name, color]}\n      <div class=\"color-sample\">\n        <Header bgColor={color} height={HeaderHeight.NORMAL} />\n        <span>{name}</span>\n      </div>\n    {/each}\n  </div>\n\n  <h2>Pastel Colors</h2>\n  <div class=\"color-grid\">\n    {#each Object.entries(CCLPastelColor) as [name, color]}\n      <div class=\"color-sample\">\n        <Header bgColor={color} height={HeaderHeight.NORMAL} />\n        <span>{name}</span>\n      </div>\n    {/each}\n  </div>\n</div>\n\n<style>\n  .color-palette {\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    padding: 1rem;\n  }\n  .color-grid {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n  }\n  .color-sample {\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    gap: 0.5rem;\n    width: 100%;\n  }\n</style>\n","import type { Meta, StoryObj } from '@storybook/svelte';\nimport { expect, within } from '@storybook/test';\nimport Header from '$lib/Header.svelte';\nimport { CCLVividColor, CCLPastelColor, HeaderHeight } from '$lib/const/config';\nimport AllColorsHeaderWrapper from './AllColors/AllColorsHeaderWrapper.svelte';\n\nconst colorOptions = [\n  CCLVividColor.STRAWBERRY_PINK,\n  CCLVividColor.PINEAPPLE_YELLOW,\n  CCLVividColor.SODA_BLUE,\n  CCLVividColor.MELON_GREEN,\n  CCLVividColor.GRAPE_PURPLE,\n  CCLVividColor.WRAP_GREY\n];\n\nconst heightOptions = [HeaderHeight.NALLOW, HeaderHeight.NORMAL, HeaderHeight.WIDE];\n\nconst meta = {\n  title: 'CommonComponents/Header',\n  component: Header,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'fullscreen'\n  },\n  argTypes: {\n    bgColor: {\n      control: { type: 'select' },\n      options: colorOptions\n    },\n    height: {\n      control: { type: 'select' },\n      options: heightOptions\n    }\n  }\n} satisfies Meta<Header>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nconst createStory = (bgColor: string, height: string): Story => ({\n  args: {\n    bgColor,\n    height\n  },\n  play: async ({ args, step, canvasElement }) => {\n    const canvas = within(canvasElement);\n    await step('背景色にセットした色が渡されていること', async () => {\n      await expect(args.bgColor).toBe(bgColor);\n    });\n    await step('Headerの高さがセットした大きさになっていること', async () => {\n      await expect(args.height).toBe(height);\n    });\n    await step('aタグにリンクが設定されていること', async () => {\n      const link = canvas.getByRole('link');\n      await expect(link).toHaveAttribute('href', 'https://candychupslab.netlify.app/');\n    });\n  }\n});\n\nexport const Default = createStory(CCLVividColor.STRAWBERRY_PINK, HeaderHeight.NORMAL);\n\nexport const WideHeader = createStory(CCLVividColor.STRAWBERRY_PINK, HeaderHeight.WIDE);\nexport const NallowHeader = createStory(CCLVividColor.STRAWBERRY_PINK, HeaderHeight.NALLOW);\n\nexport const AllColors: Story = {\n  render: () => ({ Component: AllColorsHeaderWrapper }),\n  args: {},\n  parameters: {\n    docs: {\n      source: {\n        code: null\n      }\n    }\n  }\n};\n"],"names":["color","HeaderHeight","NORMAL","colorOptions","CCLVividColor","STRAWBERRY_PINK","PINEAPPLE_YELLOW","SODA_BLUE","MELON_GREEN","GRAPE_PURPLE","WRAP_GREY","heightOptions","NALLOW","WIDE","meta","title","component","Header","tags","parameters","layout","argTypes","bgColor","control","type","options","height","createStory","args","play","step","canvasElement","canvas","within","expect","toBe","link","getByRole","toHaveAttribute","Default","WideHeader","NallowHeader","AllColors","render","Component","AllColorsHeaderWrapper","docs","source","code","originalSource"],"mappings":"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"}