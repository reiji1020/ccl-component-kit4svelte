{"version":3,"file":"Button.stories-oUx8LgKd.js","sources":["../../../src/stories/AllColors/AllColorsButtonWrapper.svelte","../../../src/stories/Button.stories.ts"],"sourcesContent":["<script lang=\"ts\">\n  import Button from '../../lib/Button.svelte';\n  import { CCLVividColor, CCLPastelColor } from '../../lib/const/config';\n</script>\n\n<div class=\"color-palette\">\n  <h2>Vivid Colors</h2>\n  <div class=\"color-grid\">\n    {#each Object.entries(CCLVividColor) as [name, color]}\n      <div class=\"color-sample\">\n        <Button bgColor={color} label={name} />\n      </div>\n    {/each}\n  </div>\n\n  <h2>Pastel Colors</h2>\n  <div class=\"color-grid\">\n    {#each Object.entries(CCLPastelColor) as [name, color]}\n      <div class=\"color-sample\">\n        <Button bgColor={color} label={name} />\n      </div>\n    {/each}\n  </div>\n</div>\n\n<style>\n  .color-palette {\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    padding: 1rem;\n  }\n  .color-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    gap: 1rem;\n  }\n  .color-sample {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 0.5rem;\n    text-align: center;\n  }\n</style>\n","import type { Meta, StoryObj } from '@storybook/svelte';\nimport Button from '$lib/Button.svelte';\nimport { CCLVividColor, CCLPastelColor } from '$lib/const/config';\nimport { expect, fn, userEvent, within } from '@storybook/test';\nimport AllColorsButtonWrapper from './AllColors/AllColorsButtonWrapper.svelte';\n\nconst colorOptions = [\n  CCLVividColor.STRAWBERRY_PINK,\n  CCLVividColor.PINEAPPLE_YELLOW,\n  CCLVividColor.SODA_BLUE,\n  CCLVividColor.MELON_GREEN,\n  CCLVividColor.GRAPE_PURPLE,\n  CCLVividColor.WRAP_GREY\n];\n\nconst meta = {\n  title: 'CommonComponents/Button',\n  component: Button,\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'fullscreen'\n  },\n  argTypes: {\n    bgColor: {\n      control: { type: 'select' },\n      options: colorOptions\n    },\n    onClick: fn(),\n    disabled: {\n      control: { type: 'boolean' }\n    }\n  }\n} satisfies Meta<Button>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nconst createStory = (bgColor: string, label: string, disabled: boolean = false): Story => ({\n  args: {\n    bgColor,\n    label,\n    onClick: fn(),\n    disabled\n  },\n  play: async ({ args, canvasElement, step }) => {\n    const canvas = within(canvasElement);\n    const button = canvas.getByRole('button');\n\n    await step('ボタンが存在すること', async () => {\n      await expect(button).toBeInTheDocument();\n    });\n\n    await step('ボタンの色が正しく設定されていること', async () => {\n      await expect(args.bgColor).toBe(bgColor);\n    });\n\n    await step('ボタンのラベルが正しく設定されていること', async () => {\n      await expect(args.label).toBe(label);\n    });\n\n    if (disabled) {\n      await step('非活性状態であること', async () => {\n        await expect(button).toBeDisabled();\n      });\n      await step('クリックしてもonClickが呼ばれないこと', async () => {\n        await userEvent.click(button);\n        await expect(args.onClick).not.toHaveBeenCalled();\n      });\n    } else {\n      await step('活性状態であること', async () => {\n        await expect(button).toBeEnabled();\n      });\n      await step('クリックするとonClickが呼ばれること', async () => {\n        await userEvent.click(button);\n        await expect(args.onClick).toHaveBeenCalled();\n      });\n    }\n  }\n});\n\nexport const Default = createStory(CCLVividColor.SODA_BLUE, 'Button', false);\n\nexport const DisabledClicked = createStory(CCLVividColor.SODA_BLUE, 'Disabled Clicked', true);\n\nexport const AllColors: Story = {\n  render: () => ({ Component: AllColorsButtonWrapper }),\n  args: {},\n  parameters: {\n    docs: {\n      source: {\n        code: null\n      }\n    }\n  }\n};\n"],"names":["color","name","cov_3vpvvvjld","f","s","Object","entries","CCLPastelColor","$","$$anchor","$$item","$$array_1","colorOptions","CCLVividColor","STRAWBERRY_PINK","PINEAPPLE_YELLOW","SODA_BLUE","MELON_GREEN","GRAPE_PURPLE","WRAP_GREY","meta","title","component","Button","tags","parameters","layout","argTypes","bgColor","control","type","options","onClick","fn","disabled","createStory","label","args","play","canvasElement","step","button","within","getByRole","expect","toBeInTheDocument","toBe","toBeDisabled","userEvent","click","not","toHaveBeenCalled","toBeEnabled","Default","DisabledClicked","AllColors","render","Component","AllColorsButtonWrapper","docs","source","code","originalSource"],"mappings":"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"}