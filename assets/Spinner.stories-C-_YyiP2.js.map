{"version":3,"file":"Spinner.stories-C-_YyiP2.js","sources":["../../../src/stories/AllColors/AllColorsSpinnerWrapper.svelte","../../../src/stories/Spinner.stories.ts"],"sourcesContent":["<script lang=\"ts\">\n\timport Spinner from '../../lib/Spinner.svelte';\n\timport { CCLVividColor, CCLPastelColor } from '../../lib/const/config';\n\n\tconst vividColors = [\n\t\t{ name: 'STRAWBERRY_PINK', value: CCLVividColor.STRAWBERRY_PINK },\n\t\t{ name: 'PINEAPPLE_YELLOW', value: CCLVividColor.PINEAPPLE_YELLOW },\n\t\t{ name: 'SODA_BLUE', value: CCLVividColor.SODA_BLUE },\n\t\t{ name: 'MELON_GREEN', value: CCLVividColor.MELON_GREEN },\n\t\t{ name: 'GRAPE_PURPLE', value: CCLVividColor.GRAPE_PURPLE },\n\t\t{ name: 'WRAP_GREY', value: CCLVividColor.WRAP_GREY }\n\t];\n\n\tconst pastelColors = [\n\t\t{ name: 'PEACH_PINK', value: CCLPastelColor.PEACH_PINK },\n\t\t{ name: 'LEMON_YELLOW', value: CCLPastelColor.LEMON_YELLOW },\n\t\t{ name: 'SUGAR_BLUE', value: CCLPastelColor.SUGAR_BLUE },\n\t\t{ name: 'MATCHA_GREEN', value: CCLPastelColor.MATCHA_GREEN },\n\t\t{ name: 'AKEBI_PURPLE', value: CCLPastelColor.AKEBI_PURPLE },\n\t\t{ name: 'CLOUD_GREY', value: CCLPastelColor.CLOUD_GREY }\n\t];\n</script>\n\n<div style=\"display: flex; flex-direction: column; gap: 40px; padding: 20px;\">\n\t<div>\n\t\t<h3>Vivid Colors</h3>\n\t\t<div style=\"display: flex; flex-wrap: wrap; gap: 20px;\">\n\t\t\t{#each vividColors as colorOption}\n\t\t\t\t<div\n\t\t\t\t\tstyle=\"display: flex; flex-direction: column; align-items: center; gap: 10px; border: 1px solid #eee; padding: 15px; border-radius: 8px;\"\n\t\t\t\t>\n\t\t\t\t\t<Spinner color={colorOption.value} size=\"60px\" borderWidth=\"6px\" />\n\t\t\t\t\t<span style=\"font-size: 14px; color: #555;\">{colorOption.name}</span>\n\t\t\t\t</div>\n\t\t\t{/each}\n\t\t</div>\n\t</div>\n\n\t<div>\n\t\t<h3>Pastel Colors</h3>\n\t\t<div style=\"display: flex; flex-wrap: wrap; gap: 20px;\">\n\t\t\t{#each pastelColors as colorOption}\n\t\t\t\t<div\n\t\t\t\t\tstyle=\"display: flex; flex-direction: column; align-items: center; gap: 10px; border: 1px solid #eee; padding: 15px; border-radius: 8px;\"\n\t\t\t\t>\n\t\t\t\t\t<Spinner color={colorOption.value} size=\"60px\" borderWidth=\"6px\" />\n\t\t\t\t\t<span style=\"font-size: 14px; color: #555;\">{colorOption.name}</span>\n\t\t\t\t</div>\n\t\t\t{/each}\n\t\t</div>\n\t</div>\n</div>\n","import type { Meta, StoryObj } from '@storybook/svelte';\nimport Spinner from '../lib/Spinner.svelte';\n\nimport { CCLVividColor, CCLPastelColor } from '../lib/const/config';\n\nconst colorOptions = [\n\tCCLVividColor.STRAWBERRY_PINK,\n\tCCLVividColor.PINEAPPLE_YELLOW,\n\tCCLVividColor.SODA_BLUE,\n\tCCLVividColor.MELON_GREEN,\n\tCCLVividColor.GRAPE_PURPLE,\n\tCCLVividColor.WRAP_GREY,\n\tCCLPastelColor.PEACH_PINK,\n\tCCLPastelColor.LEMON_YELLOW,\n\tCCLPastelColor.SUGAR_BLUE,\n\tCCLPastelColor.MATCHA_GREEN,\n\tCCLPastelColor.AKEBI_PURPLE,\n\tCCLPastelColor.CLOUD_GREY\n];\n\nconst meta = {\n\ttitle: 'CommonComponents/Spinner',\n\tcomponent: Spinner,\n\ttags: ['autodocs'],\n\tparameters: {\n\t\tlayout: 'centered'\n\t},\n\targTypes: {\n\t\tsize: {\n\t\t\tcontrol: { type: 'text' },\n\t\t\tdescription: 'スピナーのサイズ (例: \"40px\", \"2em\")'\n\t\t},\n\t\tcolor: {\n\t\t\tcontrol: { type: 'select' },\n\t\t\toptions: colorOptions,\n\t\t\tdescription: 'スピナーの色'\n\t\t},\n\t\tborderWidth: {\n\t\t\tcontrol: { type: 'text' },\n\t\t\tdescription: 'スピナーのボーダー幅 (例: \"4px\", \"0.2em\")'\n\t\t}\n\t}\n} satisfies Meta<Spinner>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nimport { expect } from '@storybook/test';\nimport { within } from '@storybook/test';\n\nexport const Default: Story = {\n\targs: {\n\t\tsize: '50px',\n\t\tcolor: CCLVividColor.STRAWBERRY_PINK,\n\t\tborderWidth: '5px'\n\t},\n\tplay: async ({ canvasElement, step, args }) => {\n\t\tconst canvas = within(canvasElement);\n\t\tawait step('スピナーが表示されていること', async () => {\n\t\t\tconst spinner = canvas.getByRole('status');\n\t\t\tawait expect(spinner).toBeInTheDocument();\n\t\t});\n\t\tawait step('スピナーのサイズが指定通りであること', async () => {\n\t\t\tconst spinner = canvas.getByRole('status');\n\t\t\tawait expect(spinner).toHaveStyle(`width: ${args.size}; height: ${args.size};`);\n\t\t});\n\t\tawait step('スピナーのボーダー幅が指定通りであること', async () => {\n\t\t\tconst spinner = canvas.getByRole('status');\n\t\t\tawait expect(spinner).toHaveStyle(`border-width: ${args.borderWidth};`);\n\t\t});\n\t}\n};\n\nexport const Large: Story = {\n\targs: {\n\t\tsize: '80px',\n\t\tcolor: CCLVividColor.MELON_GREEN,\n\t\tborderWidth: '8px'\n\t},\n\tplay: async ({ canvasElement, step, args }) => {\n\t\tconst canvas = within(canvasElement);\n\t\tawait step('スピナーが表示されていること', async () => {\n\t\t\tconst spinner = canvas.getByRole('status');\n\t\t\tawait expect(spinner).toBeInTheDocument();\n\t\t});\n\t\tawait step('スピナーのサイズが指定通りであること', async () => {\n\t\t\tconst spinner = canvas.getByRole('status');\n\t\t\tawait expect(spinner).toHaveStyle(`width: ${args.size}; height: ${args.size};`);\n\t\t});\n\t\tawait step('スピナーのボーダー幅が指定通りであること', async () => {\n\t\t\tconst spinner = canvas.getByRole('status');\n\t\t\tawait expect(spinner).toHaveStyle(`border-width: ${args.borderWidth};`);\n\t\t});\n\t}\n};\n\nimport AllColorsSpinnerWrapper from './AllColors/AllColorsSpinnerWrapper.svelte';\n\nexport const Small: Story = {\n\targs: {\n\t\tsize: '20px',\n\t\tcolor: CCLVividColor.SODA_BLUE,\n\t\tborderWidth: '2px'\n\t},\n\tplay: async ({ canvasElement, step, args }) => {\n\t\tconst canvas = within(canvasElement);\n\t\tawait step('スピナーが表示されていること', async () => {\n\t\t\tconst spinner = canvas.getByRole('status');\n\t\t\tawait expect(spinner).toBeInTheDocument();\n\t\t});\n\t\tawait step('スピナーのサイズが指定通りであること', async () => {\n\t\t\tconst spinner = canvas.getByRole('status');\n\t\t\tawait expect(spinner).toHaveStyle(`width: ${args.size}; height: ${args.size};`);\n\t\t});\n\t\tawait step('スピナーのボーダー幅が指定通りであること', async () => {\n\t\t\tconst spinner = canvas.getByRole('status');\n\t\t\tawait expect(spinner).toHaveStyle(`border-width: ${args.borderWidth};`);\n\t\t});\n\t}\n};\n\nexport const AllColors: Story = {\n\trender: () => ({ Component: AllColorsSpinnerWrapper }),\n\targs: {},\n\tparameters: {\n\t\tdocs: {\n\t\t\tsource: {\n\t\t\t\tcode: null\n\t\t\t}\n\t\t}\n\t}\n};\n"],"names":["create_each_block_1","ctx","cov_8s23nsiko","div","spinner","t0","span","t1_value","s","name","color","value","append_hydration","colorOptions","CCLVividColor","STRAWBERRY_PINK","PINEAPPLE_YELLOW","SODA_BLUE","MELON_GREEN","GRAPE_PURPLE","WRAP_GREY","CCLPastelColor","PEACH_PINK","LEMON_YELLOW","SUGAR_BLUE","MATCHA_GREEN","AKEBI_PURPLE","CLOUD_GREY","meta","title","component","Spinner","tags","parameters","layout","argTypes","size","control","type","description","options","borderWidth","Default","args","play","canvasElement","step","canvas","within","getByRole","expect","toBeInTheDocument","toHaveStyle","Large","Small","AllColors","render","Component","AllColorsSpinnerWrapper","docs","source","code","originalSource"],"mappings":"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"}