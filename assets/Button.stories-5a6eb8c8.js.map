{"version":3,"file":"Button.stories-5a6eb8c8.js","sources":["../../../src/lib/Button.svelte","../../../src/stories/Button.stories.ts"],"sourcesContent":["<script lang=\"ts\">\n\timport './const/variables.css';\n\t/**\n\t * ボタンカラー、CCLVividColorの中から選ぶ\n\t * @default --strawberry-pink\n\t * @type string\n\t */\n\texport let bgColor: string;\n\n\t/**\n\t * ボタンの中に表示するテキスト\n\t * @default Button\n\t * @type string\n\t */\n\texport let label: string;\n</script>\n\n<!--汎用ボタン-->\n<button class=\"buttonWrapper\" style=\"--bgColor: var({bgColor})\"\n\t><span class=\"btLabel\">{label}</span></button\n>\n\n<style>\n\t.buttonWrapper {\n\t\tdisplay: flex;\n\t\tborder-radius: 50px;\n\t\tborder: none;\n\t\tpadding: 15px 45px;\n\t\tbackground: var(--bgColor);\n\t}\n\t.buttonWrapper:hover {\n\t\tcursor: pointer;\n\t}\n\t.btLabel {\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\tflex-shrink: 0;\n\t\tcolor: #fff;\n\t\ttext-align: center;\n\t\tfont-size: 18px;\n\t\tline-height: normal;\n\t}\n</style>\n","import type { Meta, StoryObj } from '@storybook/svelte';\nimport Button from '$lib/Button.svelte';\nimport { CCLVividColor } from '$lib/const/config';\nimport { expect, fn, userEvent, within } from '@storybook/test';\n\nconst meta = {\n\ttitle: 'CommonComponents/Button',\n\tcomponent: Button,\n\t// This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/writing-docs/autodocs\n\ttags: ['autodocs'],\n\tparameters: {\n\t\tlayout: 'fullscreen'\n\t},\n\targTypes: {\n\t\tbgColor: {\n\t\t\tcontrol: { type: 'select' },\n\t\t\toptions: [\n\t\t\t\tCCLVividColor.STRAWBERRY_PINK,\n\t\t\t\tCCLVividColor.PINEAPPLE_YELLOW,\n\t\t\t\tCCLVividColor.SODA_BLUE,\n\t\t\t\tCCLVividColor.MELON_GREEN,\n\t\t\t\tCCLVividColor.GRAPE_PURPLE,\n\t\t\t\tCCLVividColor.WRAP_GREY\n\t\t\t]\n\t\t},\n\t\tonClick: fn()\n\t}\n} satisfies Meta<Button>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\n/**\n * サービス、サークルのメインカラー\n *\n * 意思決定の場で、「次へ」や「OK」など、肯定の同意を得るときに使用します。\n *\n * Services, main colours of the circle.\n *\n * Used in decision-making situations to obtain agreement of affirmation, e.g. 'Next' or 'OK'.\n */\nexport const Pink: Story = {\n\targs: {\n\t\tbgColor: CCLVividColor.STRAWBERRY_PINK,\n\t\tlabel: 'Strawberry Pink',\n\t\tonClick: fn()\n\t},\n\tplay: async ({ args, canvasElement, step }) => {\n\t\tawait step('ボタンが存在するかどうかをチェックする', async () => {\n\t\t\tconst canvas = within(canvasElement);\n\t\t\tawait userEvent.click(canvas.getByRole('button'));\n\t\t});\n\n\t\tawait step('ボタンの色がプロパティの通りに設定されている', async () => {\n\t\t\tawait expect(args.bgColor).toBe('--strawberry-pink');\n\t\t});\n\n\t\tawait step('ボタンのテキストがプロパティの通りに設定されている', async () => {\n\t\t\tawait expect(args.label).toBe('Strawberry Pink');\n\t\t});\n\t}\n};\n\n/**\n * 意思決定の場で、ヘルプやユーザーの補助を行う情報を提示するときに使用します。中立カラーです。\n *\n * Used when presenting information to help or assist users in decision-making. Neutral colour.\n */\nexport const Yellow: Story = {\n\targs: {\n\t\tbgColor: CCLVividColor.PINEAPPLE_YELLOW,\n\t\tlabel: 'Pineapple Yellow',\n\t\tonClick: fn()\n\t},\n\tplay: async ({ args, canvasElement, step }) => {\n\t\tawait step('ボタンが存在するかどうかをチェックする', async () => {\n\t\t\tconst canvas = within(canvasElement);\n\t\t\tawait userEvent.click(canvas.getByRole('button'));\n\t\t});\n\n\t\tawait step('ボタンの色がプロパティの通りに設定されている', async () => {\n\t\t\tawait expect(args.bgColor).toBe('--pineapple-yellow');\n\t\t});\n\n\t\tawait step('ボタンのテキストがプロパティの通りに設定されている', async () => {\n\t\t\tawait expect(args.label).toBe('Pineapple Yellow');\n\t\t});\n\t}\n};\n\n/**\n * 意思決定の場で、キャンセルや取りやめなどの否定的な意思決定を行うボタンで使用します。\n *\n * Used in decision-making situations with buttons for negative decisions such as cancel or withdraw.\n */\nexport const Blue: Story = {\n\targs: {\n\t\tbgColor: CCLVividColor.SODA_BLUE,\n\t\tlabel: 'Soda Blue',\n\t\tonClick: fn()\n\t},\n\tplay: async ({ args, canvasElement, step }) => {\n\t\tawait step('ボタンが存在するかどうかをチェックする', async () => {\n\t\t\tconst canvas = within(canvasElement);\n\t\t\tawait userEvent.click(canvas.getByRole('button'));\n\t\t});\n\n\t\tawait step('ボタンの色がプロパティの通りに設定されている', async () => {\n\t\t\tawait expect(args.bgColor).toBe('--soda-blue');\n\t\t});\n\n\t\tawait step('ボタンのテキストがプロパティの通りに設定されている', async () => {\n\t\t\tawait expect(args.label).toBe('Soda Blue');\n\t\t});\n\t}\n};\n\nexport const Green: Story = {\n\targs: {\n\t\tbgColor: CCLVividColor.MELON_GREEN,\n\t\tlabel: 'Melon Green',\n\t\tonClick: fn()\n\t},\n\tplay: async ({ args, canvasElement, step }) => {\n\t\tawait step('ボタンが存在するかどうかをチェックする', async () => {\n\t\t\tconst canvas = within(canvasElement);\n\t\t\tawait userEvent.click(canvas.getByRole('button'));\n\t\t});\n\n\t\tawait step('ボタンの色がプロパティの通りに設定されている', async () => {\n\t\t\tawait expect(args.bgColor).toBe('--melon-green');\n\t\t});\n\n\t\tawait step('ボタンのテキストがプロパティの通りに設定されている', async () => {\n\t\t\tawait expect(args.label).toBe('Melon Green');\n\t\t});\n\t}\n};\n\nexport const Purple: Story = {\n\targs: {\n\t\tbgColor: CCLVividColor.GRAPE_PURPLE,\n\t\tlabel: 'Grape Purple',\n\t\tonClick: fn()\n\t},\n\tplay: async ({ args, canvasElement, step }) => {\n\t\tawait step('ボタンが存在するかどうかをチェックする', async () => {\n\t\t\tconst canvas = within(canvasElement);\n\t\t\tawait userEvent.click(canvas.getByRole('button'));\n\t\t});\n\n\t\tawait step('ボタンの色がプロパティの通りに設定されている', async () => {\n\t\t\tawait expect(args.bgColor).toBe('--grape-purple');\n\t\t});\n\n\t\tawait step('ボタンのテキストがプロパティの通りに設定されている', async () => {\n\t\t\tawait expect(args.label).toBe('Grape Purple');\n\t\t});\n\t}\n};\n\nexport const Grey: Story = {\n\targs: {\n\t\tbgColor: CCLVividColor.WRAP_GREY,\n\t\tlabel: 'Wrap Grey',\n\t\tonClick: fn()\n\t},\n\tplay: async ({ args, canvasElement, step }) => {\n\t\tawait step('ボタンが存在するかどうかをチェックする', async () => {\n\t\t\tconst canvas = within(canvasElement);\n\t\t\tawait userEvent.click(canvas.getByRole('button'));\n\t\t});\n\n\t\tawait step('ボタンの色がプロパティの通りに設定されている', async () => {\n\t\t\tawait expect(args.bgColor).toBe('--wrap-grey');\n\t\t});\n\n\t\tawait step('ボタンのテキストがプロパティの通りに設定されている', async () => {\n\t\t\tawait expect(args.label).toBe('Wrap Grey');\n\t\t});\n\t}\n};\n"],"names":["target","button","anchor","cov_2cfb0vw5au","s","meta","title","component","Button","tags","parameters","layout","argTypes","bgColor","control","type","options","CCLVividColor","STRAWBERRY_PINK","PINEAPPLE_YELLOW","SODA_BLUE","MELON_GREEN","GRAPE_PURPLE","WRAP_GREY","onClick","fn","Pink","args","label","play","canvasElement","step","canvas","within","userEvent","click","getByRole","expect","toBe","Yellow","Blue","Green","Purple","Grey","docs","source","originalSource","description","story"],"mappings":"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"}